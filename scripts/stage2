#!/bin/sh

. config/options

mkdir -p $INSTALL/sbin
mkdir -p $INSTALL/etc/init.d
mkdir -p $INSTALL/codecs
mkdir -p $INSTALL/firmware
mkdir -p $INSTALL/etc/ndiswrapper

cp $CONFIG/init $INSTALL/sbin
[ "$FUSEISO" = yes ] && cp $CONFIG/cdvdimg_ext $INSTALL/etc
cp $CONFIG/file_ext $INSTALL/etc
cp $CONFIG/list_ext $INSTALL/etc
cp $CONFIG/subs_ext $INSTALL/etc

$SCRIPTS/install linux config $1
$SCRIPTS/install linux modules-stage2 $1
$SCRIPTS/install alsa $1
[ "$CONSOLE" = yes ] && $SCRIPTS/install tvout $1
$SCRIPTS/install pciutils $1
[ "$XORG" = yes ] && $SCRIPTS/install Xorg $1
[ "$SDL" = yes ] && $SCRIPTS/install SDL $1
$SCRIPTS/install debug $1
[ "$GUI" = enna ] && $SCRIPTS/install enna $1
$SCRIPTS/install MPlayer $1
$SCRIPTS/install installator $1
$SCRIPTS/install configurator $1
$SCRIPTS/install i18n $1
$SCRIPTS/install webgui $1
$SCRIPTS/install sleeptimer $1
$SCRIPTS/install theme $1
$SCRIPTS/install dmidecode $1
$SCRIPTS/install eeepc-acpi $1
$SCRIPTS/install appleir $1
$SCRIPTS/install automountd $1
[ "$LCD4LINUX" = yes ] && $SCRIPTS/install lcd4linux $1
[ "$DEVTOOLS" = yes ] && $SCRIPTS/install strace $1
[ "$NETWORK" = yes ] && $SCRIPTS/install network $1
[ "$FUSEISO" = yes ] && $SCRIPTS/install fuseiso $1
[ "$PYTHON" = yes ] && $SCRIPTS/install Python $1
[ "$BLUETOOTH" = yes ] && $SCRIPTS/install bluez $1
[ "$EMULATORS" = yes ] && $SCRIPTS/install emulators $1
[ "$GAMES" = yes ] && $SCRIPTS/install games $1
[ "$VDR" = yes ] && $SCRIPTS/install vdr $1 && $SCRIPTS/install vdr-plugins $1
[ "$VIEW_IMG" = yes ] && $SCRIPTS/install image_viewer $1
[ "$GDB" = yes ] && $SCRIPTS/install gdb $1
[ "$EXTRACODECS" = yes ] && $SCRIPTS/install extra-codecs-nonfree $1
[ "$EXTRAFIRMWARES" = yes ] && $SCRIPTS/install extra-firmwares-nonfree $1
[ "$DIGIMATRIX" = yes ] && $SCRIPTS/install digitools $1
[ "$DEBUG" = yes ] && echo -n "" >$INSTALL/etc/debug

# strip modules from 2nd-stage
for MOD in `find $INSTALL/lib/modules/ -name *.ko`; do
  $STRIP --strip-debug $MOD
done

ln -s /firmware $INSTALL/lib
BIN_DIRS="lib usr/bin usr/lib"

if [ "$COMPRESSION_METHOD" = lzma ]; then
  tar cf - -C $INSTALL $BIN_DIRS | lzma e $INSTALL/bin.tar.lzma -si -a2
elif [ "$COMPRESSION_METHOD" = gzip ]; then
  tar czf $INSTALL/bin.tar.gz -C $INSTALL $BIN_DIRS
else
  tar cf $INSTALL/bin.tar -C $INSTALL $BIN_DIRS
fi

for i in $BIN_DIRS; do rm -rf $INSTALL/$i ; done
echo "$GEEXBOX_VERSION" > $INSTALL/etc/version
