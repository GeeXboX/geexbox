Fix clash between gupnp and gupnp-av with the xml_util_* functions.

diff -Naur libgupnp/gupnp-control-point.c libgupnp.xml/gupnp-control-point.c
--- a/libgupnp/gupnp-control-point.c	2009-08-24 18:29:33.000000000 +0200
+++ b/libgupnp/gupnp-control-point.c	2010-02-16 13:44:44.000000000 +0100
@@ -343,7 +343,7 @@
                         continue;
 
                 /* See if this is a matching service */
-                prop = xml_util_get_child_element_content (element,
+                prop = gupnp_xml_util_get_child_element_content (element,
                                                            "serviceType");
                 if (!prop)
                         continue;
@@ -390,7 +390,7 @@
                         continue;
 
                 /* Recurse into children */
-                children = xml_util_get_element (element,
+                children = gupnp_xml_util_get_element (element,
                                                  "deviceList",
                                                  NULL);
 
@@ -405,7 +405,7 @@
                 }
 
                 /* See if this is a matching device */
-                prop = xml_util_get_child_element_content (element, "UDN");
+                prop = gupnp_xml_util_get_child_element_content (element, "UDN");
                 if (!prop)
                         continue;
 
@@ -420,7 +420,7 @@
 
                 if (service_type) {
                         /* Dive into serviceList */
-                        children = xml_util_get_element (element,
+                        children = gupnp_xml_util_get_element (element,
                                                          "serviceList",
                                                          NULL);
 
@@ -459,7 +459,7 @@
         SoupURI *url_base;
 
         /* Save the URL base, if any */
-        element = xml_util_get_element ((xmlNode *) doc->doc,
+        element = gupnp_xml_util_get_element ((xmlNode *) doc->doc,
                                         "root",
                                         NULL);
         if (element == NULL) {
@@ -474,7 +474,7 @@
         if (element == NULL)
                 return;
 
-        url_base = xml_util_get_child_element_content_uri (element,
+        url_base = gupnp_xml_util_get_child_element_content_uri (element,
                                                            "URLBase",
                                                            NULL);
         if (!url_base)
diff -Naur libgupnp/gupnp-device-info.c libgupnp.xml/gupnp-device-info.c
--- a/libgupnp/gupnp-device-info.c	2009-08-24 18:29:33.000000000 +0200
+++ b/libgupnp/gupnp-device-info.c	2010-02-16 13:44:44.000000000 +0100
@@ -444,7 +444,7 @@
 
         if (!info->priv->udn) {
                 info->priv->udn =
-                        xml_util_get_child_element_content_glib
+                        gupnp_xml_util_get_child_element_content_glib
                                 (info->priv->element, "UDN");
         }
 
@@ -466,7 +466,7 @@
 
         if (!info->priv->device_type) {
                 info->priv->device_type =
-                        xml_util_get_child_element_content_glib
+                        gupnp_xml_util_get_child_element_content_glib
                                 (info->priv->element, "deviceType");
         }
 
@@ -486,7 +486,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_DEVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_glib (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_glib (info->priv->element,
                                                         "friendlyName");
 }
 
@@ -503,7 +503,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_DEVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_glib (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_glib (info->priv->element,
                                                         "manufacturer");
 }
 
@@ -520,7 +520,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_DEVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_url (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_url (info->priv->element,
                                                        "manufacturerURL",
                                                        info->priv->url_base);
 }
@@ -538,7 +538,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_DEVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_glib (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_glib (info->priv->element,
                                                         "modelDescription");
 }
 
@@ -555,7 +555,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_DEVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_glib (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_glib (info->priv->element,
                                                         "modelName");
 }
 
@@ -572,7 +572,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_DEVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_glib (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_glib (info->priv->element,
                                                         "modelNumber");
 }
 
@@ -589,7 +589,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_DEVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_url (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_url (info->priv->element,
                                                        "modelURL",
                                                        info->priv->url_base);
 }
@@ -607,7 +607,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_DEVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_glib (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_glib (info->priv->element,
                                                         "serialNumber");
 }
 
@@ -624,7 +624,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_DEVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_glib (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_glib (info->priv->element,
                                                         "UPC");
 }
 
@@ -642,7 +642,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_DEVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_url (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_url (info->priv->element,
                                                        "presentationURL",
                                                        info->priv->url_base);
 }
@@ -664,15 +664,15 @@
 
         icon = g_slice_new0 (Icon);
 
-        icon->mime_type = xml_util_get_child_element_content     (element,
+        icon->mime_type = gupnp_xml_util_get_child_element_content     (element,
                                                                   "mimetype");
-        icon->width     = xml_util_get_child_element_content_int (element,
+        icon->width     = gupnp_xml_util_get_child_element_content_int (element,
                                                                   "width");
-        icon->height    = xml_util_get_child_element_content_int (element,
+        icon->height    = gupnp_xml_util_get_child_element_content_int (element,
                                                                   "height");
-        icon->depth     = xml_util_get_child_element_content_int (element,
+        icon->depth     = gupnp_xml_util_get_child_element_content_int (element,
                                                                   "depth");
-        icon->url       = xml_util_get_child_element_content     (element,
+        icon->url       = gupnp_xml_util_get_child_element_content     (element,
                                                                   "url");
 
         return icon;
@@ -737,7 +737,7 @@
         /* List available icons */
         icons = NULL;
 
-        element = xml_util_get_element (info->priv->element,
+        element = gupnp_xml_util_get_element (info->priv->element,
                                         "iconList",
                                         NULL);
         if (!element)
@@ -943,7 +943,7 @@
 
         g_return_val_if_fail (GUPNP_IS_DEVICE_INFO (info), NULL);
 
-        caps = xml_util_get_child_element_content (info->priv->element,
+        caps = gupnp_xml_util_get_child_element_content (info->priv->element,
                                                    "X_DLNACAP");
 
         if (caps) {
@@ -997,7 +997,7 @@
         g_return_val_if_fail (GUPNP_IS_DEVICE_INFO (info), NULL);
         g_return_val_if_fail (element != NULL, NULL);
 
-        return xml_util_get_child_element_content_glib (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_glib (info->priv->element,
                                                         element);
 }
 
@@ -1031,7 +1031,7 @@
 
         devices = NULL;
 
-        element = xml_util_get_element (info->priv->element,
+        element = gupnp_xml_util_get_element (info->priv->element,
                                         "deviceList",
                                         NULL);
         if (!element)
@@ -1069,7 +1069,7 @@
 
         device_types = NULL;
 
-        element = xml_util_get_element (info->priv->element,
+        element = gupnp_xml_util_get_element (info->priv->element,
                                         "deviceList",
                                         NULL);
         if (!element)
@@ -1079,7 +1079,7 @@
                 if (!strcmp ("device", (char *) element->name)) {
                         char *type;
 
-                        type = xml_util_get_child_element_content_glib
+                        type = gupnp_xml_util_get_child_element_content_glib
                                                    (element, "deviceType");
                         if (!type)
                                 continue;
@@ -1123,7 +1123,7 @@
 
         device = NULL;
 
-        element = xml_util_get_element (info->priv->element,
+        element = gupnp_xml_util_get_element (info->priv->element,
                                         "deviceList",
                                         NULL);
         if (!element)
@@ -1134,7 +1134,7 @@
                         xmlNode *type_element;
                         xmlChar *type_str;
 
-                        type_element = xml_util_get_element (element,
+                        type_element = gupnp_xml_util_get_element (element,
                                                              "deviceType",
                                                              NULL);
                         if (!type_element)
@@ -1187,7 +1187,7 @@
 
         services = NULL;
 
-        element = xml_util_get_element (info->priv->element,
+        element = gupnp_xml_util_get_element (info->priv->element,
                                         "serviceList",
                                         NULL);
         if (!element)
@@ -1225,7 +1225,7 @@
 
         service_types = NULL;
 
-        element = xml_util_get_element (info->priv->element,
+        element = gupnp_xml_util_get_element (info->priv->element,
                                         "serviceList",
                                         NULL);
         if (!element)
@@ -1235,7 +1235,7 @@
                 if (!strcmp ("service", (char *) element->name)) {
                         char *type;
 
-                        type = xml_util_get_child_element_content_glib
+                        type = gupnp_xml_util_get_child_element_content_glib
                                                    (element, "serviceType");
                         if (!type)
                                 continue;
@@ -1279,7 +1279,7 @@
 
         service = NULL;
 
-        element = xml_util_get_element (info->priv->element,
+        element = gupnp_xml_util_get_element (info->priv->element,
                                         "serviceList",
                                         NULL);
         if (!element)
@@ -1290,7 +1290,7 @@
                         xmlNode *type_element;
                         xmlChar *type_str;
 
-                        type_element = xml_util_get_element (element,
+                        type_element = gupnp_xml_util_get_element (element,
                                                              "serviceType",
                                                              NULL);
                         if (!type_element)
diff -Naur libgupnp/gupnp-resource-factory.c libgupnp.xml/gupnp-resource-factory.c
--- a/libgupnp/gupnp-resource-factory.c	2009-08-24 18:29:33.000000000 +0200
+++ b/libgupnp/gupnp-resource-factory.c	2010-02-16 13:44:44.000000000 +0100
@@ -144,7 +144,7 @@
         g_return_val_if_fail (location != NULL, NULL);
         g_return_val_if_fail (url_base != NULL, NULL);
 
-        upnp_type = xml_util_get_child_element_content_glib (element,
+        upnp_type = gupnp_xml_util_get_child_element_content_glib (element,
                                                              "deviceType");
         if (upnp_type) {
                 gpointer value;
@@ -264,7 +264,7 @@
         g_return_val_if_fail (element != NULL, NULL);
         g_return_val_if_fail (url_base != NULL, NULL);
 
-        upnp_type = xml_util_get_child_element_content_glib (element,
+        upnp_type = gupnp_xml_util_get_child_element_content_glib (element,
                                                              "deviceType");
         if (upnp_type) {
                 gpointer value;
@@ -326,7 +326,7 @@
         g_return_val_if_fail (location != NULL, NULL);
         g_return_val_if_fail (url_base != NULL, NULL);
 
-        upnp_type = xml_util_get_child_element_content_glib (element,
+        upnp_type = gupnp_xml_util_get_child_element_content_glib (element,
                                                              "serviceType");
         if (upnp_type) {
                 gpointer value;
diff -Naur libgupnp/gupnp-root-device.c libgupnp.xml/gupnp-root-device.c
--- a/libgupnp/gupnp-root-device.c	2009-08-24 18:29:33.000000000 +0200
+++ b/libgupnp/gupnp-root-device.c	2010-02-16 13:44:44.000000000 +0100
@@ -174,14 +174,14 @@
         char *usn;
 
         /* Add device */
-        udn = xml_util_get_child_element_content (element, "UDN");
+        udn = gupnp_xml_util_get_child_element_content (element, "UDN");
         if (!udn) {
                 g_warning ("No UDN specified.");
 
                 return;
         }
 
-        device_type = xml_util_get_child_element_content (element,
+        device_type = gupnp_xml_util_get_child_element_content (element,
                                                           "deviceType");
         if (!device_type) {
                 g_warning ("No deviceType specified.");
@@ -204,7 +204,7 @@
         xmlFree (device_type);
 
         /* Add embedded services */
-        child = xml_util_get_element (element,
+        child = gupnp_xml_util_get_element (element,
                                       "serviceList",
                                       NULL);
         if (child) {
@@ -214,7 +214,7 @@
                         if (strcmp ("service", (char *) child->name))
                                 continue;
 
-                        service_type = xml_util_get_child_element_content
+                        service_type = gupnp_xml_util_get_child_element_content
                                                 (child, "serviceType");
                         if (!service_type)
                                 continue;
@@ -237,7 +237,7 @@
         xmlFree (udn);
 
         /* Add embedded devices */
-        child = xml_util_get_element (element,
+        child = gupnp_xml_util_get_element (element,
                                       "deviceList",
                                       NULL);
         if (child) {
@@ -360,7 +360,7 @@
         }
 
         /* Find correct element */
-        root_element = xml_util_get_element ((xmlNode *) description_doc->doc,
+        root_element = gupnp_xml_util_get_element ((xmlNode *) description_doc->doc,
                                              "root",
                                              NULL);
         if (!root_element) {
@@ -369,7 +369,7 @@
                 goto DONE;
         }
 
-        element = xml_util_get_element (root_element,
+        element = gupnp_xml_util_get_element (root_element,
                                         "device",
                                         NULL);
         if (!element) {
@@ -429,7 +429,7 @@
         g_free (relative_location);
 
         /* Save the URL base, if any */
-        url_base = xml_util_get_child_element_content_uri (root_element,
+        url_base = gupnp_xml_util_get_child_element_content_uri (root_element,
                                                            "URLBase",
                                                            NULL);
         if (!url_base)
diff -Naur libgupnp/gupnp-service.c libgupnp.xml/gupnp-service.c
--- a/libgupnp/gupnp-service.c	2009-12-02 15:27:43.000000000 +0100
+++ b/libgupnp/gupnp-service.c	2010-02-16 13:44:44.000000000 +0100
@@ -485,9 +485,9 @@
         }
 
         /* Append to response */
-        xml_util_start_element (action->response_str, argument);
+        gupnp_xml_util_start_element (action->response_str, argument);
         gvalue_util_value_append_to_xml_string (value, action->response_str);
-        xml_util_end_element (action->response_str, argument);
+        gupnp_xml_util_end_element (action->response_str, argument);
 }
 
 /**
@@ -554,34 +554,34 @@
         /* Replace response_str with a SOAP Fault */
         g_string_erase (action->response_str, 0, -1);
 
-        xml_util_start_element (action->response_str, "s:Fault");
+        gupnp_xml_util_start_element (action->response_str, "s:Fault");
 
-        xml_util_start_element (action->response_str, "faultcode");
+        gupnp_xml_util_start_element (action->response_str, "faultcode");
         g_string_append (action->response_str, "s:Client");
-        xml_util_end_element (action->response_str, "faultcode");
+        gupnp_xml_util_end_element (action->response_str, "faultcode");
 
-        xml_util_start_element (action->response_str, "faultstring");
+        gupnp_xml_util_start_element (action->response_str, "faultstring");
         g_string_append (action->response_str, "UPnPError");
-        xml_util_end_element (action->response_str, "faultstring");
+        gupnp_xml_util_end_element (action->response_str, "faultstring");
 
-        xml_util_start_element (action->response_str, "detail");
+        gupnp_xml_util_start_element (action->response_str, "detail");
 
-        xml_util_start_element (action->response_str,
+        gupnp_xml_util_start_element (action->response_str,
                                 "UPnPError "
                                 "xmlns=\"urn:schemas-upnp-org:control-1-0\"");
 
-        xml_util_start_element (action->response_str, "errorCode");
+        gupnp_xml_util_start_element (action->response_str, "errorCode");
         g_string_append_printf (action->response_str, "%u", error_code);
-        xml_util_end_element (action->response_str, "errorCode");
+        gupnp_xml_util_end_element (action->response_str, "errorCode");
 
-        xml_util_start_element (action->response_str, "errorDescription");
-        xml_util_add_content (action->response_str, error_description);
-        xml_util_end_element (action->response_str, "errorDescription");
+        gupnp_xml_util_start_element (action->response_str, "errorDescription");
+        gupnp_xml_util_add_content (action->response_str, error_description);
+        gupnp_xml_util_end_element (action->response_str, "errorDescription");
 
-        xml_util_end_element (action->response_str, "UPnPError");
-        xml_util_end_element (action->response_str, "detail");
+        gupnp_xml_util_end_element (action->response_str, "UPnPError");
+        gupnp_xml_util_end_element (action->response_str, "detail");
 
-        xml_util_end_element (action->response_str, "s:Fault");
+        gupnp_xml_util_end_element (action->response_str, "s:Fault");
 
         soup_message_set_status (action->msg,
                                  SOUP_STATUS_INTERNAL_SERVER_ERROR);
@@ -627,7 +627,7 @@
 {
         GString *str;
 
-        str = xml_util_new_string ();
+        str = gupnp_xml_util_new_string ();
 
         g_string_append (str, "<u:");
         g_string_append (str, action_name);
@@ -771,7 +771,7 @@
                 return;
         }
 
-        action_node = xml_util_get_element ((xmlNode *) doc,
+        action_node = gupnp_xml_util_get_element ((xmlNode *) doc,
                                             "Envelope",
                                             "Body",
                                             action_name,
@@ -1728,7 +1728,7 @@
         GString *str;
 
         /* Compose property set */
-        str = xml_util_new_string ();
+        str = gupnp_xml_util_new_string ();
 
         g_string_append (str,
                          "<?xml version=\"1.0\"?>"
@@ -1738,9 +1738,9 @@
 
         /* Add variables */
         while ((data = g_queue_pop_head (queue))) {
-                xml_util_start_element (str, data->variable);
+                gupnp_xml_util_start_element (str, data->variable);
                 gvalue_util_value_append_to_xml_string (&data->value, str);
-                xml_util_end_element (str, data->variable);
+                gupnp_xml_util_end_element (str, data->variable);
 
                 /* Cleanup */
                 notify_data_free (data);
diff -Naur libgupnp/gupnp-service-info.c libgupnp.xml/gupnp-service-info.c
--- a/libgupnp/gupnp-service-info.c	2009-12-02 15:27:43.000000000 +0100
+++ b/libgupnp/gupnp-service-info.c	2010-02-16 13:44:44.000000000 +0100
@@ -457,7 +457,7 @@
 
         if (!info->priv->service_type) {
                 info->priv->service_type =
-                        xml_util_get_child_element_content_glib
+                        gupnp_xml_util_get_child_element_content_glib
                                 (info->priv->element, "serviceType");
         }
 
@@ -477,7 +477,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_SERVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_glib (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_glib (info->priv->element,
                                                         "serviceId");
 }
 
@@ -494,7 +494,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_SERVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_url (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_url (info->priv->element,
                                                        "SCPDURL",
                                                        info->priv->url_base);
 }
@@ -512,7 +512,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_SERVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_url (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_url (info->priv->element,
                                                        "controlURL",
                                                        info->priv->url_base);
 }
@@ -530,7 +530,7 @@
 {
         g_return_val_if_fail (GUPNP_IS_SERVICE_INFO (info), NULL);
 
-        return xml_util_get_child_element_content_url (info->priv->element,
+        return gupnp_xml_util_get_child_element_content_url (info->priv->element,
                                                        "eventSubURL",
                                                        info->priv->url_base);
 }
diff -Naur libgupnp/gupnp-service-introspection.c libgupnp.xml/gupnp-service-introspection.c
--- a/libgupnp/gupnp-service-introspection.c	2009-01-06 15:32:22.000000000 +0100
+++ b/libgupnp/gupnp-service-introspection.c	2010-02-16 13:44:44.000000000 +0100
@@ -235,7 +235,7 @@
 {
         xmlChar *default_str;
 
-        default_str = xml_util_get_child_element_content (variable_node,
+        default_str = gupnp_xml_util_get_child_element_content (variable_node,
                                                           "defaultValue");
         if (default_str) {
                 gvalue_util_set_value_from_string (&variable->default_value,
@@ -276,7 +276,7 @@
 {
         xmlChar *limit_str;
 
-        limit_str = xml_util_get_child_element_content (limit_node,
+        limit_str = gupnp_xml_util_get_child_element_content (limit_node,
                                                         limit_name);
         if (limit_str) {
                 gvalue_util_set_value_from_string (limit, (char *) limit_str);
@@ -292,7 +292,7 @@
         xmlNodePtr limit_node;
 
         if (variable->is_numeric) {
-                limit_node = xml_util_get_element (variable_node,
+                limit_node = gupnp_xml_util_get_element (variable_node,
                                                    "allowedValueRange",
                                                    NULL);
                 if (limit_node == NULL)
@@ -308,7 +308,7 @@
                                 &(variable->step),
                                 "step");
         } else if (variable->type == G_TYPE_STRING) {
-                limit_node = xml_util_get_element (variable_node,
+                limit_node = gupnp_xml_util_get_element (variable_node,
                                                    "allowedValueList",
                                                    NULL);
                 if (limit_node == NULL)
@@ -469,7 +469,7 @@
         char *data_type;
         gboolean success;
 
-        data_type = xml_util_get_child_element_content_glib (variable_node,
+        data_type = gupnp_xml_util_get_child_element_content_glib (variable_node,
                                                              "dataType");
         if (!data_type) {
                 /* We can't report much about a state variable whose dataType
@@ -487,11 +487,11 @@
         set_variable_limits (variable_node, variable);
         set_default_value (variable_node, variable);
 
-        send_events = xml_util_get_child_element_content
+        send_events = gupnp_xml_util_get_child_element_content
                                        (variable_node, "sendEventsAttribute");
         if (send_events == NULL) {
                 /* Some documents put it as attribute of the tag */
-                send_events = xml_util_get_attribute_contents (variable_node,
+                send_events = gupnp_xml_util_get_attribute_contents (variable_node,
                                                                "sendEvents");
         }
 
@@ -517,11 +517,11 @@
         char *name, *state_var;
         xmlChar *direction;
 
-        name      = xml_util_get_child_element_content_glib
+        name      = gupnp_xml_util_get_child_element_content_glib
                                        (argument_node, "name");
-        state_var = xml_util_get_child_element_content_glib
+        state_var = gupnp_xml_util_get_child_element_content_glib
                                        (argument_node, "relatedStateVariable");
-        direction = xml_util_get_child_element_content
+        direction = gupnp_xml_util_get_child_element_content
                                        (argument_node, "direction");
 
         if (!name || !state_var || !direction) {
@@ -544,7 +544,7 @@
                 argument->direction = GUPNP_SERVICE_ACTION_ARG_DIRECTION_OUT;
         xmlFree (direction);
 
-        if (xml_util_get_element (argument_node, "retval", NULL) != NULL)
+        if (gupnp_xml_util_get_element (argument_node, "retval", NULL) != NULL)
                 argument->retval = TRUE;
 
         return argument;
@@ -563,7 +563,7 @@
         xmlNodePtr arglist_node;
         xmlNodePtr argument_node;
 
-        arglist_node = xml_util_get_element ((xmlNode *) action_node,
+        arglist_node = gupnp_xml_util_get_element ((xmlNode *) action_node,
                                              "argumentList",
                                              NULL);
         if (!arglist_node)
@@ -611,7 +611,7 @@
                 if (strcmp ("action", (char *) action_node->name) != 0)
                         continue;
 
-                name = xml_util_get_child_element_content_glib (action_node,
+                name = gupnp_xml_util_get_child_element_content_glib (action_node,
                                                                 "name");
                 if (!name)
                         continue;
@@ -656,7 +656,7 @@
                             (char *) variable_node->name) != 0)
                         continue;
 
-                name = xml_util_get_child_element_content_glib (variable_node,
+                name = gupnp_xml_util_get_child_element_content_glib (variable_node,
                                                                 "name");
                 if (!name)
                         continue;
@@ -688,7 +688,7 @@
         g_return_if_fail (scpd != NULL);
 
         /* Get actionList element */
-        element = xml_util_get_element ((xmlNode *) scpd,
+        element = gupnp_xml_util_get_element ((xmlNode *) scpd,
                                         "scpd",
                                         "actionList",
                                         NULL);
@@ -696,7 +696,7 @@
                 introspection->priv->actions = get_actions (element);
 
         /* Get serviceStateTable element */
-        element = xml_util_get_element ((xmlNode *) scpd,
+        element = gupnp_xml_util_get_element ((xmlNode *) scpd,
                                         "scpd",
                                         "serviceStateTable",
                                         NULL);
diff -Naur libgupnp/gupnp-service-proxy.c libgupnp.xml/gupnp-service-proxy.c
--- a/libgupnp/gupnp-service-proxy.c	2009-12-02 15:27:43.000000000 +0100
+++ b/libgupnp/gupnp-service-proxy.c	2010-02-16 13:44:44.000000000 +0100
@@ -629,7 +629,7 @@
         http_request_set_accept_language (ret->msg);
 
         /* Set up envelope */
-        ret->msg_str = xml_util_new_string ();
+        ret->msg_str = gupnp_xml_util_new_string ();
 
         g_string_append (ret->msg_str,
                          "<?xml version=\"1.0\"?>"
@@ -739,9 +739,9 @@
                     GString    *msg_str)
 {
         /* Write parameter pair */
-        xml_util_start_element (msg_str, arg_name);
+        gupnp_xml_util_start_element (msg_str, arg_name);
         gvalue_util_value_append_to_xml_string (value, msg_str);
-        xml_util_end_element (msg_str, arg_name);
+        gupnp_xml_util_end_element (msg_str, arg_name);
 }
 
 /**
@@ -950,15 +950,15 @@
 	}
 
         /* Get parameter list */
-        *params = xml_util_get_element ((xmlNode *) response,
+        *params = gupnp_xml_util_get_element ((xmlNode *) response,
                                         "Envelope",
                                         NULL);
         if (*params != NULL)
-                *params = xml_util_real_node ((*params)->children);
+                *params = gupnp_xml_util_real_node ((*params)->children);
 
         if (*params != NULL) {
                 if (strcmp ((const char *) (*params)->name, "Header") == 0)
-                        *params = xml_util_real_node ((*params)->next);
+                        *params = gupnp_xml_util_real_node ((*params)->next);
 
                 if (*params != NULL)
                         if (strcmp ((const char *) (*params)->name, "Body") != 0)
@@ -966,7 +966,7 @@
         }
 
         if (*params != NULL)
-                *params = xml_util_real_node ((*params)->children);
+                *params = gupnp_xml_util_real_node ((*params)->children);
 
         if (*params == NULL) {
                 g_set_error (error,
@@ -984,7 +984,7 @@
                 xmlNode *param;
                 char *desc;
 
-                param = xml_util_get_element (*params,
+                param = gupnp_xml_util_get_element (*params,
                                               "detail",
                                               "UPnPError",
                                               NULL);
@@ -1001,7 +1001,7 @@
                 }
 
                 /* Code */
-                code = xml_util_get_child_element_content_int
+                code = gupnp_xml_util_get_child_element_content_int
                                         (param, "errorCode");
                 if (code == -1) {
                         g_set_error (error,
@@ -1015,7 +1015,7 @@
                 }
 
                 /* Description */
-                desc = xml_util_get_child_element_content_glib
+                desc = gupnp_xml_util_get_child_element_content_glib
                                         (param, "errorDescription");
                 if (desc == NULL)
                         desc = g_strdup (action->msg->reason_phrase);
@@ -1045,7 +1045,7 @@
         xmlNode *param;
 
         /* Try to find a matching parameter in the response*/
-        param = xml_util_get_element (params,
+        param = gupnp_xml_util_get_element (params,
                                       arg_name,
                                       NULL);
         if (!param) {
diff -Naur libgupnp/gvalue-util.c libgupnp.xml/gvalue-util.c
--- a/libgupnp/gvalue-util.c	2009-01-06 15:32:22.000000000 +0100
+++ b/libgupnp/gvalue-util.c	2010-02-16 13:44:44.000000000 +0100
@@ -181,7 +181,7 @@
                 /* Escape and append */
                 tmp = g_value_get_string (value);
                 if (tmp != NULL)
-                        xml_util_add_content (str, tmp);
+                        gupnp_xml_util_add_content (str, tmp);
 
                 return TRUE;
 
@@ -256,7 +256,7 @@
 
                         tmp = g_value_get_string (&transformed_value);
                         if (tmp != NULL)
-                                xml_util_add_content (str, tmp);
+                                gupnp_xml_util_add_content (str, tmp);
 
                         g_value_unset (&transformed_value);
 
diff -Naur libgupnp/xml-util.c libgupnp.xml/xml-util.c
--- a/libgupnp/xml-util.c	2009-08-24 18:29:33.000000000 +0200
+++ b/libgupnp/xml-util.c	2010-02-16 13:44:44.000000000 +0100
@@ -26,7 +26,7 @@
 
 /* libxml DOM interface helpers */
 xmlNode *
-xml_util_get_element (xmlNode *node,
+gupnp_xml_util_get_element (xmlNode *node,
                       ...)
 {
         va_list var_args;
@@ -54,12 +54,12 @@
 }
 
 xmlChar *
-xml_util_get_child_element_content (xmlNode    *node,
+gupnp_xml_util_get_child_element_content (xmlNode    *node,
                                     const char *child_name)
 {
         xmlNode *child_node;
 
-        child_node = xml_util_get_element (node,
+        child_node = gupnp_xml_util_get_element (node,
                                            child_name,
                                            NULL);
         if (!child_node)
@@ -69,13 +69,13 @@
 }
 
 int
-xml_util_get_child_element_content_int (xmlNode    *node,
+gupnp_xml_util_get_child_element_content_int (xmlNode    *node,
                                         const char *child_name)
 {
         xmlChar *content;
         int i;
 
-        content = xml_util_get_child_element_content (node, child_name);
+        content = gupnp_xml_util_get_child_element_content (node, child_name);
         if (!content)
                 return -1;
 
@@ -87,13 +87,13 @@
 }
 
 char *
-xml_util_get_child_element_content_glib (xmlNode    *node,
+gupnp_xml_util_get_child_element_content_glib (xmlNode    *node,
                                          const char *child_name)
 {
         xmlChar *content;
         char *copy;
 
-        content = xml_util_get_child_element_content (node, child_name);
+        content = gupnp_xml_util_get_child_element_content (node, child_name);
         if (!content)
                 return NULL;
 
@@ -105,14 +105,14 @@
 }
 
 SoupURI *
-xml_util_get_child_element_content_uri (xmlNode    *node,
+gupnp_xml_util_get_child_element_content_uri (xmlNode    *node,
                                         const char *child_name,
                                         SoupURI    *base)
 {
         xmlChar *content;
         SoupURI *uri;
 
-        content = xml_util_get_child_element_content (node, child_name);
+        content = gupnp_xml_util_get_child_element_content (node, child_name);
         if (!content)
                 return NULL;
 
@@ -124,14 +124,14 @@
 }
 
 char *
-xml_util_get_child_element_content_url (xmlNode    *node,
+gupnp_xml_util_get_child_element_content_url (xmlNode    *node,
                                         const char *child_name,
                                         SoupURI    *base)
 {
         SoupURI *uri;
         char *url;
 
-        uri = xml_util_get_child_element_content_uri (node, child_name, base);
+        uri = gupnp_xml_util_get_child_element_content_uri (node, child_name, base);
         if (!uri)
                 return NULL;
 
@@ -143,7 +143,7 @@
 }
 
 xmlChar *
-xml_util_get_attribute_contents (xmlNode    *node,
+gupnp_xml_util_get_attribute_contents (xmlNode    *node,
                                  const char *attribute_name)
 {
         xmlAttr *attribute;
@@ -162,7 +162,7 @@
 }
 
 /**
- * xml_util_real_node:
+ * gupnp_xml_util_real_node:
  * @node: an %xmlNodePtr
  *
  * Finds the first "real" node (ie, not a comment or whitespace) at or
@@ -173,7 +173,7 @@
  * (Taken from libsoup)
  **/
 xmlNode *
-xml_util_real_node (xmlNode *node)
+gupnp_xml_util_real_node (xmlNode *node)
 {
 	while (node && (node->type == XML_COMMENT_NODE ||
 			xmlIsBlankNode (node)))
@@ -186,13 +186,13 @@
 #define INITIAL_XML_STR_SIZE 100 /* Initial xml string size in bytes */
 
 GString *
-xml_util_new_string (void)
+gupnp_xml_util_new_string (void)
 {
         return g_string_sized_new (INITIAL_XML_STR_SIZE);
 }
 
 void
-xml_util_start_element (GString    *xml_str,
+gupnp_xml_util_start_element (GString    *xml_str,
                         const char *element_name)
 {
         g_string_append_c (xml_str, '<');
@@ -201,7 +201,7 @@
 }
 
 void
-xml_util_end_element (GString    *xml_str,
+gupnp_xml_util_end_element (GString    *xml_str,
                       const char *element_name)
 {
         g_string_append (xml_str, "</");
@@ -210,7 +210,7 @@
 }
 
 void
-xml_util_add_content (GString    *xml_str,
+gupnp_xml_util_add_content (GString    *xml_str,
                       const char *content)
 {
         /* Modified from GLib gmarkup.c */
diff -Naur libgupnp/xml-util.h libgupnp.xml/xml-util.h
--- a/libgupnp/xml-util.h	2009-08-24 18:29:33.000000000 +0200
+++ b/libgupnp/xml-util.h	2010-02-16 13:44:45.000000000 +0100
@@ -29,51 +29,51 @@
 
 /* Misc utilities for inspecting xmlNodes */
 G_GNUC_INTERNAL xmlNode *
-xml_util_get_element                    (xmlNode    *node,
+gupnp_xml_util_get_element                    (xmlNode    *node,
                                          ...) G_GNUC_NULL_TERMINATED;
 
 G_GNUC_INTERNAL xmlChar *
-xml_util_get_child_element_content      (xmlNode    *node,
+gupnp_xml_util_get_child_element_content      (xmlNode    *node,
                                          const char *child_name);
 
 G_GNUC_INTERNAL int
-xml_util_get_child_element_content_int  (xmlNode    *node,
+gupnp_xml_util_get_child_element_content_int  (xmlNode    *node,
                                          const char *child_name);
 
 G_GNUC_INTERNAL char *
-xml_util_get_child_element_content_glib (xmlNode    *node,
+gupnp_xml_util_get_child_element_content_glib (xmlNode    *node,
                                          const char *child_name);
 
 G_GNUC_INTERNAL SoupURI *
-xml_util_get_child_element_content_uri  (xmlNode    *node,
+gupnp_xml_util_get_child_element_content_uri  (xmlNode    *node,
                                          const char *child_name,
                                          SoupURI    *base);
 
 G_GNUC_INTERNAL char *
-xml_util_get_child_element_content_url  (xmlNode    *node,
+gupnp_xml_util_get_child_element_content_url  (xmlNode    *node,
                                          const char *child_name,
                                          SoupURI    *base);
 G_GNUC_INTERNAL xmlChar *
-xml_util_get_attribute_contents         (xmlNode    *node,
+gupnp_xml_util_get_attribute_contents         (xmlNode    *node,
                                          const char *attribute_name);
 
 G_GNUC_INTERNAL xmlNode *
-xml_util_real_node                      (xmlNode    *node);
+gupnp_xml_util_real_node                      (xmlNode    *node);
 
 /* XML string creation helpers */
 G_GNUC_INTERNAL GString *
-xml_util_new_string                     (void);
+gupnp_xml_util_new_string                     (void);
 
 G_GNUC_INTERNAL void
-xml_util_start_element                  (GString    *xml_str,
+gupnp_xml_util_start_element                  (GString    *xml_str,
                                          const char *element_name);
 
 G_GNUC_INTERNAL void
-xml_util_end_element                    (GString    *xml_str,
+gupnp_xml_util_end_element                    (GString    *xml_str,
                                          const char *element_name);
 
 G_GNUC_INTERNAL void
-xml_util_add_content                    (GString    *xml_str,
+gupnp_xml_util_add_content                    (GString    *xml_str,
                                          const char *content);
 
 #endif /* __XML_UTIL_H__ */
