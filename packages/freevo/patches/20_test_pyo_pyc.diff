Index: webserver/src/server.py
===================================================================
--- a/webserver/src/server.py	(révision 8918)
+++ b/webserver/src/server.py	(copie de travail)
@@ -240,8 +240,15 @@
 
         for script_dir, script_import in scripts:
             for module in os.listdir(script_dir):
-                if not module.endswith('.py') or module == '__init__.py':
+                if not module.endswith('.pyo') and not module.endswith('.pyc') and not module.endswith('.py'):
                     continue
+                if module == '__init__.pyo' \
+                or module == '__init__.pyc' \
+                or module == '__init__.py':
+                    continue
+                elif module.endswith('.pyo') \
+                or module.endswith('.pyc'):
+                    module = module[:-1]
                 module = module[:-3]
                 try:
                     exec('import %s.%s as r' % (script_import, module))
Index: ui/contrib/developer/chktab.py
===================================================================
--- a/ui/contrib/developer/chktab.py	(révision 8918)
--- b/ui/contrib/developer/chktab.py	(copie de travail)
@@ -6,7 +6,9 @@
 def scandir(tabfiles, dirname, fnames):
 
     for fname in fnames:
-        if os.path.splitext(fname)[1] != '.py':
+        if os.path.splitext(fname)[1] != '.pyo' \
+        or os.path.splitext(fname)[1] != '.pyc' \
+        or os.path.splitext(fname)[1] != '.py':
             continue
 
         fullname = dirname + '/' + fname
Index: ui/src/gui/areas/handler.py
===================================================================
--- a/ui/src/gui/areas/handler.py	(révision 8918)
--- b/ui/src/gui/areas/handler.py	(copie de travail)
@@ -66,8 +66,11 @@
 # areas
 from default_areas  import *
 for f in os.listdir(os.path.dirname(__file__)):
-    if f.endswith('_area.py'):
-        exec('from %s import *' % f[:-3])
+    if f.endswith('_area.pyo') \
+    or f.endswith('_area.pyc'):
+        exec('from %s import *' % f[:-4])
+    elif f.endswith('_area.py'):
+        exec('from %s import *' % f[:-3])
 
 
 class Handler(object):
Index: ui/src/config/configfile.py
===================================================================
--- a/ui/src/config/configfile.py	(révision 8918)
+++ b/ui/src/config/configfile.py	(copie de travail)
@@ -71,7 +71,9 @@
 #
 for dirname in cfgfilepath[1:]:
     freevoconf = dirname + '/freevo_config.py'
-    if os.path.isfile(freevoconf):
+    if os.path.isfile(freevoconf + 'o') \
+    or os.path.isfile(freevoconf + 'c') \
+    or os.path.isfile(freevoconf):
         log.critical(('freevo_config.py found in %s, please remove it ' +
                       'and use local_conf.py instead!') % freevoconf)
         sys.exit(1)
@@ -80,9 +82,17 @@
 # Load freevo_config.py:
 #
 FREEVO_CONFIG = os.path.join(freevo.conf.SHAREDIR, 'freevo_config.py')
-if os.path.isfile(FREEVO_CONFIG):
+if os.path.isfile(FREEVO_CONFIG + 'o'):
+    FREEVO_CONFIG = FREEVO_CONFIG + 'o'
     log.info('Loading cfg: %s' % FREEVO_CONFIG)
     execfile(FREEVO_CONFIG, globals(), locals())
+elif os.path.isfile(FREEVO_CONFIG + 'c'):
+    FREEVO_CONFIG = FREEVO_CONFIG + 'c'
+    log.info('Loading cfg: %s' % FREEVO_CONFIG)
+    execfile(FREEVO_CONFIG, globals(), locals())
+elif os.path.isfile(FREEVO_CONFIG):
+    log.info('Loading cfg: %s' % FREEVO_CONFIG)
+    execfile(FREEVO_CONFIG, globals(), locals())
     
 else:
     log.critical("Error: %s: no such file" % FREEVO_CONFIG)
@@ -105,7 +115,17 @@
         overridefile = has_config
     else:
         overridefile = dirname + '/local_conf.py'
-    if os.path.isfile(overridefile):
+    test = 0
+    if os.path.isfile(overridefile + 'o'):
+        overridefile = overridefile + 'o'
+        test = 1
+    elif os.path.isfile(overridefile + 'c'):
+        overridefile = overridefile + 'c'
+        test = 1
+    elif os.path.isfile(overridefile):
+        test = 1
+    
+    if test == 1:
         log.info('Loading cfg overrides: %s' % overridefile)
         execfile(overridefile, globals(), locals())
 
Index: ui/src/plugin_loader.py
===================================================================
--- a/ui/src/plugin_loader.py	(révision 8918)
--- b/ui/src/plugin_loader.py	(copie de travail)
@@ -228,7 +228,9 @@
         """
         full_filename = os.path.join(self.path, filename)
 
-        if os.path.isfile(full_filename + '.py'):
+        if os.path.isfile(full_filename + '.pyo') \
+        or os.path.isfile(full_filename + '.pyc') \
+        or os.path.isfile(full_filename + '.py'):
             return filename.replace('/', '.'), None
 
         if os.path.isdir(full_filename):
@@ -236,7 +238,9 @@
 
         full_filename = os.path.join(self.path, 'plugins', filename)
 
-        if os.path.isfile(full_filename + '.py'):
+        if os.path.isfile(full_filename + '.pyo') \
+        or os.path.isfile(full_filename + '.pyc') \
+        or os.path.isfile(full_filename + '.py'):
             return 'plugins.' + filename.replace('/', '.'), None
 
         if os.path.isdir(full_filename):
@@ -248,7 +252,9 @@
                                     filename[filename.find('/')+1:])
             full_filename = os.path.join(self.path, filename)
 
-            if os.path.isfile(full_filename + '.py'):
+            if os.path.isfile(full_filename + '.pyo') \
+            or os.path.isfile(full_filename + '.pyc') \
+            or os.path.isfile(full_filename + '.py'):
                 return filename.replace('/', '.'), special
 
             if os.path.isdir(full_filename):
