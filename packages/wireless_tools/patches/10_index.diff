diff -ur wireless_tools.28.orig/iwconfig.c wireless_tools.28/iwconfig.c
--- wireless_tools.28.orig/iwconfig.c	2006-12-03 18:42:32.000000000 +0100
+++ wireless_tools.28/iwconfig.c	2006-12-03 18:43:36.000000000 +0100
@@ -714,9 +714,9 @@
 		{
 		  if(sscanf(args[i], "%lg", &(freq)) != 1)
 		    ABORT_ARG_TYPE("Set Frequency", SIOCSIWFREQ, args[i]);
-		  if(index(args[i], 'G')) freq *= GIGA;
-		  if(index(args[i], 'M')) freq *= MEGA;
-		  if(index(args[i], 'k')) freq *= KILO;
+		  if(strchr(args[i], 'G')) freq *= GIGA;
+		  if(strchr(args[i], 'M')) freq *= MEGA;
+		  if(strchr(args[i], 'k')) freq *= KILO;
 
 		  iw_float2freq(freq, &(wrq.u.freq));
 
@@ -1013,9 +1013,9 @@
 
 		  if(sscanf(args[i], "%lg", &(brate)) != 1)
 		    ABORT_ARG_TYPE("Set Bit Rate", SIOCSIWRATE, args[i]);
-		  if(index(args[i], 'G')) brate *= GIGA;
-		  if(index(args[i], 'M')) brate *= MEGA;
-		  if(index(args[i], 'k')) brate *= KILO;
+		  if(strchr(args[i], 'G')) brate *= GIGA;
+		  if(strchr(args[i], 'M')) brate *= MEGA;
+		  if(strchr(args[i], 'k')) brate *= KILO;
 		  wrq.u.bitrate.value = (long) brate;
 		  wrq.u.bitrate.fixed = 1;
 
@@ -1194,8 +1194,8 @@
 		if(sscanf(args[i], "%lg", &(temp)) == 1)
 		  {
 		    temp *= MEGA;	/* default = s */
-		    if(index(args[i], 'u')) temp /= MEGA;
-		    if(index(args[i], 'm')) temp /= KILO;
+		    if(strchr(args[i], 'u')) temp /= MEGA;
+		    if(strchr(args[i], 'm')) temp /= KILO;
 		    wrq.u.power.value = (long) temp;
 		    if((wrq.u.power.flags & IW_POWER_TYPE) == 0)
 		      wrq.u.power.flags |= IW_POWER_PERIOD;
@@ -1287,8 +1287,8 @@
 			/* Check if milliWatt
 			 * We authorise a single 'm' as a shorthand for 'mW',
 			 * on the other hand a 'd' probably means 'dBm'... */
-			ismwatt = ((index(args[i], 'm') != NULL)
-				   && (index(args[i], 'd') == NULL));
+			ismwatt = ((strchr(args[i], 'm') != NULL)
+				   && (strchr(args[i], 'd') == NULL));
 
 			/* We could check 'W' alone... Another time... */
 
@@ -1390,8 +1390,8 @@
 		{
 		  /* Normalise lifetime */
 		  temp *= MEGA;	/* default = s */
-		  if(index(args[i], 'u')) temp /= MEGA;
-		  if(index(args[i], 'm')) temp /= KILO;
+		  if(strchr(args[i], 'u')) temp /= MEGA;
+		  if(strchr(args[i], 'm')) temp /= KILO;
 		}
 	      wrq.u.retry.value = (long) temp;
 	      ++i;
diff -ur wireless_tools.28.orig/iwlib.c wireless_tools.28/iwlib.c
--- wireless_tools.28.orig/iwlib.c	2006-12-03 18:42:32.000000000 +0100
+++ wireless_tools.28/iwlib.c	2006-12-03 18:45:47.000000000 +0100
@@ -2125,7 +2125,7 @@
 	   struct sockaddr *sap)
 {
   /* Check if it is a hardware or IP address */
-  if(index(bufp, ':') == NULL)
+  if(strchr(bufp, ':') == NULL)
     {
       struct sockaddr	if_address;
       struct arpreq	arp_query;
