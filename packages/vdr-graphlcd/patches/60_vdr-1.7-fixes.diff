diff -Naur vdr-graphlcd-0.1.5/display.c vdr-graphlcd-0.1.5a/display.c
--- vdr-graphlcd-0.1.5/display.c	2009-04-17 10:24:22.000000000 +0200
+++ vdr-graphlcd-0.1.5a/display.c	2009-04-17 10:24:40.000000000 +0200
@@ -390,8 +390,8 @@
                         if (CurrTime != LastTime || update)
                         {
                             // but only, if something has changed
-                            if (replay.total / FRAMESPERSEC != replay.totalLast / FRAMESPERSEC ||
-                                replay.current / FRAMESPERSEC != replay.currentLast / FRAMESPERSEC ||
+                            if (replay.total / DEFAULTFRAMESPERSECOND != replay.totalLast / DEFAULTFRAMESPERSECOND ||
+                                replay.current / DEFAULTFRAMESPERSECOND != replay.currentLast / DEFAULTFRAMESPERSECOND ||
                                 CurrTime/60 != LastTime/60 ||
                                 update)
                             {
@@ -1337,14 +1337,14 @@
 
 bool cGraphLCDDisplay::IndexIsGreaterAsOneHour(int Index) const
 {
-    int h = (Index / FRAMESPERSEC) / 3600;
+    int h = (Index / DEFAULTFRAMESPERSECOND) / 3600;
     return h > 0;
 }
 
 const char * cGraphLCDDisplay::IndexToMS(int Index) const
 {
     static char buffer[16];
-    int s = (Index / FRAMESPERSEC);
+    int s = (Index / DEFAULTFRAMESPERSECOND);
     int m = s / 60;
     s %= 60;
     snprintf(buffer, sizeof(buffer), "%02d:%02d", m, s);
diff -Naur vdr-graphlcd-0.1.5/state.c vdr-graphlcd-0.1.5a/state.c
--- vdr-graphlcd-0.1.5/state.c	2009-04-17 10:24:22.000000000 +0200
+++ vdr-graphlcd-0.1.5a/state.c	2009-04-17 10:24:43.000000000 +0200
@@ -41,7 +41,7 @@
     replay.control = NULL;
     replay.mode = eReplayNormal;
     replay.current = 0;
-    replay.currentLast = FRAMESPERSEC;
+    replay.currentLast = DEFAULTFRAMESPERSECOND;
     replay.total = 0;
     replay.totalLast = 1;
 
@@ -304,7 +304,7 @@
                     replay.name = Name;
                 }
             }
-            replay.currentLast = FRAMESPERSEC;
+            replay.currentLast = DEFAULTFRAMESPERSECOND;
             replay.totalLast = 1;
             mutex.Unlock();
         }
