#!/bin/sh

. config/options

get_meta $1

$SCRIPTS/clean $1
$SCRIPTS/unpack $1

cd $PKG_BUILD_DIR

export ac_cv_prog_PYTHON2="$ROOT/$TOOLCHAIN/bin/python"

# DRI: Direct Rendering Interface
pkg_uses $1 intel     && DRI_DRIVERS="${DRI_DRIVERS}i915,i965,"
pkg_uses $1 radeon    && DRI_DRIVERS="${DRI_DRIVERS}r200,radeon,"
pkg_uses $1 nouveau   && DRI_DRIVERS="${DRI_DRIVERS}nouveau,"
pkg_uses $1 vdpau && VDPAU="--enable-vdpau" || VDPAU="--disable-vdpau"
pkg_uses $1 xvmc && XVMC="--enable-xvmc" || XVMC="--disable-xvmc"
DRI_DRIVERS="${DRI_DRIVERS}swrast"

# Gallium 3D
GALLIUM_EGL="--disable-gallium-egl"
GALLIUM_OVG="--disable-openvg"
if pkg_uses $1 gallium3d; then
  pkg_uses $1 radeon  && GALLIUM_DRIVERS="${GALLIUM_DRIVERS}r300,r600,"
  pkg_uses $1 nouveau && GALLIUM_DRIVERS="${GALLIUM_DRIVERS}nouveau,"
  GALLIUM_DRIVERS="${GALLIUM_DRIVERS}swrast"
  GALLIUM_EGL="--enable-gallium-egl"
  GALLIUM_OVG="--enable-openvg"
  GALLIUM_LLVM="--enable-gallium-llvm"
  export LLVM_CONFIG="$SYSROOT_PREFIX/usr/local/bin/llvm-config"
fi

# EGL: Embedded Graphics Library (native platform graphics interface)
EGL_DISPLAYS="x11,drm"
if pkg_uses $1 wayland; then
  EGL_DISPLAYS="wayland,$EGL_DISPLAYS"
fi

builtin_compiler() {
  # build the internal compiler
  setup_toolchain host
  NOCONFIGURE=yes ./autogen.sh

  LIBDRM_CFLAGS="a" LIBDRM_LIBS="a" \
  DRIGL_CFLAGS="a" DRIGL_LIBS="a" \
  INTEL_CFLAGS="a" INTEL_LIBS="a" \
  NOUVEAU_CFLAGS="a" NOUVEAU_LIBS="a" \
  RADEON_CFLAGS="a" RADEON_LIBS="a" \
  GLPROTO_CFLAGS="a" GLPROTO_LIBS="a" \
  DRI2PROTO_CFLAGS="a" DRI2PROTO_LIBS="a" \
  ./configure \
    --enable-shared \
    --disable-static \
    --disable-dri \
    --disable-gallium-llvm \
    --with-dri-drivers="" \
    --with-gallium-drivers=""

  make -C src/glsl builtin_compiler

  cp -PR src/glsl/builtin_compiler $ROOT/$TOOLCHAIN/bin

  make -C src/glsl clean
}

builtin_compiler

setup_toolchain target

NOCONFIGURE=yes ./autogen.sh

# LLVM Hack
sed -i 's%LLVM_LIBS=".*"%LLVM_LIBS="-lLLVM-$LLVM_VERSION"%' configure

GCC_NO_GOLD=1 GCC_NO_LTO=1 \
do_configure target \
  --disable-debug \
  --disable-selinux \
  --enable-glx-tls \
  --enable-dri \
  --with-dri-drivers="$DRI_DRIVERS" \
  --with-dri-driverdir="$XORG_PATH_DRI" \
  --with-egl-platforms="$EGL_DISPLAYS" \
  --with-egl-driver-dir="$XORG_PATH_EGL" \
  --with-xorg-driver-dir="$XORG_PATH_DRIVERS" \
  --with-gallium-drivers="$GALLIUM_DRIVERS" \
  $GALLIUM_EGL \
  --enable-opengl \
  --enable-gles1 \
  --enable-gles2 \
  $GALLIUM_OVG \
  $GALLIUM_LLVM \
  --enable-shared-glapi \
  --enable-shared-dricore \
  --enable-driglx-direct \
  $VDPAU \
  $XVMC \

cp src/glsl/Makefile src/glsl/Makefile.orig
sed -e "s#\.\/builtin_compiler#$ROOT/$TOOLCHAIN/bin/builtin_compiler#g" \
  -i src/glsl/Makefile

# now build Mesa for target
make
make_install

# hack runtime DRI driver dir path
sed -i "s%^dridriverdir=.*%dridriverdir=/usr/lib/dri\ndrisearchdirs=/usr/lib/dri%" .install/usr/lib/pkgconfig/dri.pc

# do some copy for proprietary drivers replacement
MESA_LIB=.install/usr/lib/mesa

mkdir -p $MESA_LIB
cp -P .install/usr/lib/libGL.so*      $MESA_LIB
cp -P .install/usr/lib/libEGL.so*     $MESA_LIB
cp -P .install/usr/lib/libGLES*.so*   $MESA_LIB
ln -sf libGLESv2.so.2   $MESA_LIB/libGLESv2.so.1
[ -f .install/usr/lib/libOpenVG*.so ] && \
  cp -P .install/usr/lib/libOpenVG*.so* $MESA_LIB

exit 0

