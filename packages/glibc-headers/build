#!/bin/sh

. config/options

HEADERS=$SYSROOT_PREFIX/usr/include

rm -rf $HEADERS
mkdir -p $HEADERS
touch $HEADERS/stddef.h

$SCRIPTS/install ccache
$SCRIPTS/install linux-headers
$SCRIPTS/unpack glibc

setup_toolchain host

cd $BUILD/glibc*
mkdir -p objdir-$1
cd objdir-$1

cat >config.cache <<EOF
libc_cv_forced_unwind=yes
libc_cv_c_cleanup=yes
libc_cv_gnu89_inline=yes
EOF

case $TARGET_ARCH in
  i386)
    cat >>config.cache <<EOF
libc_cv_386_tls=yes
EOF
    ;;

  x86_64)
    cat >>config.cache <<EOF
libc_cv_x86_64_tls=yes
EOF
    ;;

  powerpc)
    cat >>config.cache <<EOF
libc_cv_powerpc32_tls=yes
libc_cv_mabi_ibmlongdouble=yes
libc_cv_mlong_double_128=yes
libc_cv_ppc_machine=yes
EOF
    ;;

  powerpc64)
    cat >>config.cache <<EOF
libc_cv_powerpc64_tls=yes
libc_cv_mlong_double_128ibm=yes
libc_cv_mlong_double_128=yes
libc_cv_initfini_array=yes
libc_cv_gcc___thread=yes
libc_cv_ppc_machine=yes
EOF
    ;;

  *)
    ;;  
esac

cat >configparms <<EOF
install_root=$SYSROOT_PREFIX
EOF

../configure --host=$TARGET_NAME \
             --build=$HOST_NAME \
             --prefix=/usr \
             --with-headers=$HEADERS \
             --cache-file=config.cache

export GLIBC_HEADERS_BUILD=1
make install-headers

mkdir -p $HEADERS/bits
mkdir -p $HEADERS/gnu

cp bits/stdio_lim.h $HEADERS/bits
touch $HEADERS/gnu/stubs.h
cp -P ../include/features.h $HEADERS/features.h

[ $TARGET_ARCH = "i386" ] && cp ../nptl/sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h $HEADERS/bits

exit 0
