diff -Naur busybox-1.5.0.orig/include/usage.h busybox-1.5.0/include/usage.h
--- busybox-1.5.0.orig/include/usage.h	2007-03-23 23:24:43.000000000 +0100
+++ busybox-1.5.0/include/usage.h	2007-03-23 23:51:21.000000000 +0100
@@ -3619,7 +3619,8 @@
 #define wget_trivial_usage \
        "[-c|--continue] [-q|--quiet] [-O|--output-document file]\n" \
        "		[--header 'header: value'] [-Y|--proxy on/off] [-P DIR]\n" \
-       "		[-U|--user-agent agent] url"
+       "		[-U|--user-agent agent] url" \
+       "		[-T|--read-timeout value] [-t|--tries value] url"
 #define wget_full_usage \
        "Retrieve files via HTTP or FTP" \
        "\n\nOptions:\n" \
@@ -3628,7 +3629,9 @@
        "	-P	Set directory prefix to DIR\n" \
        "	-O	Save to filename ('-' for stdout)\n" \
        "	-U	Adjust 'User-Agent' field\n" \
-       "	-Y	Use proxy ('on' or 'off')"
+       "	-Y	Use proxy ('on' or 'off')" \
+       "	-T	delay before timeout and shutdown\n" \
+       "	-t	number of retry"
 
 #define which_trivial_usage \
        "[COMMAND ...]"
diff -Naur busybox-1.5.0.orig/networking/wget.c busybox-1.5.0/networking/wget.c
--- busybox-1.5.0.orig/networking/wget.c	2007-03-23 23:24:43.000000000 +0100
+++ busybox-1.5.0/networking/wget.c	2007-03-23 23:52:48.000000000 +0100
@@ -86,12 +86,30 @@
 }
 #endif
 
+static void timeout_reached(int ignore)
+{
+	if (content_len == 0) /* still haven't been able to talk with server */
+		exit(-1);
+}
+
+static void alarm_timeout(int iwait)
+{
+	struct itimerval itv;
+
+	itv.it_interval.tv_sec = 0;
+	itv.it_interval.tv_usec = 0;
+	itv.it_value.tv_sec = iwait;
+	itv.it_value.tv_usec = 0;
+	setitimer(ITIMER_REAL, &itv, NULL);
+}
+
 int wget_main(int argc, char **argv);
 int wget_main(int argc, char **argv)
 {
 	char buf[512];
 	struct host_info server, target;
 	len_and_sockaddr *lsa;
+	struct sigaction sa;
 	int n, status;
 	int port;
 	int try = 5;
@@ -114,6 +132,8 @@
 	int use_proxy = 1;              /* Use proxies if env vars are set  */
 	const char *proxy_flag = "on";  /* Use proxies if env vars are set  */
 	const char *user_agent = "Wget";/* Content of the "User-Agent" header field */
+	const char *timeout = "900";    /* Read Timeout duration (-T) */
+	char *nr_tries = NULL;          /* Number of retries (-t) */
 
 	/*
 	 * Crack command line.
@@ -127,6 +147,8 @@
 		WGET_OPT_USER_AGENT = 0x20,
 		WGET_OPT_PASSIVE    = 0x40,
 		WGET_OPT_HEADER     = 0x80,
+		WGET_OPT_TIMEOUT    = 0x100,
+		WGET_OPT_RETRY      = 0x200,
 	};
 #if ENABLE_FEATURE_WGET_LONG_OPTIONS
 	static const struct option wget_long_options[] = {
@@ -136,6 +158,8 @@
 		{ "output-document",  required_argument, NULL, 'O' },
 		{ "directory-prefix", required_argument, NULL, 'P' },
 		{ "proxy",            required_argument, NULL, 'Y' },
+		{ "read-timeout",     required_argument, NULL, 'T' },
+		{ "tries",            required_argument, NULL, 't' },
 		{ "user-agent",       required_argument, NULL, 'U' },
 		{ "passive-ftp",      no_argument, NULL, 0xff },
 		{ "header",           required_argument, NULL, 0xfe },
@@ -144,9 +168,10 @@
 	applet_long_options = wget_long_options;
 #endif
 	opt_complementary = "-1" USE_FEATURE_WGET_LONG_OPTIONS(":\xfe::");
-	opt = getopt32(argc, argv, "cqO:P:Y:U:",
+	opt = getopt32(argc, argv, "cqO:P:Y:T:t:U:",
 				&fname_out, &dir_prefix,
-				&proxy_flag, &user_agent
+				&proxy_flag, &user_agent,
+				&timeout, &nr_tries
 				USE_FEATURE_WGET_LONG_OPTIONS(, &headers_llist)
 				);
 	if (strcmp(proxy_flag, "off") == 0) {
@@ -170,6 +195,9 @@
 	}
 #endif
 
+	if (opt & WGET_OPT_RETRY)
+		try = atoi(nr_tries);
+
 	parse_url(argv[optind], &target);
 	server.host = target.host;
 	server.port = target.port;
@@ -241,6 +269,13 @@
 		/* We leak result of xmalloc_sockaddr2dotted */
 	}
 
+	/* starting timer */
+	sa.sa_handler = timeout_reached;
+	sigemptyset (&sa.sa_mask);
+	sa.sa_flags = SA_RESTART;
+	sigaction (SIGALRM, &sa, NULL);
+	alarm_timeout (atoi (timeout));
+
 	if (use_proxy || !target.is_ftp) {
 		/*
 		 *  HTTP session
