diff -Naur libdvdnav-4.1.3.orig/src/dvdnav.c libdvdnav-4.1.3/src/dvdnav.c
--- libdvdnav-4.1.3.orig/src/dvdnav.c	2010-07-24 11:37:06.941229192 +0200
+++ libdvdnav-4.1.3/src/dvdnav.c	2010-07-24 11:40:14.992181796 +0200
@@ -845,6 +845,23 @@
   return retval;
 }
 
+int dvdnav_get_video_resolution(dvdnav_t *this, uint32_t *width, uint32_t *height) {
+  int w, h;
+
+  if(!this->started) {
+    printerr("Virtual DVD machine not started.");
+    return -1;
+  }
+
+  pthread_mutex_lock(&this->vm_lock);
+  vm_get_video_res(this->vm, &w, &h);
+  pthread_mutex_unlock(&this->vm_lock);
+
+  *width  = w;
+  *height = h;
+  return 0;
+}
+
 uint8_t dvdnav_get_video_scale_permission(dvdnav_t *this) {
   uint8_t         retval;
 
diff -Naur libdvdnav-4.1.3.orig/src/dvdnav.h libdvdnav-4.1.3/src/dvdnav.h
--- libdvdnav-4.1.3.orig/src/dvdnav.h	2010-07-24 11:37:06.941229192 +0200
+++ libdvdnav-4.1.3/src/dvdnav.h	2010-07-24 11:38:13.776420336 +0200
@@ -551,6 +551,11 @@
 uint8_t dvdnav_get_video_aspect(dvdnav_t *self);
 
 /*
+ * Get video resolution.
+ */
+int dvdnav_get_video_resolution(dvdnav_t *self, uint32_t *width, uint32_t *height);
+
+/*
  * Get video scaling permissions.
  * The scaling permission does only change on VTS boundaries.
  * See the DVDNAV_VTS_CHANGE event.
diff -Naur libdvdnav-4.1.3.orig/src/vm/vm.c libdvdnav-4.1.3/src/vm/vm.c
--- libdvdnav-4.1.3.orig/src/vm/vm.c	2010-07-24 11:37:06.941229192 +0200
+++ libdvdnav-4.1.3/src/vm/vm.c	2010-07-24 11:39:06.492307778 +0200
@@ -830,6 +830,7 @@
     break;
   }
 }
+#endif
 
 /* currently unused */
 void vm_get_video_res(vm_t *vm, int *width, int *height) {
@@ -855,7 +856,6 @@
     break;
   }
 }
-#endif
 
 int vm_get_video_aspect(vm_t *vm) {
   int aspect = vm_get_video_attr(vm).display_aspect_ratio;
diff -Naur libdvdnav-4.1.3.orig/src/vm/vm.h libdvdnav-4.1.3/src/vm/vm.h
--- libdvdnav-4.1.3.orig/src/vm/vm.h	2010-07-24 11:37:06.941229192 +0200
+++ libdvdnav-4.1.3/src/vm/vm.h	2010-07-24 11:39:34.631229890 +0200
@@ -161,8 +161,8 @@
 /* currently unused */
 void vm_get_audio_info(vm_t *vm, int *current, int *num_avail);
 void vm_get_subp_info(vm_t *vm, int *current, int *num_avail);
-void vm_get_video_res(vm_t *vm, int *width, int *height);
 #endif
+void vm_get_video_res(vm_t *vm, int *width, int *height);
 int  vm_get_video_aspect(vm_t *vm);
 int  vm_get_video_scale_permission(vm_t *vm);
 video_attr_t vm_get_video_attr(vm_t *vm);
