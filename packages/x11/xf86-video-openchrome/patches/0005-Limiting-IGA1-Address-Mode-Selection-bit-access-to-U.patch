From 85ed46cd8a94e8382ec0feae9e1dda39246c2fbb Mon Sep 17 00:00:00 2001
From: Kevin Brace <kevinbrace@gmx.com>
Date: Wed, 6 Jul 2016 22:00:34 -0500
Subject: [PATCH 05/21] Limiting IGA1 Address Mode Selection bit access to
 UniChrome Pro or later

This bit is located at 3X5.43[2]. Linear mode is always used. It is
very likely that UniChrome (CLE266, KM400, P4M800, etc.) does not
implement this bit.

Signed-off-by: Kevin Brace <kevinbrace@gmx.com>
---
 src/via_display.c | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/src/via_display.c b/src/via_display.c
index f9341c1..385daed 100644
--- a/src/via_display.c
+++ b/src/via_display.c
@@ -1032,12 +1032,14 @@ viaIGA1SetDisplayRegister(ScrnInfoPtr pScrn, DisplayModePtr mode)
      *               111: Shift to early time by 2 characters */
     ViaCrtcMask(hwp, 0x33, 0x05, 0x4F);
 
-    /* Set IGA1 to linear mode */
-    /* 3X5.43[2]  - IGA1 Address Mode Selection
-     *              0: Linear
-     *              1: Tile */
-    ViaCrtcMask(hwp, 0x43, 0x00, 0x04);
-
+    /* UniChrome Pro or later */
+    if ((pVia->Chipset != VIA_CLE266) && (pVia->Chipset != VIA_KM400)) {
+        /* Set IGA1 to linear mode. */
+        /* 3X5.43[2]  - IGA1 Address Mode Selection
+         *              0: Linear
+         *              1: Tile */
+        ViaCrtcMask(hwp, 0x43, 0x00, 0x04);
+    }
 
     /* Set IGA1 horizontal total.*/
     /* Due to IGA1 horizontal total being only 9 bits wide,
@@ -1761,7 +1763,7 @@ viaIGA1Restore(ScrnInfoPtr pScrn)
     DEBUG(xf86DrvMsg(pScrn->scrnIndex, X_INFO,
                         "Restoring IGA1 registers.\n"));
 
-/* UniChrome Pro or later */
+/*  later */
     switch (pVia->Chipset) {
     case VIA_PM800:
     case VIA_K8M800:
-- 
1.9.1

