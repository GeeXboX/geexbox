diff -Naur atheros-tegra-2.2-tegra-10.8.2/ar6k_sdk/host/os/linux/ar6000_drv.c atheros-tegra-2.2-tegra-10.8.2a/ar6k_sdk/host/os/linux/ar6000_drv.c
--- atheros-tegra-2.2-tegra-10.8.2/ar6k_sdk/host/os/linux/ar6000_drv.c	2010-09-03 11:24:30.000000000 +0200
+++ atheros-tegra-2.2-tegra-10.8.2a/ar6k_sdk/host/os/linux/ar6000_drv.c	2010-09-05 11:55:26.944239435 +0200
@@ -103,29 +103,29 @@
 static int screen_is_off;
 
 char *fm_path = NULL;
-char *tgt_fw = "/system/lib/hw/wlan/athwlan.bin.z77";
-char *tgt_patch = "/system/lib/hw/wlan/data.patch.hw2_0.bin";
-char *tcmd_fw = "/system/lib/hw/wlan/athtcmd_ram.bin";
-char *art_fw = "/system/lib/hw/wlan/device.bin";
-char *eeprom_bin = "/system/lib/hw/wlan/eeprom.bin";
-char *eeprom_data = "/system/lib/hw/wlan/eeprom.data";
+char *tgt_fw = "/lib/firmware/ar6k/athwlan.bin.z77";
+char *tgt_patch = "/lib/firmware/ar6k/data.patch.hw2_0.bin";
+char *tcmd_fw = "/lib/firmware/ar6k/athtcmd_ram.bin";
+char *art_fw = "/lib/firmware/ar6k/device.bin";
+char *eeprom_bin = "/lib/firmware/ar6k/eeprom.bin";
+char *eeprom_data = "/lib/firmware/ar6k/eeprom.data";
 
 
 #ifdef REGION_CODE_FILE_USED
-char *reg_file = "/system/lib/hw/wlan/reg_code";
+char *reg_file = "/lib/firmware/ar6k/reg_code";
 #else
 char *reg_file = NULL;
 #endif
 
 #ifdef SOFTMAC_USED
-char *softmac_file = "/system/lib/hw/wlan/softmac";
+char *softmac_file = "/lib/firmware/ar6k/softmac";
 #else
 char *softmac_file = NULL;
 #endif
 
 #ifdef EEPROM_FILE_USED
-char *eeprom_file = "/system/lib/hw/wlan/calData_ar6102_15dBm.bin";
-/*char *eeprom_file = "/system/lib/hw/wlan/fakeBoardData_AR6002.bin"; */
+char *eeprom_file = "/lib/firmware/ar6k/calData_ar6102_15dBm.bin";
+/*char *eeprom_file = "/lib/firmware/ar6k/fakeBoardData_AR6002.bin"; */
 #else
 char *eeprom_file = NULL;
 #endif
@@ -1688,8 +1688,8 @@
            Call athloader which will fork and run customized loadAR6000.sh to
            load firmware by script automatically after reload & resume
          */
-        char *argv[] = { "/system/lib/hw/wlan/athfwloader", NULL };
-        char *envp[] = { "LD_LIBRARY_PATH=/system/lib",NULL,};
+        char *argv[] = { "/lib/firmware/ar6k/athfwloader", NULL };
+        char *envp[] = { "LD_LIBRARY_PATH=/lib/firmware/ar6k",NULL,};
         ret = call_usermodehelper(argv[0], argv, envp, UMH_WAIT_EXEC);
         printk("call usermode fw_loader ret = %d err %d\n", ret, ((ret & 0xff00) >> 8));
         (void)firmware_transfer;
