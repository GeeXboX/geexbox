diff -Naur lirc-0.8.5pre2.orig/drivers/lirc_gpio/lirc_gpio.c lirc-0.8.5pre2/drivers/lirc_gpio/lirc_gpio.c
--- lirc-0.8.5pre2.orig/drivers/lirc_gpio/lirc_gpio.c	2009-04-25 19:04:58.000000000 +0200
+++ lirc-0.8.5pre2/drivers/lirc_gpio/lirc_gpio.c	2009-04-25 19:05:26.000000000 +0200
@@ -79,11 +79,13 @@
 static int soft_gap;
 static int sample_rate = 10;
 
+#ifndef dprintk
 #define dprintk(fmt, args...)					\
 	do {							\
 		if (debug)					\
 			printk(KERN_DEBUG fmt, ## args);	\
 	} while (0)
+#endif
 
 struct rcv_info {
 	int bttv_id;
@@ -399,6 +401,25 @@
 	MOD_DEC_USE_COUNT;
 }
 
+#if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,29)
+wait_queue_head_t* bttv_get_gpio_queue(unsigned int card)
+{
+	struct bttv *btv;
+
+	if (card >= bttv_num)
+		return NULL;
+
+	btv = bttvs[card];
+	if (!btv)
+		return NULL;
+
+	if (bttvs[card]->shutdown) {
+		return NULL;
+	}
+	return &btv->gpioq;
+}
+#endif
+
 static wait_queue_head_t *get_queue(void *data)
 {
 	return bttv_get_gpio_queue(card);
@@ -512,10 +533,18 @@
 			return -EBADRQC;
 		}
 	} else {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
 		if (bttv_get_cardinfo(card, &type, &cardid) == -1) {
 			printk(LOGHEAD "could not get card type\n", minor);
 			return -EBADRQC;
 		}
+#else
+		if (card >= bttv_num) {
+			return -EBADRQC;
+		}
+		type = bttvs[card]->c.type;
+		cardid = bttvs[card]->cardid;
+#endif
 		printk(LOGHEAD "card type 0x%x, id 0x%x\n", minor,
 		       type, cardid);
 
