#!/bin/sh

. config/options

RAMFS_DRV_SUBSYSTEMS="acpi ata cdrom ide ieee1394 memstick mmc scsi usb"

VER=`ls $BUILD/$1*/modules/lib/modules`

case "$2" in
  image)
    test "$3" != installator && INSTALL="$INSTALL/boot"
    mkdir -p $INSTALL
    case $TARGET_ARCH in
      i386|x86_64)
        cp $BUILD/$1*/arch/$TARGET_ARCH/boot/bzImage $INSTALL/vmlinuz
        ;;
      powerpc|powerpc64)
        cp $BUILD/$1*/vmlinux $INSTALL/vmlinux
        $STRIP $INSTALL/vmlinux
        ;;
    esac
    ;;

  modules-ramfs)
    $SCRIPTS/install module-init-tools $2

    # add block subsystems drivers
    for drv in $RAMFS_DRV_SUBSYSTEMS; do
      DRV_PATH=lib/modules/$VER/kernel/drivers/$drv
      if [ -d $BUILD/$1*/modules/$DRV_PATH ]; then
        mkdir -p $INSTALL/$DRV_PATH
        cp -r $BUILD/$1*/modules/$DRV_PATH/* $INSTALL/$DRV_PATH
      fi
    done

    # add ethernet drivers (for PXE boot)
    DRV_PATH=lib/modules/$VER/kernel/drivers/net
    mkdir -p $INSTALL/$DRV_PATH
    cp -r $BUILD/$1*/modules/$DRV_PATH/* $INSTALL/$DRV_PATH
    rm -rf $INSTALL/$DRV_PATH/usb
    rm -rf $INSTALL/$DRV_PATH/wireless
    rm -rf $INSTALL/$DRV_PATH/pcmcia

    # add filesystem drivers
    DRV_PATH=lib/modules/$VER/kernel/fs
    if [ -d $BUILD/$1*/modules/$DRV_PATH ]; then
      mkdir -p $INSTALL/$DRV_PATH
      cp -r $BUILD/$1*/modules/$DRV_PATH/* $INSTALL/$DRV_PATH
    fi

    # add lib drivers
    DRV_PATH=lib/modules/$VER/kernel/lib
    if [ -d $BUILD/$1*/modules/$DRV_PATH ]; then
      mkdir -p $INSTALL/$DRV_PATH
      cp -r $BUILD/$1*/modules/$DRV_PATH/* $INSTALL/$DRV_PATH
    fi

    # create RAMfs modules dependancies
    $BUILD/module-init-tool*/host/depmod -b $INSTALL -v $VER > /dev/null
    for i in `ls $INSTALL/lib/modules/*/modules.* | grep -v modules.dep | grep -v modules.alias | grep -v modules.symbols`; do
      rm -f $i
    done

    # strip modules from RAMfs
    for MOD in `find $INSTALL/lib/modules/ -name *.ko`; do
      $STRIP --strip-debug $MOD
    done
    ;;

  modules-stage2)
    mkdir -p $INSTALL/lib/modules/$VER
    cp -r $BUILD/$1*/modules/* $INSTALL
    rm -f $INSTALL/lib/modules/$VER/modules.*

    # remove all block subsystems modules that were already included in ramfs
    for drv in $RAMFS_DRV_SUBSYSTEMS; do
      rm -rf $INSTALL/lib/modules/$VER/kernel/drivers/$drv
    done

    # remove all network drivers modules that were already included in ramfs
    for drv in atl* e1000* igb phy *.ko; do
      rm -rf $INSTALL/lib/modules/$VER/kernel/drivers/net/$drv
    done

    # remove all filesystem drivers modules (already included in ramfs)
    rm -rf $INSTALL/lib/modules/$VER/kernel/fs
    rm -rf $INSTALL/lib/modules/$VER/kernel/net/sunrpc

    # remove all lib drivers modules (already included in ramfs)
    rm -rf $INSTALL/lib/modules/$VER/kernel/lib

    # copy kernel firmwares (if present)
    rm -rf $INSTALL/lib/firmware
    mkdir -p $INSTALL/firmware
    cp -rf $BUILD/$1*/modules/lib/firmware/* $INSTALL/firmware || echo "No firmware"

    ;;

  config)
    $SCRIPTS/install module-init-tools $2

    mkdir -p $INSTALL/sbin
    cp $PACKAGES/$1/scripts/setup_tvcard_options $INSTALL/sbin
    mkdir -p $INSTALL/etc
    cp $PACKAGES/$1/config/modules $INSTALL/etc
    cp $PACKAGES/$1/config/tvcard $INSTALL/etc
    cp $PACKAGES/$1/config/pvr $INSTALL/etc
    mkdir -p $INSTALL/etc/modprobe.d
    cp $PACKAGES/$1/config/tv $INSTALL/etc/modprobe.d
    ;;
esac
