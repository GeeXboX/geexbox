This patch fixes the bug described here:
  https://bugs.freedesktop.org/show_bug.cgi?id=11527
by reverting the following commit:
  http://gitweb.freedesktop.org/?p=xorg/driver/xf86-video-intel.git;a=commitdiff;h=a85dd7adc35601a988b1001e8b3c8aa4d53de0c0;hp=c989cb4897e2e2d395c52df4822290a767cdc866

diff -Naur xf86-video-intel-2.1.1.orig/src/i810_reg.h xf86-video-intel-2.1.1/src/i810_reg.h
--- xf86-video-intel-2.1.1.orig/src/i810_reg.h	2007-09-09 17:35:49.000000000 +0200
+++ xf86-video-intel-2.1.1/src/i810_reg.h	2007-09-09 17:36:04.000000000 +0200
@@ -822,7 +822,6 @@
 # define PP_SEQUENCE_MASK			0x30000000
 
 #define PP_CONTROL	0x61204
-# define POWER_DOWN_ON_RESET			(1 << 1)
 # define POWER_TARGET_ON			(1 << 0)
 
 #define LVDSPP_ON       0x61208
@@ -1067,7 +1066,6 @@
 
 #define BLC_PWM_CTL		0x61254
 #define BACKLIGHT_MODULATION_FREQ_SHIFT		(17)
-#define BACKLIGHT_MODULATION_FREQ_SHIFT2	(16)
 /**
  * This is the most significant 15 bits of the number of backlight cycles in a
  * complete cycle of the modulated backlight control.
@@ -1075,9 +1073,7 @@
  * The actual value is this field multiplied by two.
  */
 #define BACKLIGHT_MODULATION_FREQ_MASK		(0x7fff << 17)
-#define BACKLIGHT_MODULATION_FREQ_MASK2		(0xffff << 16)
 #define BLM_LEGACY_MODE				(1 << 16)
-
 /**
  * This is the number of cycles out of the backlight modulation cycle for which
  * the backlight is on.
@@ -1088,10 +1084,6 @@
 #define BACKLIGHT_DUTY_CYCLE_SHIFT		(0)
 #define BACKLIGHT_DUTY_CYCLE_MASK		(0xffff)
 
-/* On 965+ backlight control is in another register */
-#define BLC_PWM_CTL2			0x61250
-#define 	BLM_LEGACY_MODE2	(1 << 30)
-
 #define BLM_CTL			0x61260
 #define BLM_THRESHOLD_0		0x61270
 #define BLM_THRESHOLD_1		0x61274
diff -Naur xf86-video-intel-2.1.1.orig/src/i830.h xf86-video-intel-2.1.1/src/i830.h
--- xf86-video-intel-2.1.1.orig/src/i830.h	2007-09-09 17:35:49.000000000 +0200
+++ xf86-video-intel-2.1.1/src/i830.h	2007-09-09 17:36:04.000000000 +0200
@@ -529,7 +529,6 @@
    CARD32 savePaletteB[256];
    CARD32 saveSWF[17];
    CARD32 saveBLC_PWM_CTL;
-   CARD32 saveBLC_PWM_CTL2;
 
    enum last_3d *last_3d;
 
diff -Naur xf86-video-intel-2.1.1.orig/src/i830_lvds.c xf86-video-intel-2.1.1/src/i830_lvds.c
--- xf86-video-intel-2.1.1.orig/src/i830_lvds.c	2007-09-09 17:35:49.000000000 +0200
+++ xf86-video-intel-2.1.1/src/i830_lvds.c	2007-09-09 17:36:04.000000000 +0200
@@ -46,30 +46,6 @@
     int		    backlight_duty_cycle;
 };
 
-/**
- * Use legacy backlight controls?
- *
- * \param pI830 device in question
- *
- * Returns TRUE if legacy backlight should be used, false otherwise.
- */
-static int
-i830_lvds_backlight_legacy(I830Ptr pI830)
-{
-    CARD32 blc_pwm_ctl, blc_pwm_ctl2;
-
-    /* 965GM+ change the location of the legacy control bit */
-    if (IS_I965GM(pI830)) {
-	blc_pwm_ctl2 = INREG(BLC_PWM_CTL2);
-	if (blc_pwm_ctl2 & BLM_LEGACY_MODE2)
-	    return TRUE;
-    } else {
-	blc_pwm_ctl = INREG(BLC_PWM_CTL);
-	if (blc_pwm_ctl & BLM_LEGACY_MODE)
-	    return TRUE;
-    }
-    return FALSE;
-}
 
 /**
  * Sets the backlight level.
@@ -83,12 +59,18 @@
     I830Ptr pI830 = I830PTR(pScrn);
     CARD32 blc_pwm_ctl;
 
-    if (i830_lvds_backlight_legacy(pI830))
-	pciWriteByte(pI830->PciTag, LEGACY_BACKLIGHT_BRIGHTNESS, 0xfe);
-
     blc_pwm_ctl = INREG(BLC_PWM_CTL);
-    blc_pwm_ctl &= ~BACKLIGHT_DUTY_CYCLE_MASK;
-    OUTREG(BLC_PWM_CTL, blc_pwm_ctl | (level << BACKLIGHT_DUTY_CYCLE_SHIFT));
+    if (blc_pwm_ctl & BLM_LEGACY_MODE)
+    {
+	pciWriteByte (pI830->PciTag, 
+		      LEGACY_BACKLIGHT_BRIGHTNESS,
+		      level & 0xff);
+    }
+    else
+    {
+	blc_pwm_ctl &= ~BACKLIGHT_DUTY_CYCLE_MASK;
+	OUTREG(BLC_PWM_CTL, blc_pwm_ctl | (level << BACKLIGHT_DUTY_CYCLE_SHIFT));
+    }
 }
 
 /**
@@ -100,24 +82,12 @@
     ScrnInfoPtr pScrn = output->scrn;
     I830Ptr	pI830 = I830PTR(pScrn);
     CARD32	pwm_ctl = INREG(BLC_PWM_CTL);
-    CARD32	val;
-
-    if (IS_I965GM(pI830)) {
-	val = ((pwm_ctl & BACKLIGHT_MODULATION_FREQ_MASK2) >>
-	       BACKLIGHT_MODULATION_FREQ_SHIFT2);
-    } else {
-	val = ((pwm_ctl & BACKLIGHT_MODULATION_FREQ_MASK) >>
-	       BACKLIGHT_MODULATION_FREQ_SHIFT) * 2;
-    }
     
-    /*
-     * In legacy control mode, backlight value is calculated:
-     * if (LBB[7:0] != 0xff)
-     *     backlight = BLC_PWM_CTL[15:0] *  BPC[7:0]
-     * else
-     *     backlight = BLC_PWM_CTL[15:0]
-     */
-    return val;
+    if (pwm_ctl & BLM_LEGACY_MODE)
+	return 0xff;
+    else
+	return ((pwm_ctl & BACKLIGHT_MODULATION_FREQ_MASK) >>
+		BACKLIGHT_MODULATION_FREQ_SHIFT) * 2;
 }
 
 /**
@@ -168,15 +138,21 @@
     ScrnInfoPtr		    pScrn = output->scrn;
     I830Ptr		    pI830 = I830PTR(pScrn);
 
-    if (IS_I965GM(pI830))
-	pI830->saveBLC_PWM_CTL2 = INREG(BLC_PWM_CTL2);
     pI830->savePP_ON = INREG(LVDSPP_ON);
     pI830->savePP_OFF = INREG(LVDSPP_OFF);
     pI830->savePP_CONTROL = INREG(PP_CONTROL);
     pI830->savePP_CYCLE = INREG(PP_CYCLE);
     pI830->saveBLC_PWM_CTL = INREG(BLC_PWM_CTL);
-    dev_priv->backlight_duty_cycle = (pI830->saveBLC_PWM_CTL &
-				      BACKLIGHT_DUTY_CYCLE_MASK);
+    if (pI830->saveBLC_PWM_CTL & BLM_LEGACY_MODE)
+    {
+	dev_priv->backlight_duty_cycle = pciReadByte (pI830->PciTag,
+						      LEGACY_BACKLIGHT_BRIGHTNESS);
+    }
+    else
+    {
+	dev_priv->backlight_duty_cycle = (pI830->saveBLC_PWM_CTL &
+					  BACKLIGHT_DUTY_CYCLE_MASK);
+    }
 
     /*
      * If the light is off at server startup, just make it full brightness
@@ -191,8 +167,6 @@
     ScrnInfoPtr	pScrn = output->scrn;
     I830Ptr	pI830 = I830PTR(pScrn);
 
-    if (IS_I965GM(pI830))
-	OUTREG(BLC_PWM_CTL2, pI830->saveBLC_PWM_CTL2);
     OUTREG(BLC_PWM_CTL, pI830->saveBLC_PWM_CTL);
     OUTREG(LVDSPP_ON, pI830->savePP_ON);
     OUTREG(LVDSPP_OFF, pI830->savePP_OFF);
