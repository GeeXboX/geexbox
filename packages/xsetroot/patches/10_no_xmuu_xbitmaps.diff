* avoid libXmuu and libXbitmaps dependancy

diff -Naur xsetroot-X11R7.0-1.0.1.orig/configure xsetroot-X11R7.0-1.0.1/configure
--- xsetroot-X11R7.0-1.0.1.orig/configure	2007-06-02 19:27:54.000000000 +0200
+++ xsetroot-X11R7.0-1.0.1/configure	2007-06-02 19:28:09.000000000 +0200
@@ -3018,12 +3018,12 @@
         pkg_cv_XSETROOT_CFLAGS="$XSETROOT_CFLAGS"
     else
         if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"xmuu x11 xbitmaps\"") >&5
-  ($PKG_CONFIG --exists --print-errors "xmuu x11 xbitmaps") 2>&5
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"x11\"") >&5
+  ($PKG_CONFIG --exists --print-errors "x11") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  pkg_cv_XSETROOT_CFLAGS=`$PKG_CONFIG --cflags "xmuu x11 xbitmaps" 2>/dev/null`
+  pkg_cv_XSETROOT_CFLAGS=`$PKG_CONFIG --cflags "x11" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -3036,12 +3036,12 @@
         pkg_cv_XSETROOT_LIBS="$XSETROOT_LIBS"
     else
         if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"xmuu x11 xbitmaps\"") >&5
-  ($PKG_CONFIG --exists --print-errors "xmuu x11 xbitmaps") 2>&5
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"x11\"") >&5
+  ($PKG_CONFIG --exists --print-errors "x11") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  pkg_cv_XSETROOT_LIBS=`$PKG_CONFIG --libs "xmuu x11 xbitmaps" 2>/dev/null`
+  pkg_cv_XSETROOT_LIBS=`$PKG_CONFIG --libs "x11" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -3060,14 +3060,14 @@
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        XSETROOT_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "xmuu x11 xbitmaps"`
+	        XSETROOT_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "x11"`
         else
-	        XSETROOT_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "xmuu x11 xbitmaps"`
+	        XSETROOT_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "x11"`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$XSETROOT_PKG_ERRORS" >&5
 
-	{ { echo "$as_me:$LINENO: error: Package requirements (xmuu x11 xbitmaps) were not met:
+	{ { echo "$as_me:$LINENO: error: Package requirements (x11) were not met:
 
 $XSETROOT_PKG_ERRORS
 
@@ -3078,7 +3078,7 @@
 and XSETROOT_LIBS to avoid the need to call pkg-config.
 See the pkg-config man page for more details.
 " >&5
-echo "$as_me: error: Package requirements (xmuu x11 xbitmaps) were not met:
+echo "$as_me: error: Package requirements (x11) were not met:
 
 $XSETROOT_PKG_ERRORS
 
diff -Naur xsetroot-X11R7.0-1.0.1.orig/xsetroot.c xsetroot-X11R7.0-1.0.1/xsetroot.c
--- xsetroot-X11R7.0-1.0.1.orig/xsetroot.c	2007-06-02 19:27:54.000000000 +0200
+++ xsetroot-X11R7.0-1.0.1/xsetroot.c	2007-06-02 19:28:03.000000000 +0200
@@ -37,11 +37,9 @@
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
 #include <X11/Xatom.h>
-#include <X11/Xmu/CurUtil.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
-#include "X11/bitmaps/gray"
 
 #define Dynamic 1
 
@@ -61,7 +59,6 @@
 static void SetBackgroundToBitmap(Pixmap bitmap, 
 				  unsigned int width, unsigned int height);
 static Cursor CreateCursorFromFiles(char *cursor_file, char *mask_file);
-static Cursor CreateCursorFromName(char *name);
 static Pixmap MakeModulaBitmap(int mod_x, int mod_y);
 static XColor NameToXColor(char *name, unsigned long pixel);
 static unsigned long NameToPixel(char *name, unsigned long pixel);
@@ -80,9 +77,7 @@
     fprintf(stderr, "  -def   or   -default\n");
     fprintf(stderr, "  -name <string>\n");
     fprintf(stderr, "  -cursor <cursor file> <mask file>\n");
-    fprintf(stderr, "  -cursor_name <cursor-font name>\n");
     fprintf(stderr, "  -solid <color>\n");
-    fprintf(stderr, "  -gray   or   -grey\n");
     fprintf(stderr, "  -bitmap <filename>\n");
     fprintf(stderr, "  -mod <x> <y>\n");
     exit(1);
@@ -100,10 +95,8 @@
     char *name = NULL;
     char *cursor_file = NULL;
     char *cursor_mask = NULL;
-    char *cursor_name = NULL;
     char *solid_color = NULL;
     Cursor cursor;
-    int gray = 0;
     char *bitmap_file = NULL;
     int mod_x = 0;
     int mod_y = 0;
@@ -140,12 +133,6 @@
 	    nonexcl++;
 	    continue;
 	}
-	if (!strcmp("-cursor_name", argv[i])) {
-	    if (++i>=argc) usage();
-	    cursor_name = argv[i];
-	    nonexcl++;
-	    continue;
-	}
 	if (!strcmp("-fg",argv[i]) || !strcmp("-foreground",argv[i])) {
 	    if (++i>=argc) usage();
 	    fore_color = argv[i];
@@ -162,11 +149,6 @@
 	    excl++;
 	    continue;
 	}
-	if (!strcmp("-gray", argv[i]) || !strcmp("-grey", argv[i])) {
-	    gray = 1;
-	    excl++;
-	    continue;
-	}
 	if (!strcmp("-bitmap", argv[i])) {
 	    if (++i>=argc) usage();
 	    bitmap_file = argv[i];
@@ -190,13 +172,6 @@
 	usage();
     } 
 
-    /* Check for multiple use of exclusive options */
-    if (excl > 1) {
-	fprintf(stderr, "%s: choose only one of {solid, gray, bitmap, mod}\n",
-		program_name);
-	usage();
-    }
-
     dpy = XOpenDisplay(display_name);
     if (!dpy) {
 	fprintf(stderr, "%s:  unable to open display '%s'\n",
@@ -217,21 +192,6 @@
 	XFreeCursor(dpy, cursor);
     }
   
-    if (cursor_name) {
-	cursor = CreateCursorFromName (cursor_name);
-	if (cursor)
-	{
-	    XDefineCursor (dpy, root, cursor);
-	    XFreeCursor (dpy, cursor);
-	}
-    }
-    /* Handle -gray and -grey options */
-    if (gray) {
-	bitmap = XCreateBitmapFromData(dpy, root, gray_bits,
-				       gray_width, gray_height);
-	SetBackgroundToBitmap(bitmap, gray_width, gray_height);
-    }
-  
     /* Handle -solid option */
     if (solid_color) {
 	XSetWindowBackground(dpy, root, NameToPixel(solid_color,
@@ -391,28 +351,6 @@
     return(cursor);
 }
 
-static Cursor
-CreateCursorFromName(char *name)
-{
-    XColor fg, bg, temp;
-    int	    i;
-    Font    fid;
-
-    fg = NameToXColor(fore_color, BlackPixel(dpy, screen));
-    bg = NameToXColor(back_color, WhitePixel(dpy, screen));
-    if (reverse) {
-	temp = fg; fg = bg; bg = temp;
-    }
-    i = XmuCursorNameToIndex (name);
-    if (i == -1)
-	return (Cursor) 0;
-    fid = XLoadFont (dpy, "cursor");
-    if (!fid)
-	return (Cursor) 0;
-    return XCreateGlyphCursor (dpy, fid, fid,
-			       i, i+1, &fg, &bg);
-}
-
 /*
  * MakeModulaBitmap: Returns a modula bitmap based on an x & y mod.
  */
