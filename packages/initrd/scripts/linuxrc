#!/bin/sh
busybox mount -t proc none /proc
busybox mount -t sysfs none /sys
busybox mknod /dev/null c 1 3
busybox --install -s
[ -x /sbin/bootchartd ] && /sbin/bootchartd

echo geexbox > /proc/sys/kernel/hostname

export PATH=/bin:/sbin:/usr/bin:/usr/sbin

progress() {
  echo "### $2 ###"
}

boot_from_hdd () {
  progress 11000 "HDD Boot Device Detection"
  HDD=/hdd
  mkdir -p $HDD
  for i in 1 2 3 4; do
    if [ -b "$BOOT_DEV" ]; then
      mount -o ro $BOOT_DEV $HDD
    elif [ -n "$BOOT_LABEL" -a -e "/dev/disk/by-label/$BOOT_LABEL" ]; then
      mount -o ro "/dev/disk/by-label/$BOOT_LABEL" $HDD
    fi
    if [ -d "$HDD$ROOT_LOCATION" ]; then
      GEEXBOX="$HDD$ROOT_LOCATION"
      progress 11001 "Booting from: $GEEXBOX"
      break
    fi
    [ -n "$GEEXBOX" ] && break
    sleep 2
  done
}

get_devices_from_uuids () {
  # cannot be sure whether its written upper or lower case
  [ -n "$BOOT_UUID" ] && BOOT_DEV="" && BOOT_DEV_NAME=""

  for i in 1 2 3 4; do

    if [ -n "$BOOT_UUID" -a -z "$BOOT_DEV_NAME" ]; then
      DEV_PATH=$(find /dev/disk/by-uuid/ -iname ${BOOT_UUID})
      if [ -n "$DEV_PATH" ]; then
        BOOT_DEV_NAME=$(ls -l ${DEV_PATH} | sed 's#.*\.\.\/##')
        BOOT_DEV=/dev/$BOOT_DEV_NAME
      fi
    fi

    [ -z "$BOOT_UUID" -o -n "$BOOT_DEV" ] && break

    echo "boot device unavailable, retrying..."
    sleep 2
  done
}

# parse command line arguments
for arg in $(cat /proc/cmdline); do
  case $arg in
    boot=*)
      BOOT="${arg#boot=}"
      case "$BOOT" in
        UUID=*)
          # Grab real device name from UUID symlink
          BOOT_UUID="${BOOT#UUID=}"
          BOOT=hdd
          ;;
        LABEL=*)
          BOOT_LABEL="${BOOT#LABEL=}"
          BOOT=hdd
          ;;
        *)
          BOOT_DEV=$BOOT
          BOOT=hdd
          ;;
      esac
      ;;
    bootdir=*)
      ROOT_LOCATION="${arg#bootdir=}"
      ;;
    hdtv)
      XORG=yes
      ;;
    installator)
      INSTALLATOR=yes
      XORG=yes
      ;;
    configure)
      CONFIGURATOR=yes
      ;;
    debugging)
      DEBUG=yes
      ;;
  esac
done

echo > /proc/sys/kernel/hotplug
mkdir -p /dev/.udev /var/log
udevd --daemon
udevadm trigger
udevadm settle --timeout=180
udevadm monitor 2>&1 >/var/log/udev &

# determine if a bootdir was specified or force the default one
[ -z "$ROOT_LOCATION" ] && ROOT_LOCATION="/GEEXBOX"

# determine if we use X.Org or not
[ "$XORG" = yes ] && echo "" > /var/use_xorg

# initialize LVM
if [ -x /sbin/lvm ]; then
  modprobe dm_mod
  devmap=$(cat /proc/misc | grep "device-mapper")
  if [ -n "$devmap" ]; then
    lvm vgscan --ignorelockingfailure
    lvm vgchange -a y --ignorelockingfailure
  fi
fi

get_devices_from_uuids

INIT=/sbin/init

[ "$BOOT" = hdd ] && export HDD="${GEEXBOX%/GEEXBOX}"

RUNLEVEL="geexbox"
if test "$INSTALLATOR" = yes; then
  RUNLEVEL="install"
elif test "$DEBUG" = yes; then
  RUNLEVEL="debug"
  INIT_ARGS="--debug"
elif test "$CONFIGURATOR" = yes; then
  RUNLEVEL="configure"
fi
echo "$RUNLEVEL" > /var/runlevel

exec /sbin/init $INIT_ARGS </dev/tty1 >/dev/tty1

