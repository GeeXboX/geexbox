#!/bin/sh

/bin/mount -t proc none /proc
/bin/mount -t sysfs none /sys
busybox mknod /dev/null c 1 3
busybox --install -s

echo geexbox > /proc/sys/kernel/hostname

export PATH=/bin:/sbin:/usr/bin:/usr/sbin

progress() {
  [ -f /proc/splash ] && echo "show $1" > /proc/splash
  echo "### $2 ###"
}

boot_from_network () {
  mkdir -p $GEEXBOX
  udhcpc -q -H geexbox -n && mount "$1" $GEEXBOX -t "$2" -o "$3"
}

boot_from_nfs () {
  progress 11000 "Getting NFS tree"
  GEEXBOX=/nfs
  boot_from_network "$NFS" nfs "ro,udp,rsize=32768,hard,noatime,nolock"
}

boot_from_smb () {
  progress 11000 "Getting SMB tree"
  GEEXBOX=/smb
  boot_from_network "$SMB" cifs "ro,iocharset=utf8,user=$SMBUSER,pass=$SMBPASS"
}

boot_from_cdrom () {
  progress 11000 "Searching for CD-ROM drives"
  CDROM=/cd
  mkdir -p $CDROM
  for i in 0 1 2 3 4 5 6 7 8 9; do
    mount -o ro /dev/cdrom $CDROM
    if [ -d "$CDROM/GEEXBOX" ]; then
      GEEXBOX="$CDROM/GEEXBOX"
      break
    fi
    [ -n "$GEEXBOX" ] && break
    sleep 1
  done
}

boot_from_hdd () {
  progress 11000 "HDD Boot Device Detection"
  HDD=/hdd
  mkdir -p $HDD
  for i in 0 1 2 3 4 5 6 7 8 9; do
    mount -o ro $BOOT_DEV $HDD
    if [ -d "$HDD/GEEXBOX" ]; then
      GEEXBOX="$HDD/GEEXBOX"
      break
    fi
    [ -n "$GEEXBOX" ] && break
    sleep 1
  done
}

echo > /proc/sys/kernel/hotplug
udevd --daemon
udevadm trigger
udevadm settle --timeout=180
udevadm monitor 2>&1 >/var/log/udev &

[ -f /proc/sys/dev/cdrom/autoclose ] && echo 0 > /proc/sys/dev/cdrom/autoclose
[ -f /proc/sys/dev/cdrom/lock ] && echo 0 > /proc/sys/dev/cdrom/lock

# parse command line arguments
for arg in $(cat /proc/cmdline); do
  case $arg in
    boot=*)
      BOOT="${arg#boot=}"
      case $BOOT in
        UUID=*)
          # Grab real device name from UUID symlink
          BOOT_DEV_NAME=`ls -l /dev/disk/by-uuid/${BOOT#UUID=} | \
                          sed 's#.*\.\.\/##'`
          BOOT_DEV=/dev/$BOOT_DEV_NAME
          BOOT=hdd
          ;;
        *)
          if [ "$BOOT" != cdrom -a "$BOOT" != nfs -a "$BOOT" != smb ]; then
            BOOT_DEV=$BOOT
            BOOT=hdd
          fi
          ;;
      esac
      ;;
    nfsroot=*)
      NFS="${arg#nfsroot=}"
      ;;
    smbroot=*)
      SMB="${arg#smbroot=}"
      ;;
    smbuser=*)
      SMBUSER="${arg#smbuser=}"
      ;;
    smbpass=*)
      SMBPASS="${arg#smbpass=}"
      ;;
    hdtv)
      XORG=yes
      ;;
    installator)
      INSTALLATOR=yes
      XORG=yes
      ;;
    configure)
      CONFIGURATOR=yes
      ;;
    debugging)
      DEBUG=yes
      ;;
  esac
done

# determine if we use X.Org or not
[ "$XORG" = yes ] && echo "" > /var/use_xorg

# select boot device for 2nd stage
case "$BOOT" in
  nfs)
    boot_from_nfs
    ;;
  smb)
    boot_from_smb
    ;;
  cdrom)
    boot_from_cdrom
    ;;
  hdd)
    boot_from_hdd
    ;;
esac

if test -n "$GEEXBOX" ; then
  progress 25000 "copying system into ram"
  cp -a "$GEEXBOX/etc" /
  progress 27000 "copying system into ram"
  cp -a "$GEEXBOX/var" /
  progress 29000 "copying system into ram"
  cp -a "$GEEXBOX/sbin" /
  progress 30500 "copying system into ram"
  cp -a "$GEEXBOX/usr/share" /usr
  progress 31000 "copying system into ram"

  [ -f "$GEEXBOX/bin.tar.lzma" ] && tar xaf "$GEEXBOX/bin.tar.lzma" -C /
  [ -f "$GEEXBOX/bin.tar.gz" ] && tar xzf "$GEEXBOX/bin.tar.gz" -C /
  [ -f "$GEEXBOX/bin.tar" ] && tar xf "$GEEXBOX/bin.tar" -C /

  if [ -f /var/use_xorg ]; then
    [ -f "$GEEXBOX/X.tar.lzma" ] && tar xaf "$GEEXBOX/X.tar.lzma" -C /
    [ -f "$GEEXBOX/X.tar.gz" ] && tar xzf "$GEEXBOX/X.tar.gz" -C /
    [ -f "$GEEXBOX/X.tar" ] && tar xf "$GEEXBOX/X.tar" -C /
  fi

  progress 42000 "copying system into ram"
  cp -a "$GEEXBOX/codecs" /
  progress 45000 "copying system into ram"
  cp -a "$GEEXBOX/firmware" /
  progress 46000 "copying system into ram"
  INIT=/sbin/init
else
  INIT=/sbin/nosystem
  progress 65535 "cleaning ram disk"
fi

# Rebuild module dependancies (initramfs + bin archive)
depmod -a

udevadm trigger
udevadm settle --timeout=180

if test "$BOOT" = nfs -o "$BOOT" = smb; then
  if test "$INSTALLATOR" = yes; then
    export NET="$GEEXBOX"
  elif test -n "$GEEXBOX"; then
    umount "$GEEXBOX"
  fi
fi

[ "$BOOT" = cdrom ] && export CDROM="${GEEXBOX%/GEEXBOX}"
[ "$BOOT" = hdd ] && export HDD="${GEEXBOX%/GEEXBOX}"

if test "$INSTALLATOR" != yes; then
  [ "$BOOT" = cdrom ] && umount $CDROM
  [ "$BOOT" = hdd ] && umount $HDD
fi

RUNLEVEL="geexbox"
if test "$INSTALLATOR" = yes; then
  RUNLEVEL="install"
elif test "$DEBUG" = yes; then
  RUNLEVEL="debug"
elif test "$CONFIGURATOR" = yes; then
  RUNLEVEL="configure"
fi

export DEBUG
[ "$DEBUG" = yes ] && /sbin/console </dev/tty2 >/dev/tty2 2>&1 &

/bin/sh $INIT $RUNLEVEL </dev/tty1 >/dev/tty1 2>&1

if test "$INSTALLATOR" = yes; then
  [ -e /dev/cdrom ] && eject -s /dev/cdrom
  reboot
elif test "$CONFIGURATOR" = yes; then
  reboot
else
  poweroff
fi
