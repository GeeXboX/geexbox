diff -Naur glibc-2.7.orig/iconv/Makefile glibc-2.7/iconv/Makefile
--- glibc-2.7.orig/iconv/Makefile	2008-05-18 22:49:23.000000000 +0200
+++ glibc-2.7/iconv/Makefile	2008-05-18 22:50:35.000000000 +0200
@@ -57,6 +57,9 @@
 		  iconvconfig.h
 
 others		= iconv_prog iconvconfig
+ifneq ($(cross-compiling),no)
+others-native	= iconvconfig-native
+endif
 install-others-programs	= $(inst_bindir)/iconv
 install-sbin	= iconvconfig
 
@@ -79,6 +82,7 @@
 
 $(objpfx)iconv_prog: $(iconv_prog-modules:%=$(objpfx)%.o)
 $(objpfx)iconvconfig: $(iconvconfig-modules:%=$(objpfx)%.o)
+$(objpfx)iconvconfig-native: $(iconvconfig-modules:%=$(objpfx)%-native.o)
 
 ifneq ($(cross-compiling),yes)
 xtests: test-iconvconfig
diff -Naur glibc-2.7.orig/iconv/Makefile.orig glibc-2.7/iconv/Makefile.orig
--- glibc-2.7.orig/iconv/Makefile.orig	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.7/iconv/Makefile.orig	2007-07-25 05:41:17.000000000 +0200
@@ -0,0 +1,93 @@
+# Copyright (C) 1997,1998,2000,2001,2002,2003,2004,2007
+#	Free Software Foundation, Inc.
+# This file is part of the GNU C Library.
+
+# The GNU C Library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+
+# The GNU C Library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+
+# You should have received a copy of the GNU Lesser General Public
+# License along with the GNU C Library; if not, write to the Free
+# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+# 02111-1307 USA.
+
+#
+#	Makefile for iconv.
+#
+subdir	:= iconv
+
+include ../Makeconfig
+
+headers		= iconv.h gconv.h
+routines	= iconv_open iconv iconv_close \
+		  gconv_open gconv gconv_close gconv_db gconv_conf \
+		  gconv_builtin gconv_simple gconv_trans gconv_cache
+ifeq ($(elf),yes)
+routines	+= gconv_dl
+else
+CFLAGS-gconv_db.c = -DSTATIC_GCONV
+CFLAGS-gconv_cache.c = -DSTATIC_GCONV
+CFLAGS-gconv_simple.c = -DSTATIC_GCONV
+endif
+
+vpath %.c ../locale/programs ../intl
+
+iconv_prog-modules = iconv_charmap charmap charmap-dir linereader \
+		     dummy-repertoire simple-hash xstrdup xmalloc
+iconvconfig-modules = strtab xmalloc hash-string
+extra-objs	   = $(iconv_prog-modules:=.o) $(iconvconfig-modules:=.o)
+CFLAGS-iconv_prog.c = -I../locale/programs
+CFLAGS-iconv_charmap.c = -I../locale/programs
+CFLAGS-dummy-repertoire.c = -I../locale/programs
+CFLAGS-charmap.c = -DCHARMAP_PATH='"$(i18ndir)/charmaps"' \
+		   -DDEFAULT_CHARMAP=null_pointer -DNEED_NULL_POINTER
+CFLAGS-linereader.c = -DNO_TRANSLITERATION
+CFLAGS-simple-hash.c = -I../locale
+
+tests	= tst-iconv1 tst-iconv2 tst-iconv3 tst-iconv5
+
+distribute	= gconv_builtin.h gconv_int.h loop.c skeleton.c iconv_prog.h \
+		  iconv_charmap.c dummy-repertoire.c gconv_charset.h strtab.c \
+		  iconvconfig.h
+
+others		= iconv_prog iconvconfig
+install-others-programs	= $(inst_bindir)/iconv
+install-sbin	= iconvconfig
+
+CFLAGS-gconv_cache.c += -DGCONV_DIR='"$(gconvdir)"'
+CFLAGS-gconv_conf.c = -DGCONV_PATH='"$(gconvdir)"'
+CFLAGS-iconvconfig.c = -DGCONV_PATH='"$(gconvdir)"' -DGCONV_DIR='"$(gconvdir)"'
+
+CPPFLAGS-iconv_prog = -DNOT_IN_libc
+CPPFLAGS-iconv_charmap = -DNOT_IN_libc
+CPPFLAGS-iconvconfig = -DNOT_IN_libc
+CPPFLAGS-linereader = -DNOT_IN_libc
+CPPFLAGS-strtab = -DNOT_IN_libc
+CPPFLAGS-charmap = -DNOT_IN_libc
+CPPFLAGS-charmap-dir = -DNOT_IN_libc
+
+include ../Rules
+
+$(inst_bindir)/iconv: $(objpfx)iconv_prog $(+force)
+	$(do-install-program)
+
+$(objpfx)iconv_prog: $(iconv_prog-modules:%=$(objpfx)%.o)
+$(objpfx)iconvconfig: $(iconvconfig-modules:%=$(objpfx)%.o)
+
+ifneq ($(cross-compiling),yes)
+xtests: test-iconvconfig
+endif
+
+.PHONY: test-iconvconfig
+test-iconvconfig: /dev/null $(objpfx)iconvconfig
+	tmp=$(objpfx)gconv-modules.cache.$$$$; \
+	rm -f $$tmp; \
+	$(make-test-out) --output=$$tmp --nostdlib $(inst_gconvdir) && \
+	cmp $$tmp $(inst_gconvdir)/gconv-modules.cache && \
+	rm -f $$tmp
diff -Naur glibc-2.7.orig/iconvdata/Makefile glibc-2.7/iconvdata/Makefile
--- glibc-2.7.orig/iconvdata/Makefile	2008-05-18 22:49:23.000000000 +0200
+++ glibc-2.7/iconvdata/Makefile	2008-05-18 22:49:40.000000000 +0200
@@ -315,23 +315,25 @@
 
 headers: $(addprefix $(objpfx), $(generated-modules:=.h))
 
+ifeq ($(cross-compiling),no)
+iconvconfig-cmd = LC_ALL=C LANGUAGE=C \
+  $(common-objpfx)elf/ld.so --library-path $(rpath-link) \
+  $(common-objpfx)iconv/iconvconfig
+else
+iconvconfig-cmd = LC_ALL=C LANGUAGE=C \
+  $(common-objpfx)iconv/iconvconfig-native
+endif
+
 $(addprefix $(inst_gconvdir)/, $(modules.so)): \
     $(inst_gconvdir)/%: $(objpfx)% $(+force)
 	$(do-install-program)
 $(inst_gconvdir)/gconv-modules: gconv-modules $(+force)
 	$(do-install)
-ifeq (no,$(cross-compiling))
 # Update the $(prefix)/lib/gconv/gconv-modules.cache file. This is necessary
 # if this libc has more gconv modules than the previously installed one.
 	if test -f "$(inst_gconvdir)/gconv-modules.cache"; then \
-	   LC_ALL=C LANGUAGE=C \
-	   $(common-objpfx)elf/ld.so --library-path $(rpath-link) \
-	   $(common-objpfx)iconv/iconvconfig \
-	     $(addprefix --prefix=,$(install_root)); \
+	   $(iconvconfig-cmd) $(addprefix --prefix=,$(install_root)); \
 	fi
-else
-	@echo '*@*@*@ You should recreate $(inst_gconvdir)/gconv-modules.cache'
-endif
 
 endif # build-shared = yes
 
diff -Naur glibc-2.7.orig/iconvdata/Makefile.orig glibc-2.7/iconvdata/Makefile.orig
--- glibc-2.7.orig/iconvdata/Makefile.orig	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.7/iconvdata/Makefile.orig	2007-09-30 06:00:02.000000000 +0200
@@ -0,0 +1,386 @@
+# Copyright (C) 1997-2004,2005,2006,2007 Free Software Foundation, Inc.
+# This file is part of the GNU C Library.
+
+# The GNU C Library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+
+# The GNU C Library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+
+# You should have received a copy of the GNU Lesser General Public
+# License along with the GNU C Library; if not, write to the Free
+# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+# 02111-1307 USA.
+
+#
+#	Makefile for iconv data and code.
+#
+subdir	:= iconvdata
+
+# Names of all the shared objects which implement the transformations.
+modules	:= ISO8859-1 ISO8859-2 ISO8859-3 ISO8859-4 ISO8859-5		 \
+	   ISO8859-6 ISO8859-7 ISO8859-8 ISO8859-9 ISO8859-10		 \
+	   ISO8859-11 ISO8859-13 ISO8859-14 ISO8859-15 ISO8859-16	 \
+	   T.61 ISO_6937 SJIS KOI-8 HP-ROMAN8 EBCDIC-AT-DE		 \
+	   EBCDIC-AT-DE-A EBCDIC-CA-FR EUC-KR UHC JOHAB libJIS libKSC	 \
+	   BIG5 EUC-JP libGB EUC-CN libCNS EUC-TW ISO646 EBCDIC-DK-NO	 \
+	   EBCDIC-DK-NO-A EBCDIC-ES EBCDIC-ES-A EBCDIC-ES-S EBCDIC-FI-SE \
+	   EBCDIC-FI-SE-A EBCDIC-FR EBCDIC-IS-FRISS EBCDIC-IT EBCDIC-PT	 \
+	   EBCDIC-UK EBCDIC-US IBM037 IBM038 IBM274 IBM275 IBM423	 \
+	   IBM500 IBM870 IBM871 IBM891 IBM903 IBM904 IBM905 IBM1047	 \
+	   IBM874 CP737 CP775 ISO-2022-KR				 \
+	   KOI8-R LATIN-GREEK LATIN-GREEK-1 IBM256 IBM273 IBM277 IBM278	 \
+	   IBM280 IBM281 IBM284 IBM285 IBM290 IBM297 IBM420 IBM424	 \
+	   IBM437 IBM850 IBM851 IBM852 IBM855 IBM857 IBM860 IBM861	 \
+	   IBM862 IBM863 IBM864 IBM865 IBM868 IBM869 IBM875 IBM880	 \
+	   IBM866 CP1258 IBM922 IBM1124 IBM1129 IBM932 IBM943		 \
+	   IBM856 IBM930 IBM933 IBM935 IBM937 IBM939 IBM1046		 \
+	   IBM1132 IBM1133 IBM1160 IBM1161 IBM1162 IBM1163 IBM1164	 \
+	   IBM918 IBM1004 IBM1026 CP1125 CP1250 CP1251 CP1252 CP1253	 \
+	   CP1254 CP1255 CP1256 CP1257 ISO-2022-JP MACINTOSH IEC_P27-1	 \
+	   ASMO_449 ANSI_X3.110 CSN_369103 CWI DEC-MCS ECMA-CYRILLIC	 \
+	   GOST_19768-74 GREEK-CCITT GREEK7 GREEK7-OLD INIS INIS-8	 \
+	   INIS-CYRILLIC ISO_6937-2 ISO_2033 ISO_5427 ISO_5427-EXT	 \
+	   ISO_5428 ISO_10367-BOX MAC-IS MAC-UK NATS-DANO NATS-SEFI	 \
+	   SAMI-WS2 ISO-IR-197 TIS-620 KOI8-U GBK ISIRI-3342 GBGBK	 \
+	   ISO-2022-CN libISOIR165 UTF-16 UNICODE UTF-32 UTF-7 BIG5HKSCS \
+	   GB18030 ISO-2022-CN-EXT VISCII GBBIG5 CP10007 KOI8-T		 \
+	   GEORGIAN-PS GEORGIAN-ACADEMY ISO-IR-209 MAC-SAMI ARMSCII-8	 \
+	   TCVN5712-1 libJISX0213 EUC-JISX0213 SHIFT_JISX0213		 \
+	   ISO-2022-JP-3 TSCII IBM866NAV CP932 EUC-JP-MS PT154 RK1048	 \
+	   IBM1025 IBM1122 IBM1137 IBM1153 IBM1154 IBM1155 IBM1156	 \
+	   IBM1157 IBM1158 IBM803 IBM901 IBM902 IBM921 IBM1008 		 \
+	   IBM1008_420 IBM1097 IBM1112 IBM1123 IBM1130 IBM1140 IBM1141 	 \
+	   IBM1142 IBM1143 IBM1144 IBM1145 IBM1146 IBM1147 IBM1148 	 \
+	   IBM1149 IBM1166 IBM1167 IBM4517 IBM4899 IBM4909 IBM4971 	 \
+	   IBM5347 IBM9030 IBM9066 IBM9448 IBM12712 IBM16804             \
+	   IBM1364 IBM1371 IBM1388 IBM1390 IBM1399 ISO_11548-1 MIK BRF	 \
+	   MAC-CENTRALEUROPE KOI8-RU ISO8859-9E
+
+modules.so := $(addsuffix .so, $(modules))
+
+include ../Makeconfig
+
+ifeq (yes,$(build-shared))
+tests = bug-iconv1 bug-iconv2 tst-loading tst-e2big tst-iconv4 bug-iconv4 \
+	tst-iconv6 bug-iconv5
+ifeq ($(have-thread-library),yes)
+tests += bug-iconv3
+endif
+
+test-srcs := tst-table-from tst-table-to
+endif
+
+# No code here is in libc.so.
+CPPFLAGS += -DNOT_IN_libc
+
+libJIS-routines := jis0201 jis0208 jis0212
+libKSC-routines := ksc5601
+libGB-routines := gb2312
+libCNS-routines := cns11643l1 cns11643
+libISOIR165-routines := iso-ir-165
+libJISX0213-routines := jisx0213
+
+LDFLAGS-EUC-KR.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)EUC-KR.so: $(objpfx)libKSC.so
+LDFLAGS-JOHAB.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)JOHAB.so: $(objpfx)libKSC.so
+LDFLAGS-UHC.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)UHC.so: $(objpfx)libKSC.so
+LDFLAGS-EUC-JP.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)EUC-JP.so: $(objpfx)libJIS.so
+LDFLAGS-EUC-JP-MS.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)EUC-JP-MS.so: $(objpfx)libJIS.so
+LDFLAGS-EUC-CN.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)EUC-CN.so: $(objpfx)libGB.so
+LDFLAGS-EUC-TW.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)EUC-TW.so: $(objpfx)libCNS.so
+LDFLAGS-EUC-JISX0213.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)EUC-JISX0213.so: $(objpfx)libJISX0213.so
+LDFLAGS-SHIFT_JISX0213.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)SHIFT_JISX0213.so: $(objpfx)libJISX0213.so
+
+LDFLAGS-ISO-2022-JP.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)ISO-2022-JP.so: $(objpfx)libJIS.so $(objpfx)libGB.so \
+			 $(objpfx)libCNS.so $(objpfx)libKSC.so
+LDFLAGS-ISO-2022-JP-3.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)ISO-2022-JP-3.so: $(objpfx)libJIS.so $(objpfx)libJISX0213.so
+LDFLAGS-ISO-2022-KR.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)ISO-2022-KR.so: $(objpfx)libKSC.so
+LDFLAGS-ISO-2022-CN.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)ISO-2022-CN.so: $(objpfx)libGB.so $(objpfx)libCNS.so
+LDFLAGS-ISO-2022-CN-EXT.so = $(LDFLAGS-rpath-ORIGIN)
+$(objpfx)ISO-2022-CN-EXT.so: $(objpfx)libGB.so $(objpfx)libCNS.so \
+			     $(objpfx)libISOIR165.so
+
+LDFLAGS-libJIS.so = $(LDFLAGS-soname-fname)
+LDFLAGS-libKSC.so = $(LDFLAGS-soname-fname)
+LDFLAGS-libGB.so = $(LDFLAGS-soname-fname)
+LDFLAGS-libCNS.so = $(LDFLAGS-soname-fname)
+LDFLAGS-libISOIR165.so = $(LDFLAGS-soname-fname)
+LDFLAGS-libJISX0213.so = $(LDFLAGS-soname-fname)
+
+distribute := gconv-modules extra-module.mk gap.awk gaptab.awk gconv.map    \
+	      gen-8bit.sh gen-8bit-gap.sh gen-8bit-gap-1.sh		    \
+	      TESTS $(filter-out testdata/CVS%, $(wildcard testdata/*))	    \
+	      TESTS2 run-iconv-test.sh tst-tables.sh tst-table.sh	    \
+	      tst-table-charmap.sh tst-table-from.c tst-table-to.c	    \
+	      EUC-JP.irreversible ISIRI-3342.irreversible SJIS.irreversible \
+	      EUC-KR.irreversible BIG5HKSCS.irreversible BIG5.irreversible  \
+	      CP1255.irreversible CP1258.irreversible EUC-TW.irreversible   \
+	      IBM856.irreversible IBM922.irreversible IBM1132.irreversible  \
+	      IBM1133.irreversible IBM1160.irreversible IBM1161.irreversible\
+	      IBM1163.irreversible IBM1164.irreversible			    \
+	      ARMSCII-8.irreversible TCVN5712-1.precomposed		    \
+	      JISX0213.TXT EUC-JISX0213.precomposed			    \
+	      SHIFT_JISX0213.precomposed SHIFT_JISX0213.irreversible	    \
+	      TSCII.irreversible TSCII.precomposed			    \
+	      8bit-generic.c 8bit-gap.c					    \
+	      ansi_x3.110.c asmo_449.c big5.c cp737.c cp737.h		    \
+	      cp775.c cp775.h ibm874.c cns11643.c cns11643.h		    \
+	      cns11643l1.c cns11643l1.h cp1125.c cp1250.c cp1251.c cp1252.c \
+	      cp1253.c cp1254.c cp1255.c cp1256.c cp1257.c cp1258.c	    \
+	      csn_369103.c cwi.c dec-mcs.c ebcdic-at-de.c ebcdic-at-de-a.c  \
+	      ebcdic-ca-fr.c ebcdic-dk-no.c ebcdic-dk-no-a.c ebcdic-es.c    \
+	      ebcdic-es-a.c ebcdic-es-s.c ebcdic-fr.c ebcdic-fi-se.c	    \
+	      ebcdic-fi-se-a.c ebcdic-is-friss.c ebcdic-it.c ebcdic-pt.c    \
+	      ebcdic-uk.c ebcdic-us.c ecma-cyrillic.c euc-cn.c euc-jp.c	    \
+	      euc-kr.c euc-tw.c gb2312.c gb2312.h gbk.c gost_19768-74.c	    \
+	      greek-ccitt.c greek7.c greek7-old.c hp-roman8.c ibm037.c	    \
+	      ibm038.c ibm256.c ibm273.c ibm274.c ibm275.c ibm277.c	    \
+	      ibm278.c ibm280.c ibm281.c ibm284.c ibm285.c ibm290.c	    \
+	      ibm297.c ibm420.c ibm423.c ibm424.c ibm437.c ibm500.c	    \
+	      ibm850.c ibm851.c ibm852.c ibm855.c ibm857.c ibm860.c	    \
+	      ibm861.c ibm862.c ibm863.c ibm864.c ibm865.c ibm866.c	    \
+	      ibm868.c ibm869.c ibm870.c ibm871.c ibm875.c ibm880.c	    \
+	      ibm891.c ibm903.c ibm904.c ibm905.c ibm918.c ibm1004.c	    \
+	      ibm856.c ibm930.c ibm933.c ibm935.c ibm937.c ibm939.c ibm1046.c \
+	      ibm856.h ibm930.h ibm933.h ibm935.h ibm937.h ibm939.h ibm1046.h \
+	      ibm922.c ibm922.h ibm1124.c ibm1124.h ibm1129.c ibm1129.h     \
+	      ibm1132.c ibm1132.h ibm1133.c ibm1133.h ibm1162.c ibm1162.h   \
+	      ibm1026.c ibm1047.c iec_p27-1.c inis.c inis-8.c viscii.c	    \
+	      inis-cyrillic.c iso-2022-jp.c iso-2022-kr.c iso646.c	    \
+	      iso8859-1.c iso8859-2.c iso8859-3.c iso8859-4.c iso8859-5.c   \
+	      iso8859-6.c iso8859-7.c iso8859-8.c iso8859-9.c iso8859-10.c  \
+	      iso8859-11.c iso8859-13.c iso8859-14.c iso8859-9e.c	    \
+	      iso8859-15.c iso_2033.c iso_5427-ext.c iso_5427.c iso_5428.c  \
+	      iso_6937.c iso_6937-2.c iso_10367-box.c jis0201.c jis0201.h   \
+	      jis0208.c jis0208.h jis0212.c jis0212.h johab.c koi-8.c	    \
+	      koi8-r.c ksc5601.c ksc5601.h latin-greek.c latin-greek-1.c    \
+	      macintosh.c mac-is.c mac-uk.c nats-dano.c nats-sefi.c sjis.c  \
+	      t.61.c uhc.c sami-ws2.c iso-ir-197.c tis-620.c koi8-u.c	    \
+	      isiri-3342.c isiri-3342.h gbgbk.c iso-2022-cn.c cns11643l2.h  \
+	      iso8859-16.c utf-16.c unicode.c utf-32.c utf-7.c big5hkscs.c  \
+	      iso-ir-165.c iso-ir-165.h gb18030.c iso-2022-cn-ext.c	    \
+	      ibm932.c ibm932.h ibm943.c ibm943.h gbbig5.c cp10007.c	    \
+	      koi8-t.c georgian-ps.c georgian-academy.c iso-ir-209.c	    \
+	      mac-sami.c ibm1160.c ibm1160.h ibm1161.c ibm1161.h	    \
+	      ibm1163.c ibm1163.h ibm1164.c ibm1164.h jisx0213.c jisx0213.h \
+	      euc-jisx0213.c shift_jisx0213.c iso-2022-jp-3.c		    \
+	      tcvn5712-1.c armscii-8.c tscii.c ibm866nav.c pt154.c rk1048.c \
+	      ibm1025.c ibm1025.h ibm1122.c ibm1122.h ibm1137.c ibm1137.h   \
+	      ibm1153.c ibm1153.h ibm1154.c ibm1154.h ibm1155.c ibm1155.h   \
+	      ibm1156.c ibm1156.h ibm1157.c ibm1157.h ibm1158.c ibm1158.h   \
+	      ibm803.c ibm803.h ibm901.c ibm901.h ibm902.c ibm902.h	    \
+	      ibm921.c ibm921.h ibm1008.c ibm1008.h ibm1008_420.c	    \
+	      ibm1097.c ibm1097.h ibm1112.c ibm1112.h ibm1123.c ibm1123.h   \
+	      ibm1130.c ibm1130.h ibm1140.c ibm1140.h ibm1141.c ibm1141.h   \
+	      ibm1142.c ibm1142.h ibm1143.c ibm1143.h ibm1144.c ibm1144.h   \
+	      ibm1145.c ibm1145.h ibm1146.c ibm1146.h ibm1147.c ibm1147.h   \
+	      ibm1148.c ibm1148.h ibm1149.c ibm1149.h ibm1166.c ibm1166.h   \
+	      ibm1167.c ibm1167.h ibm4517.c ibm4517.h ibm4899.c ibm4899.h   \
+	      ibm4909.c ibm4909.h ibm4971.c ibm4971.h ibm5347.c ibm5347.h   \
+	      ibm9030.c ibm9030.h ibm9066.c ibm9066.h ibm9448.c ibm9448.h   \
+	      ibm12712.c ibm12712.h ibm16804.c ibm16804.h                   \
+	      ibm1364.c ibm1364.h ibm1371.c ibm1371.h ibm1388.c ibm1388.h   \
+	      ibm1390.c ibm1390.h ibm1399.c ibm1399.h iso_11548-1.c mik.c   \
+	      brf.c mac-centraleurope.c
+
+# We build the transformation modules only when we build shared libs.
+ifeq (yes,$(build-shared))
+
+# Rule to generate the shared objects.
+charmaps = ../localedata/charmaps
+-include $(objpfx)iconv-rules
+extra-modules-left := $(modules)
+include extra-module.mk
+
+
+extra-objs	+= $(modules.so)
+install-others	= $(addprefix $(inst_gconvdir)/, $(modules.so))	\
+		  $(inst_gconvdir)/gconv-modules
+
+# We can build the conversion tables for numerous charsets automatically.
+
+gen-8bit-modules := iso8859-2 iso8859-3 iso8859-4 iso8859-6 iso8859-9 koi-8 \
+		    hp-roman8 ebcdic-at-de ebcdic-at-de-a ebcdic-ca-fr	    \
+		    ebcdic-dk-no ebcdic-dk-no-a ebcdic-es ebcdic-es-a	    \
+		    ebcdic-es-s ebcdic-fi-se ebcdic-fi-se-a ebcdic-fr	    \
+		    ebcdic-is-friss ebcdic-it ebcdic-pt ebcdic-uk ebcdic-us \
+		    ibm037 ibm038 ibm274 ibm275 ibm423 ibm500 ibm870 ibm871 \
+		    ibm891 ibm903 ibm904 ibm905 ibm1047 iso8859-16 viscii   \
+		    iso8859-9e
+
+gen-8bit-gap-modules := koi8-r latin-greek latin-greek-1 ibm256 ibm273	   \
+			ibm277 ibm278 ibm280 ibm281 ibm284 ibm285 ibm290   \
+			ibm297 ibm420 ibm424 ibm437 ibm850 ibm851 ibm852   \
+			ibm855 ibm857 ibm860 ibm861 ibm862 ibm863 ibm864   \
+			ibm865 ibm868 ibm869 ibm875 ibm880 ibm918 ibm1004  \
+			ibm1026 cp1125 cp1250 cp1251 cp1252 cp1253 cp1254  \
+			cp1256 cp1257 ibm866 iso8859-5 iso8859-7 iso8859-8 \
+			iso8859-10 macintosh iec_p27-1 asmo_449		   \
+			csn_369103 cwi dec-mcs ecma-cyrillic gost_19768-74 \
+			greek-ccitt greek7 greek7-old inis inis-8	   \
+			inis-cyrillic iso_2033 iso_5427 iso_5427-ext	   \
+			iso_5428 iso_10367-box mac-is nats-dano nats-sefi  \
+			iso8859-13 iso8859-14 iso8859-15 mac-uk sami-ws2   \
+			iso-ir-197 tis-620 koi8-u ibm874 cp10007 koi8-t	   \
+			georgian-ps georgian-academy iso-ir-209 mac-sami   \
+			iso8859-11 ibm866nav pt154 rk1048 mik brf \
+			mac-centraleurope koi8-ru
+
+gen-special-modules := iso8859-7jp
+
+generated-modules := $(gen-8bit-modules) $(gen-8bit-gap-modules) \
+		     $(gen-special-modules)
+
+generated = $(generated-modules:=.h) $(generated-modules:=.stmp) \
+	    iconv-test.out iconv-rules tst-loading.mtrace	 \
+	    mtrace-tst-loading tst-tables.out iconv-test.xxx
+ifdef objpfx
+generated += gconv-modules
+endif
+
+# Rules to generate the headers.
+export AWK
+
+define generate-8bit-table
+$(make-target-directory)
+LC_ALL=C $(SHELL) ./gen-8bit.sh $< > $(@:stmp=T)
+$(move-if-change) $(@:stmp=T) $(@:stmp=h)
+touch $@
+endef
+
+define generate-8bit-gap-table
+$(make-target-directory)
+LC_ALL=C $(SHELL) ./gen-8bit-gap.sh $< > $(@:stmp=T)
+$(move-if-change) $(@:stmp=T) $(@:stmp=h)
+touch $@
+endef
+
+# The headers must be generated before the compilation.
+before-compile = $(addprefix $(objpfx),$(generated-modules:=.h))
+
+ifndef avoid-generated
+$(objpfx)iconv-rules: Makefile
+	$(make-target-directory)
+	{ echo $(filter-out lib%, $(modules)); \
+	  echo 8bit $(gen-8bit-modules); \
+	  echo 8bit-gap $(gen-8bit-gap-modules); } | \
+	$(AWK) 'NR == 1 { \
+		  for (i = 1; i <= NF; i++) { \
+		    printf "%s-routines := %s\n", $$i, tolower($$i); \
+		    printf "%s-map := gconv.map\n", $$i; \
+		  } \
+		}; \
+		NR > 1 { \
+		  for (i = 2; i <= NF; i++) { \
+		    printf "$$(objpfx)%s.stmp: ", $$i; \
+		    map = toupper($$i); \
+		    sub(/^ISO8859/, "ISO-8859", map); \
+		    if (map == "ISO_2033") map = map "-1983"; \
+		    printf "$$(charmaps)/%s ", map; \
+		    printf "gen-%s.sh\n", $$1; \
+		    printf "\t$$(generate-%s-table)\n", $$1; \
+		  } \
+		}' > $@.new
+	mv -f $@.new $@
+endif
+
+$(generated-modules:%=$(objpfx)%.h): $(objpfx)%.h: $(objpfx)%.stmp
+	@:
+
+$(gen-8bit-modules:%=$(objpfx)%.stmp): $(objpfx)%.stmp: $(objpfx)iconv-rules
+$(gen-8bit-gap-modules:%=$(objpfx)%.stmp): $(objpfx)%.stmp: $(objpfx)iconv-rules
+
+$(objpfx)iso8859-7jp.stmp: $(charmaps)/ISO-8859-7 gen-8bit-gap-1.sh
+	$(make-target-directory)
+	LC_ALL=C $(SHELL) ./gen-8bit-gap-1.sh $< > $(@:stmp=T)
+	$(move-if-change) $(@:stmp=T) $(@:stmp=h)
+	touch $@
+
+headers: $(addprefix $(objpfx), $(generated-modules:=.h))
+
+$(addprefix $(inst_gconvdir)/, $(modules.so)): \
+    $(inst_gconvdir)/%: $(objpfx)% $(+force)
+	$(do-install-program)
+$(inst_gconvdir)/gconv-modules: gconv-modules $(+force)
+	$(do-install)
+ifeq (no,$(cross-compiling))
+# Update the $(prefix)/lib/gconv/gconv-modules.cache file. This is necessary
+# if this libc has more gconv modules than the previously installed one.
+	if test -f "$(inst_gconvdir)/gconv-modules.cache"; then \
+	   LC_ALL=C LANGUAGE=C \
+	   $(common-objpfx)elf/ld.so --library-path $(rpath-link) \
+	   $(common-objpfx)iconv/iconvconfig \
+	     $(addprefix --prefix=,$(install_root)); \
+	fi
+else
+	@echo '*@*@*@ You should recreate $(inst_gconvdir)/gconv-modules.cache'
+endif
+
+endif # build-shared = yes
+
+include ../Rules
+
+ifeq (no,$(cross-compiling))
+ifeq (yes,$(build-shared))
+tests: $(objpfx)iconv-test.out $(objpfx)tst-tables.out
+ifneq (no,$(PERL))
+tests: $(objpfx)mtrace-tst-loading
+endif
+endif
+endif
+
+tst-loading-ENV = MALLOC_TRACE=$(objpfx)tst-loading.mtrace
+$(objpfx)mtrace-tst-loading: $(objpfx)tst-loading.out
+	$(common-objpfx)malloc/mtrace $(objpfx)tst-loading.mtrace > $@
+
+$(objpfx)bug-iconv1.out: $(objpfx)gconv-modules \
+			 $(addprefix $(objpfx),$(modules.so))
+$(objpfx)bug-iconv2.out: $(objpfx)gconv-modules \
+			 $(addprefix $(objpfx),$(modules.so))
+$(objpfx)bug-iconv3: $(libdl)
+$(objpfx)bug-iconv3.out: $(objpfx)gconv-modules \
+			 $(addprefix $(objpfx),$(modules.so))
+$(objpfx)bug-iconv5.out: $(objpfx)gconv-modules \
+			 $(addprefix $(objpfx),$(modules.so))
+$(objpfx)tst-loading.out: $(objpfx)gconv-modules \
+			  $(addprefix $(objpfx),$(modules.so))
+$(objpfx)tst-iconv4.out: $(objpfx)gconv-modules \
+			 $(addprefix $(objpfx),$(modules.so))
+
+$(objpfx)iconv-test.out: run-iconv-test.sh $(objpfx)gconv-modules \
+			 $(addprefix $(objpfx),$(modules.so)) \
+			 $(common-objdir)/iconv/iconv_prog TESTS
+	$(SHELL) -e $< $(common-objdir) > $@
+
+$(objpfx)tst-tables.out: tst-tables.sh $(objpfx)gconv-modules \
+			 $(addprefix $(objpfx),$(modules.so)) \
+			 $(objpfx)tst-table-from $(objpfx)tst-table-to
+	$(SHELL) $< $(common-objpfx) $(common-objpfx)iconvdata/ > $@
+
+do-tests-clean common-mostlyclean: tst-tables-clean
+
+.PHONY: tst-tables-clean
+tst-tables-clean:
+	-rm -f $(objpfx)tst-*.table $(objpfx)tst-EUC-TW.irreversible
+
+ifdef objpfx
+$(objpfx)gconv-modules: gconv-modules
+	cp $^ $@
+endif
diff -Naur glibc-2.7.orig/include-native/bits/libc-tsd.h glibc-2.7/include-native/bits/libc-tsd.h
--- glibc-2.7.orig/include-native/bits/libc-tsd.h	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.7/include-native/bits/libc-tsd.h	2008-05-18 22:49:40.000000000 +0200
@@ -0,0 +1,3 @@
+#ifndef __libc_tsd_define
+#define __libc_tsd_define(A,B)
+#endif
diff -Naur glibc-2.7.orig/include-native/config.h glibc-2.7/include-native/config.h
--- glibc-2.7.orig/include-native/config.h	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.7/include-native/config.h	2008-05-18 22:49:40.000000000 +0200
@@ -0,0 +1 @@
+/* Empty */
diff -Naur glibc-2.7.orig/include-native/gnu/stubs.h glibc-2.7/include-native/gnu/stubs.h
--- glibc-2.7.orig/include-native/gnu/stubs.h	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.7/include-native/gnu/stubs.h	2008-05-18 22:49:40.000000000 +0200
@@ -0,0 +1 @@
+/* Empty */
diff -Naur glibc-2.7.orig/include-native/intl/loadinfo.h glibc-2.7/include-native/intl/loadinfo.h
--- glibc-2.7.orig/include-native/intl/loadinfo.h	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.7/include-native/intl/loadinfo.h	2008-05-18 22:49:40.000000000 +0200
@@ -0,0 +1,4 @@
+#ifndef LOADINFO_H
+#define LOADINFO_H
+struct loaded_l10nfile;
+#endif
diff -Naur glibc-2.7.orig/include-native/libintl.h glibc-2.7/include-native/libintl.h
--- glibc-2.7.orig/include-native/libintl.h	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.7/include-native/libintl.h	2008-05-18 22:49:40.000000000 +0200
@@ -0,0 +1,13 @@
+#include_next <libintl.h>
+
+#ifndef _
+#define _(X) (X)
+#endif
+
+#ifndef N_
+#define N_(X) (X)
+#endif
+
+#ifndef _libc_intl_domainname
+#define _libc_intl_domainname "libc"
+#endif
diff -Naur glibc-2.7.orig/include-native/symbol-hacks.h glibc-2.7/include-native/symbol-hacks.h
--- glibc-2.7.orig/include-native/symbol-hacks.h	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.7/include-native/symbol-hacks.h	2008-05-18 22:49:40.000000000 +0200
@@ -0,0 +1 @@
+/* Empty */
diff -Naur glibc-2.7.orig/include-native/tls.h glibc-2.7/include-native/tls.h
--- glibc-2.7.orig/include-native/tls.h	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.7/include-native/tls.h	2008-05-18 22:49:40.000000000 +0200
@@ -0,0 +1,11 @@
+#ifndef _include_tls_h
+#define _include_tls_h 1
+
+#if USE_TLS && HAVE___THREAD \
+    && (!defined NOT_IN_libc || defined IS_IN_libpthread)
+# define USE___THREAD 1
+#else
+# define USE___THREAD 0
+#endif
+
+#endif
diff -Naur glibc-2.7.orig/locale/Makefile glibc-2.7/locale/Makefile
--- glibc-2.7.orig/locale/Makefile	2008-05-18 22:49:23.000000000 +0200
+++ glibc-2.7/locale/Makefile	2008-05-18 22:49:40.000000000 +0200
@@ -44,6 +44,9 @@
 aux		= $(categories:%=lc-%) $(categories:%=C-%) SYS_libc C_name \
 		  xlocale localename global-locale coll-lookup
 others		= localedef locale
+ifneq ($(cross-compiling),no)
+others-native	= localedef-native
+endif
 #others-static	= localedef locale
 install-bin	= localedef locale
 extra-objs	= $(localedef-modules:=.o) $(localedef-aux:=.o) \
@@ -81,6 +84,12 @@
 $(objpfx)locale: $(locale-modules:%=$(objpfx)%.o)
 $(objpfx)localedef $(objpfx)locale: $(lib-modules:%=$(objpfx)%.o)
 
+ifneq ($(cross-compiling),no)
+$(objpfx)localedef-native: $(localedef-modules:%=$(objpfx)%-native.o)
+$(objpfx)localedef-native: $(localedef-aux:%=$(objpfx)%-native.o)
+$(objpfx)localedef-native: $(lib-modules:%=$(objpfx)%-native.o)
+endif
+
 C-translit.h: C-translit.h.in gen-translit.pl
 	$(PERL) gen-translit.pl < $< > $@.tmp
 	mv -f $@.tmp $@
diff -Naur glibc-2.7.orig/localedata/Makefile glibc-2.7/localedata/Makefile
--- glibc-2.7.orig/localedata/Makefile	2008-05-18 22:49:23.000000000 +0200
+++ glibc-2.7/localedata/Makefile	2008-05-18 22:49:40.000000000 +0200
@@ -206,8 +206,13 @@
 INSTALL-SUPPORTED-LOCALES=$(addprefix install-, $(SUPPORTED-LOCALES))
 
 # Sometimes the whole collection of locale files should be installed.
+ifeq ($(cross-compiling),no)
 LOCALEDEF=I18NPATH=. GCONV_PATH=$(common-objpfx)iconvdata LC_ALL=C \
 $(common-objpfx)elf/ld.so --library-path $(rpath-link) $(common-objpfx)locale/localedef
+else
+LOCALEDEF=I18NPATH=. GCONV_PATH=$(common-objpfx)iconvdata LC_ALL=C \
+$(common-objpfx)locale/localedef-native
+endif
 install-locales: $(INSTALL-SUPPORTED-LOCALES)
 
 install-locales-dir:
diff -Naur glibc-2.7.orig/Makeconfig glibc-2.7/Makeconfig
--- glibc-2.7.orig/Makeconfig	2008-05-18 22:49:23.000000000 +0200
+++ glibc-2.7/Makeconfig	2008-05-18 22:49:40.000000000 +0200
@@ -445,6 +445,13 @@
 			   $(common-objpfx)libc% $(+postinit),$^) \
 	      $(link-extra-libs-static) $(link-libc-static) $(+postctor) $(+postinit)
 endif
+# Command for linking programs against the host system.
+ifndef +link-native
++link-native = $(BUILD_CC) -static -g -o $@ $^ \
+              $(LDFLAGS) $(LDFLAGS-$(@F)) \
+              $(combreloc-LDFLAGS) $(relro-LDFLAGS) \
+              $(link-extra-libs)
+endif
 # Command for statically linking bounded-pointer programs with the C library.
 ifndef +link-bounded
 +link-bounded = $(CC) -nostdlib -nostartfiles -static -fbounded-pointers -o $@ \
@@ -658,6 +665,8 @@
 	    $(+sysdep-includes) $(includes) \
 	    $(patsubst %/,-I%,$(..)) $(libio-include) -I. $(sysincludes)
 
++includes-native = -I$(..)include-native -I$(objpfx) -I.
+
 # Since libio has several internal header files, we use a -I instead
 # of many little headers in the include directory.
 libio-include = -I$(..)libio
@@ -672,10 +681,15 @@
 	   $(foreach lib,$(libof-$(basename $(@F))) \
 		         $(libof-$(<F)) $(libof-$(@F)),$(CPPFLAGS-$(lib))) \
 	   $(CPPFLAGS-$(<F)) $(CPPFLAGS-$(@F)) $(CPPFLAGS-$(basename $(@F)))
+CPPFLAGS-native = -D_GNU_SOURCE $($(subdir)-CPPFLAGS) $(+includes-native) $(defines) \
+		  $(CPPFLAGS-$(suffix $@)) -include $(..)include/libc-symbols.h \
+		  $(CPPFLAGS-$(<F)) $(CPPFLAGS-$(@F)) $(CPPFLAGS-$(basename $(@F)))
 override CFLAGS	= -std=gnu99 $(gnu89-inline-CFLAGS) \
 		  $(filter-out %frame-pointer,$(+cflags)) $(+gccwarn-c) \
 		  $(sysdep-CFLAGS) $(CFLAGS-$(suffix $@)) $(CFLAGS-$(<F)) \
 		  $(CFLAGS-$(@F))
+override CFLAGS-native = -std=gnu99 $(default_cflags) $(+gccwarn-c) \
+			 $(CFLAGS-$(suffix $@)) $(CFLAGS-$(<F)) $(CFLAGS-$(@F))
 override CXXFLAGS = $(c++-sysincludes) \
 		    $(filter-out %frame-pointer,$(+cflags)) $(sysdep-CFLAGS) \
 		    $(CFLAGS-$(suffix $@)) $(CFLAGS-$(<F)) $(CFLAGS-$(@F))
diff -Naur glibc-2.7.orig/Makerules glibc-2.7/Makerules
--- glibc-2.7.orig/Makerules	2008-05-18 22:49:23.000000000 +0200
+++ glibc-2.7/Makerules	2008-05-18 22:49:40.000000000 +0200
@@ -292,6 +292,9 @@
 object-suffixes-left := $(all-object-suffixes)
 include $(o-iterator)
 
+$(objpfx)%-native.o: %.c $(before-compile)
+	$(native-compile-command.c)
+
 # Omit the objpfx rules when building in the source tree, because
 # objpfx is empty and so these rules just override the ones above.
 ifdef objpfx
@@ -368,6 +371,8 @@
 compile-command.s = $(COMPILE.s) $< $(OUTPUT_OPTION) $(compile-mkdep-flags)
 compile-command.c = $(compile.c) $(OUTPUT_OPTION) $(compile-mkdep-flags)
 compile-command.cc = $(compile.cc) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+# Native commands
+native-compile-command.c = $(native-compile.c) $(OUTPUT_OPTION) $(compile-mkdep-flags)
 
 # GCC can grok options after the file name, and it looks nicer that way.
 compile.c = $(CC) $< -c $(CFLAGS) $(CPPFLAGS)
@@ -377,6 +382,8 @@
 COMPILE.S = $(CC) -c $(CPPFLAGS) $(S-CPPFLAGS) \
 		  $(ASFLAGS) $(ASFLAGS-$(suffix $@))
 COMPILE.s = $(filter-out -pipe,$(CC)) -c $(ASFLAGS)
+# Native commands
+native-compile.c = $(BUILD_CC) -g $< -c $(CFLAGS-native) $(CPPFLAGS-native)
 
 # We need this for the output to go in the right place.  It will default to
 # empty if make was configured to work with a cc that can't grok -c and -o
@@ -1170,7 +1177,7 @@
 $(make-target-directory)
 $(patsubst %/,cd % &&,$(objpfx)) \
 $(BUILD_CC) $($(basename $(<F))-CFLAGS) $(ALL_BUILD_CFLAGS) \
-	    $(firstword $(filter /%,$< $(shell pwd)/$<)) -o $(@F)
+	    $(addprefix $(shell pwd)/, $^) -o $(@F)
 endef
 
 # Command to compile $< in $(common-objdir) using the native libraries.
diff -Naur glibc-2.7.orig/malloc/Makefile glibc-2.7/malloc/Makefile
--- glibc-2.7.orig/malloc/Makefile	2008-05-18 22:49:24.000000000 +0200
+++ glibc-2.7/malloc/Makefile	2008-05-18 22:49:40.000000000 +0200
@@ -73,10 +73,6 @@
 endif
 endif
 
-# Unless we get a test for the availability of libgd which also works
-# for cross-compiling we disable the memusagestat generation in this
-# situation.
-ifneq ($(cross-compiling),yes)
 # If the gd library is available we build the `memusagestat' program.
 ifneq ($(LIBGD),no)
 others: $(objpfx)memusage
@@ -91,7 +87,6 @@
 # is to presume that the standard system headers will be ok for this file.
 $(objpfx)memusagestat.o: sysincludes = # nothing
 endif
-endif
 
 # Another goal which can be used to override the configure decision.
 .PHONY: do-memusagestat
diff -Naur glibc-2.7.orig/Rules glibc-2.7/Rules
--- glibc-2.7.orig/Rules	2008-05-18 22:49:23.000000000 +0200
+++ glibc-2.7/Rules	2008-05-18 22:49:40.000000000 +0200
@@ -87,7 +87,7 @@
 
 .PHONY: others tests
 ifeq ($(build-programs),yes)
-others: $(addprefix $(objpfx),$(others) $(sysdep-others) $(extra-objs))
+others: $(addprefix $(objpfx),$(others) $(others-native) $(sysdep-others) $(extra-objs))
 else
 others: $(addprefix $(objpfx),$(extra-objs))
 endif
@@ -106,9 +106,11 @@
 ifeq ($(build-programs),yes)
 binaries-all = $(others) $(sysdep-others) $(tests) $(xtests) $(test-srcs)
 binaries-static = $(others-static) $(tests-static) $(xtests-static)
+binaries-native = $(others-native)
 else
 binaries-all = $(tests) $(xtests) $(test-srcs)
 binaries-static =
+binaries-native =
 endif
 
 binaries-shared = $(filter-out $(binaries-static), $(binaries-all))
@@ -127,6 +129,11 @@
 	$(+link-static)
 endif
 
+ifneq "$(strip $(binaries-native))" ""
+$(addprefix $(objpfx),$(binaries-native)): %: %.o
+	$(+link-native)
+endif
+
 ifeq ($(build-bounded),yes)
 binaries-bounded = $(addsuffix -bp,$(tests) $(xtests) $(test-srcs))
 $(addprefix $(objpfx),$(binaries-bounded)): %-bp: %.ob \
diff -Naur glibc-2.7.orig/sunrpc/Makefile glibc-2.7/sunrpc/Makefile
--- glibc-2.7.orig/sunrpc/Makefile	2008-05-18 22:49:23.000000000 +0200
+++ glibc-2.7/sunrpc/Makefile	2008-05-18 22:49:40.000000000 +0200
@@ -70,6 +70,9 @@
 	    clnt_unix svc_unix create_xid xdr_intXX_t
 
 others := rpcinfo
+ifneq ($(cross-compiling),no)
+others-native := rpcgen-native
+endif
 install-bin := rpcgen
 install-sbin := rpcinfo
 rpcgen-objs = rpc_main.o rpc_hout.o rpc_cout.o rpc_parse.o \
@@ -98,15 +101,12 @@
 	     $(resolvobjdir)/libresolv.a
 endif
 
-ifeq (no,$(cross-compiling))
-# We can only build this library if we can run the rpcgen we build.
 headers += $(rpcsvc:%.x=rpcsvc/%.h)
 extra-libs := librpcsvc
 extra-libs-others := librpcsvc # Make it in `others' pass, not `lib' pass.
 librpcsvc-routines = $(rpcsvc:%.x=x%)
 librpcsvc-inhibit-o = .os # Build no shared rpcsvc library.
 omit-deps = $(librpcsvc-routines)
-endif
 
 CFLAGS-xbootparam_prot.c = -Wno-unused $(PIC-ccflag)
 CFLAGS-xnlm_prot.c = -Wno-unused $(PIC-ccflag)
@@ -136,13 +136,26 @@
   $(addprefix $(csu-objpfx),start.o) $(+preinit) $(+postinit)
 	$(+link)
 
+ifneq ($(cross-compiling),no)
+rpcgen.c:
+	touch rpcgen.c
+
+$(objpfx)rpcgen-native: $(addprefix $(objpfx),$(rpcgen-objs:%.o=%-native.o))
+endif
+
 # This makes sure -DNOT_IN_libc is passed for all these modules.
 cpp-srcs-left := $(rpcgen-objs:.o=.c)
 lib := nonlib
 include $(patsubst %,$(..)cppflags-iterator.mk,$(cpp-srcs-left))
 
 # Tell rpcgen where to find the C preprocessor.
+ifeq ($(cross-compiling),no)
 rpcgen-cmd = CPP='$(CC) -E -x c-header' $(built-program-cmd) -Y ../scripts
+rpcgen = $(objpfx)rpcgen
+else
+rpcgen-cmd = CPP='$(CC) -E -x c-header' $(objpfx)rpcgen-native -Y ../scripts
+rpcgen = $(objpfx)rpcgen-native
+endif
 
 # Install the rpc data base file.
 $(inst_sysconfdir)/rpc: etc.rpc $(+force)
@@ -153,7 +166,7 @@
 # relinked.
 $(rpcsvc:%.x=$(objpfx)rpcsvc/%.h): $(objpfx)rpcsvc/%.h: $(objpfx)rpcsvc/%.stmp
 	@:
-$(objpfx)rpcsvc/%.stmp: rpcsvc/%.x $(objpfx)rpcgen
+$(objpfx)rpcsvc/%.stmp: rpcsvc/%.x $(rpcgen)
 	$(make-target-directory)
 	-@rm -f ${@:stmp=T} $@
 	$(rpcgen-cmd) -h $< -o ${@:stmp=T}
@@ -163,7 +176,7 @@
 # Generate the rpcsvc XDR functions with rpcgen.
 $(rpcsvc:%.x=$(objpfx)x%.c): $(objpfx)x%.c: $(objpfx)x%.stmp
 	@:
-$(objpfx)x%.stmp: rpcsvc/%.x $(objpfx)rpcgen
+$(objpfx)x%.stmp: rpcsvc/%.x $(rpcgen)
 	-@rm -f ${@:stmp=T} $@
 	$(rpcgen-cmd) -c $< -o ${@:stmp=T}
 	$(move-if-change) $(@:stmp=T) $(@:stmp=c)
diff -Naur glibc-2.7.orig/timezone/Makefile glibc-2.7/timezone/Makefile
--- glibc-2.7.orig/timezone/Makefile	2008-05-18 22:49:23.000000000 +0200
+++ glibc-2.7/timezone/Makefile	2008-05-18 22:49:40.000000000 +0200
@@ -28,6 +28,9 @@
 extra-objs := scheck.o ialloc.o
 
 others	:= zdump zic
+ifneq ($(cross-compiling),no)
+others-native := zic-native
+endif
 tests	:= test-tz tst-timezone
 
 tzbases := africa antarctica asia australasia europe northamerica \
@@ -69,13 +72,10 @@
 					 $(addprefix $(inst_zonedir)/, \
 						     $(posixrules-file)))
 
-ifeq ($(cross-compiling),no)
-# Don't try to install the zoneinfo files since we can't run zic.
 install-others = $(addprefix $(inst_zonedir)/,$(zonenames) \
 					      $(zonenames:%=posix/%) \
 					      $(zonenames:%=right/%)) \
 		 $(installed-localtime-file) $(installed-posixrules-file)
-endif
 
 ifeq ($(have-ksh),yes)
 install-others += $(inst_zonedir)/iso3166.tab $(inst_zonedir)/zone.tab
@@ -128,7 +128,11 @@
 # We have to use `-d $(inst_zonedir)' to explictly tell zic where to
 # place the output files although $(zonedir) is compiled in.  But the
 # user might have set $(install_root) on the command line of `make install'.
+ifeq ($(cross-compiling),no)
 zic-cmd = $(built-program-cmd) -d $(inst_zonedir)
+else
+zic-cmd = $(common-objpfx)/timezone/zic-native -d $(inst_zonedir)
+endif
 tzcompile = $(zic-cmd)$(target-zone-flavor) -L $(word 3,$^) \
 	    -y $(dir $(word 4,$^))$(notdir $(word 4,$^)) $<
 
@@ -158,8 +162,10 @@
 	$(zic-cmd) -p $(posixrules)
 endif
 
-
 $(objpfx)zic: $(objpfx)scheck.o $(objpfx)ialloc.o
+ifneq ($(cross-compiling),no)
+$(objpfx)zic-native:  $(objpfx)scheck-native.o $(objpfx)ialloc-native.o
+endif
 
 tz-cflags = -DTZDIR='"$(zonedir)"' \
 	    -DTZDEFAULT='"$(localtime-file)"' \
