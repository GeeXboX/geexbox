diff -r 99d87d930c49 libmenu/menu_filesel.c
--- a/libmenu/menu_filesel.c	Sun Apr 30 16:54:42 2006 +0200
+++ b/libmenu/menu_filesel.c	Sun Apr 30 16:54:42 2006 +0200
@@ -6,6 +6,7 @@
 #include <string.h>
 #include <sys/types.h>
 #include <sys/stat.h>
+#include <fcntl.h>
 #include <ctype.h>
 #include <unistd.h>
 #include <limits.h>
@@ -179,6 +179,7 @@ static int open_dir(menu_t* menu,char* a
   struct dirent *dp;
   struct stat st;
   int n;
+  int path_fp;
   char* p = NULL;
   list_entry_t* e;
   DIR* dirp;
@@ -200,6 +200,13 @@ static int open_dir(menu_t* menu,char* a
     mp_msg(MSGT_GLOBAL,MSGL_ERR,MSGTR_LIBMENU_OpendirError, strerror(errno));
     return 0;
   }
+
+  path_fp = open ("/var/mp_current_path", O_CREAT | O_WRONLY | O_TRUNC);
+  if (path_fp >= 0)
+    {
+      write (path_fp, mpriv->dir, strlen (mpriv->dir));
+      close (path_fp);
+    }
 
   namelist = (char **) malloc(sizeof(char *));
   extensions = get_extensions(menu);
@@ -372,7 +372,7 @@ static void clos(menu_t* menu) {
 }
 
 static int open_fs(menu_t* menu, char* args) {
-  char *path = mpriv->path;
+  char *path = mpriv->path, *freepath = NULL;
   int r = 0;
   char wd[PATH_MAX+1];
   args = NULL; // Warning kill
@@ -381,6 +381,30 @@ static int open_fs(menu_t* menu, char* a
   menu->read_cmd = read_cmd;
   menu->read_key = read_key;
   menu->close = clos;
+
+  if (!path || path[0] == '\0') {
+    struct stat st;
+    int path_fp;
+
+    path_fp = open ("/var/mp_current_path", O_RDONLY);
+    if (path_fp >= 0)
+      {
+        if (!fstat(path_fp, &st) && st.st_size > 0 && (path = malloc(st.st_size+1)))
+          {
+            if (read(path_fp, path, st.st_size) == st.st_size && path[0] != '\0')
+              {
+                freepath = path;
+                path[st.st_size] = '\0';
+              }
+            else
+              {
+                free(path);
+                path = NULL;
+              }
+          }
+        close (path_fp);
+      }
+  }
 
   getcwd(wd,PATH_MAX);
   if(!path || path[0] == '\0') {
@@ -400,6 +400,9 @@ static int open_fs(menu_t* menu, char* a
   } else
     r = open_dir(menu,path);
 
+  if (freepath)
+    free(freepath);
+
   return r;
 }
   
