diff -Naur MPlayer-r25688.orig/command.c MPlayer-r25688/command.c
--- MPlayer-r25688.orig/command.c	2008-01-21 23:16:58.000000000 +0100
+++ MPlayer-r25688/command.c	2008-01-21 23:17:30.000000000 +0100
@@ -1783,18 +1783,47 @@
             if (!arg)
                 return M_PROPERTY_ERROR;
             M_PROPERTY_CLAMP(prop, *(float *) arg);
-            text_font_scale_factor = *(float *) arg;
-            force_load_font = 1;
+#ifdef USE_ASS
+            if (ass_enabled) {
+              ass_font_scale = *(float *) arg;
+              ass_force_reload = 1;
+            }
+            else
+#endif
+            {
+              text_font_scale_factor = *(float *) arg;
+              force_load_font = 1;
+            }
             return M_PROPERTY_OK;
         case M_PROPERTY_STEP_UP:
         case M_PROPERTY_STEP_DOWN:
+#ifdef USE_ASS
+            if (ass_enabled)
+              ass_font_scale += (arg ? *(float *) arg : 0.1)*
+                (action == M_PROPERTY_STEP_UP ? 1.0 : -1.0);
+            else
+#endif
             text_font_scale_factor += (arg ? *(float *) arg : 0.1)*
                 (action == M_PROPERTY_STEP_UP ? 1.0 : -1.0);
-            M_PROPERTY_CLAMP(prop, text_font_scale_factor);
-            force_load_font = 1;
+#ifdef USE_ASS
+            if (ass_enabled) {
+              M_PROPERTY_CLAMP(prop, ass_font_scale);
+              ass_force_reload = 1;
+            }
+            else
+#endif
+            {
+              M_PROPERTY_CLAMP(prop, text_font_scale_factor);
+              force_load_font = 1;
+            }
             return M_PROPERTY_OK;
         default:
-            return m_property_float_ro(prop, action, arg, text_font_scale_factor);
+#ifdef USE_ASS
+            if (ass_enabled)
+              return m_property_float_ro(prop, action, arg, ass_font_scale);
+            else
+#endif
+              return m_property_float_ro(prop, action, arg, text_font_scale_factor);
     }
 }
 #endif
diff -Naur MPlayer-r25688.orig/libass/ass_mp.c MPlayer-r25688/libass/ass_mp.c
--- MPlayer-r25688.orig/libass/ass_mp.c	2008-01-21 23:16:58.000000000 +0100
+++ MPlayer-r25688/libass/ass_mp.c	2008-01-21 23:17:22.000000000 +0100
@@ -52,6 +52,7 @@
 char* ass_border_color = NULL;
 char* ass_styles_file = NULL;
 int ass_hinting = ASS_HINTING_NATIVE + 4; // native hinting for unscaled osd
+int ass_force_reload = 0;
 
 #ifdef HAVE_FONTCONFIG
 extern int font_fontconfig;
diff -Naur MPlayer-r25688.orig/libass/ass_mp.h MPlayer-r25688/libass/ass_mp.h
--- MPlayer-r25688.orig/libass/ass_mp.h	2008-01-21 23:16:58.000000000 +0100
+++ MPlayer-r25688/libass/ass_mp.h	2008-01-21 23:17:22.000000000 +0100
@@ -36,6 +36,7 @@
 extern char* ass_border_color;
 extern char* ass_styles_file;
 extern int ass_hinting;
+extern int ass_force_reload;
 
 ass_track_t* ass_default_track(ass_library_t* library);
 int ass_process_subtitle(ass_track_t* track, subtitle* sub);
diff -Naur MPlayer-r25688.orig/libmpcodecs/vf_ass.c MPlayer-r25688/libmpcodecs/vf_ass.c
--- MPlayer-r25688.orig/libmpcodecs/vf_ass.c	2008-01-21 23:16:58.000000000 +0100
+++ MPlayer-r25688/libmpcodecs/vf_ass.c	2008-01-21 23:17:48.000000000 +0100
@@ -309,6 +309,11 @@
 
 static int render_frame(struct vf_instance_s* vf, mp_image_t *mpi, const ass_image_t* img)
 {
+	if (vf->priv->ass_priv && ass_force_reload) {
+		ass_configure(vf->priv->ass_priv, vf->priv->outw, vf->priv->outh, 0);
+		ass_force_reload = 0;
+	}
+	
 	if (img) {
 		memset(vf->priv->dirty_rows, 0, vf->priv->outh); // reset dirty rows
 		while (img) {
