diff -r 3f43ce128995 cfg-mplayer.h
--- a/cfg-mplayer.h	Sun Apr 30 16:54:32 2006 +0200
+++ b/cfg-mplayer.h	Sun Apr 30 17:12:13 2006 +0200
@@ -336,6 +336,8 @@ m_option_t mplayer_opts[]={
 	{"guiwid", &guiWinID, CONF_TYPE_INT, 0, 0, 0, NULL},
 #endif
 
+	{"bgvideo", &bg_video, CONF_TYPE_STRING, 0, 0, 0, NULL},
+
 	{"noloop", &loop_times, CONF_TYPE_FLAG, 0, 0, -1, NULL},
 	{"loop", &loop_times, CONF_TYPE_INT, CONF_RANGE, -1, 10000, NULL},
 	{"playlist", NULL, CONF_TYPE_STRING, 0, 0, 0, NULL},
diff -r 3f43ce128995 mplayer.c
--- a/mplayer.c	Sun Apr 30 16:54:32 2006 +0200
+++ b/mplayer.c	Sun Apr 30 17:12:13 2006 +0200
@@ -278,6 +278,9 @@ static char* spudec_ifo=NULL;
 char* filename=NULL; //"MI2-Trailer.avi";
 int forced_subs_only=0;
 int file_filter=1;
+
+static char* bg_video = NULL;
+demuxer_t *bg_demuxer = NULL;
 
 // cache2:
        int stream_cache_size=-1;
@@ -416,7 +416,8 @@
   case META_VIDEO_BITRATE:
   case META_VIDEO_RESOLUTION:
   {
-    if (!mpctx->sh_video)
+    if (!mpctx->sh_video || (bg_demuxer && bg_demuxer->video && bg_demuxer->video->sh
+        && mpctx->sh_video == bg_demuxer->video->sh))
       return 0;
     break;
   }
@@ -604,6 +604,13 @@ static void uninit_player(unsigned int m
 	free_demuxer(mpctx->demuxer);
     }
     mpctx->demuxer=NULL;
+    current_module="free_bg_demuxer";
+    if(bg_demuxer) {
+      stream_t* bg_s = bg_demuxer->stream;
+      free_demuxer(bg_demuxer);
+      bg_demuxer = NULL;
+      free_stream(bg_s);
+    }
   }
 
   // kill the cache process:
@@ -1399,7 +1399,7 @@ void set_osd_bar(int type,char* name,dou
  * 
  */
 
-static void update_osd_msg(void) {
+static void update_osd_msg(demux_stream_t *d_audio) {
     mp_osd_msg_t *msg;
     static char osd_text[64] = "";
     static char osd_text_timer[64];
@@ -1424,6 +1424,7 @@ static void update_osd_msg(void) {
             int percentage = -1;
             char percentage_text[10];
             int pts = demuxer_get_current_time(mpctx->demuxer);
+            if (bg_demuxer) pts = d_audio->pts+(ds_tell_pts(d_audio)-sh_audio->a_in_buffer_len)/sh_audio->i_bps;
             
             if (mpctx->osd_show_percentage)
                 percentage = demuxer_get_percent_pos(mpctx->demuxer);
@@ -1624,10 +1624,17 @@ if(!sh_video) {
 	current_module = "video_read_frame";
 	in_size = ds_get_packet_pts(d_video, &start, &pts);
 	if (in_size < 0) {
+	  if(bg_demuxer) {
+	    if(!demux_seek(bg_demuxer,0,0,1))
+	      hit_eofs = 1;
+	    else
+	      continue;
+	  } else {
 	    // try to extract last frames in case of decoder lag
 	    in_size = 0;
 	    pts = 1e300;
 	    hit_eof = 1;
+	  }
 	}
 	if (in_size > max_framesize)
 	    max_framesize = in_size;
@@ -1635,7 +1635,7 @@
 	decoded_frame = decode_video(sh_video, start, in_size, 0, pts);
 	if (decoded_frame) {
 	    update_subtitles(sh_video, mpctx->d_sub, 0);
-	    update_osd_msg();
+	    update_osd_msg(mpctx->d_audio);
 	    current_module = "filter video";
 	    if (filter_video(sh_video, decoded_frame, sh_video->pts))
 		break;
@@ -1699,6 +1699,13 @@ if(time_frame>0.001 && !(vo_flags&256)){
     current_module="av_sync";
 
     if(mpctx->sh_audio){
+     if(bg_demuxer) {
+      if(!quiet) mp_msg(MSGT_AVSYNC,MSGL_STATUS,"A:%6.1f %4.1f%% %d%%   \r"
+ 		       ,sh_audio->delay-audio_out->get_delay()
+ 		       ,(sh_audio->delay>0.5)?100.0*audio_time_usage/(double)sh_audio->delay:0
+ 		       ,cache_fill_status
+ 		       );
+     } else {
 	double a_pts, v_pts;
 
 	if (autosync)
@@ -1750,6 +1750,7 @@ if(time_frame>0.001 && !(vo_flags&256)){
 		print_status(a_pts - audio_delay, AV_delay, c_total);
 	}
     
+     }
     } else {
 	// No audio:
     
@@ -2049,7 +2049,7 @@ if ((user_muted | edl_muted) != mixer.mu
 	    ++total_frame_cnt;
 	}
 	update_subtitles(sh_video, mpctx->d_sub, 0);
-	update_osd_msg();
+	update_osd_msg(mpctx->d_audio);
 	current_module = "decode_video";
 	decoded_frame = decode_video(sh_video, start, in_size, drop_frame,
 				     sh_video->pts);
@@ -2094,7 +2094,7 @@ if(auto_quality>0){
 	    int mlen = strlen(msg);
 	    msg[mlen-1] = '\0';
 	    set_osd_msg(OSD_MSG_PAUSE, 1, 0, "%s", msg+1);
-	    update_osd_msg();
+	    update_osd_msg(mpctx->d_audio);
 	} else
 	    mp_msg(MSGT_CPLAYER,MSGL_STATUS,MSGTR_Paused);
         mp_msg(MSGT_IDENTIFY, MSGL_INFO, "ID_PAUSED\n");
@@ -3077,6 +3077,34 @@ sh_audio=d_audio->sh;
 mpctx->sh_audio=mpctx->d_audio->sh;
 mpctx->sh_video=mpctx->d_video->sh;
 
+while(sh_audio && !sh_video && bg_video) {
+  int bg_file_format = 0;
+  stream_t* bg_s;
+  mp_msg(MSGT_CPLAYER,MSGL_INFO, "Open bgvideo: %s\n",bg_video);
+  bg_s = open_stream(bg_video,NULL,&bg_file_format);
+  if(!bg_s) {
+    mp_msg(MSGT_CPLAYER,MSGL_ERR, "Couldn't open the stream for back ground video: %s\n",bg_video);
+    break;
+  }
+  bg_demuxer = demux_open(bg_s,bg_file_format,-2,video_id,dvdsub_id,bg_video);
+  if(!bg_demuxer) {
+    mp_msg(MSGT_DEMUXER,MSGL_ERR,"Failed to open background video\n");
+    free_stream(bg_s);
+    break;
+  }
+  if(!bg_demuxer->video && !bg_demuxer->video->sh) {
+    mp_msg(MSGT_DEMUXER,MSGL_ERR,"The background video don't have a video stream\n");
+    free_demuxer(bg_demuxer);
+    bg_demuxer = NULL;
+    free_stream(bg_s);
+    break;
+  }
+  d_video = bg_demuxer->video;
+  sh_video = d_video->sh;
+  mp_msg(MSGT_DEMUXER,MSGL_INFO,"Background video should work ;)\n");
+  break;
+}
+
 if(mpctx->sh_video){
 
   current_module="video_read_properties";
@@ -3271,7 +3271,7 @@ int was_paused=0;
 // Make sure old OSD does not stay around,
 // e.g. with -fixed-vo and same-resolution files
 clear_osd_msgs();
-update_osd_msg();
+update_osd_msg(mpctx->d_audio);
 
 //================ SETUP AUDIO ==========================
 
@@ -3372,6 +3372,7 @@ while(sh_audio){
 	if (!mpctx->sh_video)
 	    mpctx->eof = PT_NEXT_ENTRY;
 
+if(bg_demuxer && mpctx->d_audio->eof) eof=1;
 
 if(!mpctx->sh_video) {
   // handle audio-only case:
@@ -3384,7 +3440,7 @@
 
   if(end_at.type == END_AT_TIME && end_at.pos < a_pos)
     mpctx->eof = PT_NEXT_ENTRY;
-  update_osd_msg();
+  update_osd_msg(mpctx->d_audio);
 
 } else {
 
@@ -3467,6 +3467,15 @@ if(time_frame>0.001 && !(vo_flags&256)){
 
  if (play_n_frames >= 0 && !frame_time_remaining && blit_frame) {
      --play_n_frames;
+     if(play_n_frames<0) {
+	if(bg_demuxer) {
+	   if(!demux_seek(bg_demuxer,0,0,1))
+		eof = PT_NEXT_ENTRY;
+	   else
+		play_n_frames = play_n_frames_mf;
+	} else
+	   mpctx->eof = PT_NEXT_ENTRY;
+     }
      if (play_n_frames <= 0) mpctx->eof = PT_NEXT_ENTRY;
  }
 
