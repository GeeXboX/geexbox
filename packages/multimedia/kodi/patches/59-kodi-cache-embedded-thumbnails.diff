--- a/xbmc/music/MusicThumbLoader.cpp	2016-01-31 15:03:34.251330287 +0100
+++ b/xbmc/music/MusicThumbLoader.cpp	2016-01-31 15:03:34.275330288 +0100
@@ -151,8 +151,11 @@
 
   if (!pItem->HasArt("thumb"))
   {
+    EmbeddedArt ea;
+
     // Look for embedded art
-    if (pItem->HasMusicInfoTag() && !pItem->GetMusicInfoTag()->GetCoverArtInfo().empty())
+    if (pItem->HasMusicInfoTag() && 
+        (!pItem->GetMusicInfoTag()->GetCoverArtInfo().empty() || GetEmbeddedThumb(pItem->GetPath(), ea)))
     {
       // The item has got embedded art but user thumbs overrule, so check for those first
       if (!FillThumb(*pItem, false)) // Check for user thumbs but ignore folder thumbs
@@ -160,6 +163,7 @@
         // No user thumb, use embedded art
         std::string thumb = CTextureUtils::GetWrappedImageURL(pItem->GetPath(), "music");
         pItem->SetArt("thumb", thumb);
+        SetCachedImage(*pItem, "thumb", thumb);
       }
     }
     else
--- a/xbmc/music/EmbeddedArt.h	2016-01-31 19:10:42.391935884 +0100
+++ b/xbmc/music/EmbeddedArt.h	2016-01-31 19:10:42.411935885 +0100
@@ -30,7 +30,7 @@
   class EmbeddedArtInfo : public IArchivable
   {
   public:
-    EmbeddedArtInfo() { }
+    EmbeddedArtInfo() { size = 0; }
     EmbeddedArtInfo(size_t size, const std::string &mime);
     ~EmbeddedArtInfo() { }
 
