#!/bin/sh

. config/options

get_meta $1
cd $PKG_BUILD_DIR

mkdir -p .install/lib .install/include .install/usr/bin

out_dir=../../.install

if [ "$TARGET_PLATFORM" = a20 ] ; then
  # Use A10 blobs for now...
  # api_version="2"
  api_version=""
  export CEDARX_CHIP_VERSION=A20
else
  api_version=""
  export CEDARX_CHIP_VERSION=A10
fi

if [ "$ARM_HARDFLOAT_ABI" = yes ] ; then
  cd libcedarv/linux-armhf$api_version
else
  cd libcedarv/linux-armel$api_version
  cp adapter/cdxalloc/libcedarxalloc.so $out_dir/lib/
fi

export CROSS_COMPILE=$TARGET_PREFIX
make

if [ -z $api_version ] ; then
  cp *.h $out_dir/include/
  cp adapter/*.h $out_dir/include/
  cp libvecore/*.h $out_dir/include/
  cp libcedarv/libcedarv.h $out_dir/include/
  cp libvecore/libvecore.so $out_dir/lib/libvecore-native.so

  # build test program
  make -C sample
  cp sample/ve $out_dir/usr/bin/ve_test

else
  cp include/include_system/*.h $out_dir/include/
  cp include/include_platform/CHIP_$CEDARX_CHIP_VERSION/*.h $out_dir/include/
  cp include/include_platform/CHIP_$CEDARX_CHIP_VERSION/disp/types.h $out_dir/include/
  cp include/include_platform/CHIP_$CEDARX_CHIP_VERSION/disp/drv_display.h $out_dir/include/
  cp include/include_platform/CHIP_$CEDARX_CHIP_VERSION/disp/drv_display.h $out_dir/include/drv_display_sun4i.h
  cp vdecoder/*.h $out_dir/include/
  cp vdecoder/adapter/*.h $out_dir/include/
  cp vdecoder/adapter/adapter_cedarx_linux_$CEDARX_CHIP_VERSION/*.h $out_dir/include/
  cp vdecoder/libve/*.h $out_dir/include/
  cp vdecoder/libve/libvecore.so $out_dir/lib/libvecore-native.so

  # test program is build automatically
  cp ./ve $out_dir/usr/bin/ve_test

fi

cp libcedarv.a $out_dir/lib/
cp libcedarx.so $out_dir/lib/
ln -sf libvecore-native.so $out_dir/lib/libvecore.so

strip_libs $out_dir/lib
strip_bins $out_dir/usr/bin

exit 0
