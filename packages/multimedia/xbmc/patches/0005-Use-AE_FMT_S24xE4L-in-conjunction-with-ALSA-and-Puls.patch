From b68104dfe101f26d2fa0aef860bbf9f090ae4124 Mon Sep 17 00:00:00 2001
From: warped-rudi <r.ihle@s-t.de>
Date: Tue, 15 Apr 2014 18:14:27 +0200
Subject: [PATCH 05/22] Use AE_FMT_S24xE4L in conjunction with ALSA and
 PulseAudio

---
 xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp  |    4 ++--
 xbmc/cores/AudioEngine/Sinks/AESinkPULSE.cpp |   12 ++++++------
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp b/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
index 768fb22..c608231 100644
--- a/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
+++ b/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
@@ -268,7 +268,7 @@ snd_pcm_format_t CAESinkALSA::AEFormatToALSAFormat(const enum AEDataFormat forma
     case AE_FMT_S16NE : return SND_PCM_FORMAT_S16;
     case AE_FMT_S16LE : return SND_PCM_FORMAT_S16_LE;
     case AE_FMT_S16BE : return SND_PCM_FORMAT_S16_BE;
-    case AE_FMT_S24NE4H: return SND_PCM_FORMAT_S24;
+    case AE_FMT_S24NE4L: return SND_PCM_FORMAT_S24;
 #ifdef __BIG_ENDIAN__
     case AE_FMT_S24NE3: return SND_PCM_FORMAT_S24_3BE;
 #else
@@ -343,7 +343,7 @@ bool CAESinkALSA::InitializeHW(const ALSAConfig &inconfig, ALSAConfig &outconfig
       {
         /* if we opened in 32bit and only have 24bits, pack into 24 */
         if (fmtBits == 32 && bits == 24)
-          i = AE_FMT_S24NE4H;
+          i = AE_FMT_S24NE4L;
         else
           continue;
       }
diff --git a/xbmc/cores/AudioEngine/Sinks/AESinkPULSE.cpp b/xbmc/cores/AudioEngine/Sinks/AESinkPULSE.cpp
index 67e6104..c6a39c2 100644
--- a/xbmc/cores/AudioEngine/Sinks/AESinkPULSE.cpp
+++ b/xbmc/cores/AudioEngine/Sinks/AESinkPULSE.cpp
@@ -80,9 +80,9 @@ static pa_sample_format AEFormatToPulseFormat(AEDataFormat format)
     case AE_FMT_S24LE3: return PA_SAMPLE_S24LE;
     case AE_FMT_S24BE3: return PA_SAMPLE_S24BE;
     case AE_FMT_S24NE3: return PA_SAMPLE_S24NE;
-    case AE_FMT_S24LE4H: return PA_SAMPLE_S24_32LE;
-    case AE_FMT_S24BE4H: return PA_SAMPLE_S24_32BE;
-    case AE_FMT_S24NE4H: return PA_SAMPLE_S24_32NE;
+    case AE_FMT_S24LE4L: return PA_SAMPLE_S24_32LE;
+    case AE_FMT_S24BE4L: return PA_SAMPLE_S24_32BE;
+    case AE_FMT_S24NE4L: return PA_SAMPLE_S24_32NE;
     case AE_FMT_S32BE : return PA_SAMPLE_S32BE;
     case AE_FMT_S32LE : return PA_SAMPLE_S32LE;
     case AE_FMT_S32NE : return PA_SAMPLE_S32NE;
@@ -119,9 +119,9 @@ static AEDataFormat defaultDataFormats[] = {
   AE_FMT_S24LE3,
   AE_FMT_S24BE3,
   AE_FMT_S24NE3,
-  AE_FMT_S24LE4H,
-  AE_FMT_S24BE4H,
-  AE_FMT_S24NE4H,
+  AE_FMT_S24LE4L,
+  AE_FMT_S24BE4L,
+  AE_FMT_S24NE4L,
   AE_FMT_S32BE,
   AE_FMT_S32LE,
   AE_FMT_S32NE,
-- 
1.7.9.5

