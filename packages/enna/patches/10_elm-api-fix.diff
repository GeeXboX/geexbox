diff -Naur enna-r3117.orig/src/bin/enna.c enna-r3117/src/bin/enna.c
--- enna-r3117.orig/src/bin/enna.c	2010-05-23 11:22:43.499990394 +0200
+++ enna-r3117/src/bin/enna.c	2010-05-23 11:22:58.207491576 +0200
@@ -311,7 +311,7 @@
     Evas_Object *ic;
 
     // set custom elementary theme
-    elm_theme_extension_add(enna_config_theme_get());
+    elm_theme_extension_add(enna_config->eth, enna_config_theme_get());
 
     // show supported engines
     _list_engines();
diff -Naur enna-r3117.orig/src/bin/enna_config.c enna-r3117/src/bin/enna_config.c
--- enna-r3117.orig/src/bin/enna_config.c	2010-05-23 11:22:43.499990394 +0200
+++ enna-r3117/src/bin/enna_config.c	2010-05-23 11:23:01.787491054 +0200
@@ -69,7 +69,7 @@
     if (!enna_config->theme_file)
         goto err_theme;
 
-    elm_theme_overlay_add(enna_config->theme_file);
+    elm_theme_overlay_add(enna_config->eth, enna_config->theme_file);
     return;
 
 err_theme:
@@ -236,6 +236,7 @@
         snprintf(filename, sizeof(filename), "%s/enna.cfg",
                  enna_config_home_get());
 
+    enna_config->eth = elm_theme_new();
     enna_config->cfg_file = strdup(filename);
     enna_log(ENNA_MSG_INFO, NULL, "using config file: %s", filename);
 
@@ -260,6 +261,8 @@
         enna_config_section_parser_unregister(p);
     }
 
+    elm_theme_free(enna_config->eth);
+
     if (cfg_ini)
         ini_free(cfg_ini);
     cfg_ini = NULL;
diff -Naur enna-r3117.orig/src/bin/enna_config.h enna-r3117/src/bin/enna_config.h
--- enna-r3117.orig/src/bin/enna_config.h	2010-05-23 11:22:43.499990394 +0200
+++ enna-r3117/src/bin/enna_config.h	2010-05-23 11:23:03.597490821 +0200
@@ -22,11 +22,14 @@
 #ifndef ENNA_CONFIG_H
 #define ENNA_CONFIG_H
 
+#include <Elementary.h>
+
 typedef struct _Enna_Config Enna_Config;
 
 struct _Enna_Config
 {
     char *cfg_file;
+    Elm_Theme *eth;
     char *theme;
     char *theme_file;
     int idle_timeout;
