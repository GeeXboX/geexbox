#!/bin/sh

# Create a minimalist X.org configuration file.
# It is required to be able to set custom resolution.

. /etc/X11/X.cfg

CFG_FILE=/etc/X11/xorg.conf
DEFAULT_CFG_FILE=/etc/X11/xorg.default
RESOLUTIONS_FILE=/etc/X11/resolutions
HAVE_EDID=0
EDID_DATA=/tmp/edid-data
EDID_XORG=/tmp/edid-xorg
MODES=/tmp/modes
MONITOR_ID="Generic Monitor"

read_edid () {
  get-edid 2>/dev/null > $EDID_DATA
  if [ "$?" = 0 ]; then
    HAVE_EDID=1
    parse-edid < $EDID_DATA 2>/dev/null > $EDID_XORG
    CNT=`grep -n ::CUSTOM_MONITOR:: $DEFAULT_CFG_FILE | sed 's%\([0-9]*\).*%\1%'`
    TOTAL=`cat $DEFAULT_CFG_FILE | wc -l`
    head -n $((${CNT}-1)) $DEFAULT_CFG_FILE > $CFG_FILE
    cat $EDID_XORG >> $CFG_FILE
    tail -n $(($TOTAL-$CNT)) $DEFAULT_CFG_FILE >> $CFG_FILE
    MONITOR_ID=`grep Identifier $EDID_XORG | sed 's%.*"\(.*\)".*%\1%'`
  else
     # no monitor info can be found
     sed -i 's%::CUSTOM_MONITOR::%%' $CFG_FILE
  fi
  sed -i "s%::MONITOR_ID::%${MONITOR_ID}%" $CFG_FILE
}

configure_device () {
  DRV=${XORG_DRIVER}
  if [ $XORG_DRIVER = "auto" ]; then
    # Start X server in probe mode to find the best GPU driver
    Xorg -configure -probeonly -br
    DRV=`cat /xorg.conf.new | grep "Driver.*\"" | grep -v kbd | grep -v mouse | cut -f2 -d\"`
  fi
  sed -i "s%::DRIVER::%${DRV}%" $CFG_FILE
}

configure_monitor () {
  if [ "$XORG_HORIZSYNC" = "auto" -o "$XORG_VERTREFRESH" = "auto" ]; then
    # Default refresh rate
    HORIZSYNC="28-51"
    VERTREFRESH="43-60"

    # Try to get monitor's accurate refresh rate through EDID information
    ddcprobe | grep monitorrange 2>&1 > /dev/null
    if [ "$?" = 0 ]; then
      HORIZSYNC="`ddcprobe | grep monitorrange | sed 's%monitorrange: \(.*\),.*%\1%'`"
      VERTREFRESH="`ddcprobe | grep monitorrange | sed 's%monitorrange:.*, \(.*\)%\1%'`"
    fi
  else
    HORIZSYNC="$XORG_HORIZSYNC"
    VERTREFRESH="$XORG_VERTREFRESH"
  fi

  sed -i "s%::HS::%${HORIZSYNC}%" $CFG_FILE
  sed -i "s%::VR::%${VERTREFRESH}%" $CFG_FILE

  # Try to get modeline for resolution user asked for
  MODELINE="`gtf $XORG_RESX $XORG_RESY $XORG_RATE | grep Modeline`"
  sed -i "s%::MODELINE::%${MODELINE}%" $CFG_FILE
}

configure_screen () {
  if [ "$HAVE_EDID" = 1 ]; then
    cat $EDID_XORG | grep "Mode\ " | sed 's%.*"\(.*\)".*%\1%' > $MODES
    for r in `cat $MODES`; do
      MODELINES="$MODELINES \"$r\""
    done
  else
    MODE_NAME=`gtf $XORG_RESX $XORG_RESY $XORG_RATE | grep Modeline | sed 's%.*"\(.*\)".*%\1%'`
    MODELINES="\"${MODE_NAME}\""
  fi
  for r in `cat $RESOLUTIONS_FILE`; do
     FAILSAFE_RESOLUTIONS="$FAILSAFE_RESOLUTIONS \"$r\""
  done
  RES="${MODELINES} ${FAILSAFE_RESOLUTIONS}"
  sed -i "s%::MODES::%${RES}%g" $CFG_FILE
}

if [ ! -f $CFG_FILE ]; then
  cp $DEFAULT_CFG_FILE $CFG_FILE
  read_edid
  configure_device
  configure_monitor
  configure_screen
fi
