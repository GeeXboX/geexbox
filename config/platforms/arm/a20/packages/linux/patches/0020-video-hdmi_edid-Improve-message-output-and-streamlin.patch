From fc1a637088fafeb0139b84bd38c00f3a3eeabefb Mon Sep 17 00:00:00 2001
From: Rudi <r.ihle@s-t.de>
Date: Sun, 9 Nov 2014 09:55:23 +0100
Subject: [PATCH] video: hdmi_edid: Improve message output and streamline code

Signed-off-by: Rudi <r.ihle@s-t.de>
---
 drivers/video/sunxi/hdmi/hdmi_edid.c |   73 ++++++++++++++++++----------------
 1 file changed, 38 insertions(+), 35 deletions(-)

diff --git a/drivers/video/sunxi/hdmi/hdmi_edid.c b/drivers/video/sunxi/hdmi/hdmi_edid.c
index dc8462d..b37cb40 100644
--- a/drivers/video/sunxi/hdmi/hdmi_edid.c
+++ b/drivers/video/sunxi/hdmi/hdmi_edid.c
@@ -56,7 +56,7 @@ EDID_Header_Check(__u8 *pbuf)
 	if (pbuf[0] != 0x00 || pbuf[1] != 0xFF || pbuf[2] != 0xFF ||
 	    pbuf[3] != 0xFF || pbuf[4] != 0xFF || pbuf[5] != 0xFF ||
 	    pbuf[6] != 0xFF || pbuf[7] != 0x00) {
-		pr_info("EDID block0 header error\n");
+		pr_err("EDID block0 header error\n");
 		return -1;
 	}
 	return 0;
@@ -67,11 +67,11 @@ EDID_Version_Check(__u8 *pbuf)
 {
 	pr_info("EDID version: %d.%d\n", pbuf[0x12], pbuf[0x13]);
 	if (pbuf[0x12] != 0x01) {
-		pr_info("Unsupport EDID format,EDID parsing exit\n");
+		pr_err("Unsupport EDID format,EDID parsing exit\n");
 		return -1;
 	}
 	if (pbuf[0x13] < 3 && !(pbuf[0x18] & 0x02)) {
-		pr_info("EDID revision < 3 and preferred timing feature bit "
+		pr_err("EDID revision < 3 and preferred timing feature bit "
 			"not set, ignoring EDID info\n");
 		return -1;
 	}
@@ -81,39 +81,39 @@ EDID_Version_Check(__u8 *pbuf)
 static __s32
 Parse_AudioData_Block(__u8 *pbuf, __u8 size)
 {
-	__u8 sum = 0;
 	unsigned long rates = 0;
 
-	while (sum < size) {
-		if ((pbuf[sum] & 0xf8) == 0x08) {
-			int c = (pbuf[sum] & 0x7) + 1;
+	while (size >= 3) {
+		if ((pbuf[0] & 0xf8) == 0x08) {
+			int c = (pbuf[0] & 0x7) + 1;
 			pr_info("Parse_AudioData_Block: max channel=%d\n", c);
 			pr_info("Parse_AudioData_Block: SampleRate code=%x\n",
-			      pbuf[sum + 1]);
+			      pbuf[1]);
 			pr_info("Parse_AudioData_Block: WordLen code=%x\n",
-			      pbuf[sum + 2]);
+			      pbuf[2]);
 			/*
 			 * If >= 2 channels and 16 bit is supported, then
 			 * add the supported rates to our bitmap.
 			 */
-			if ((c >= 2) && (pbuf[sum + 2] & 0x01)) {
-				if (pbuf[sum + 1] & 0x01)
+			if ((c >= 2) && (pbuf[2] & 0x01)) {
+				if (pbuf[1] & 0x01)
 					rates |= SNDRV_PCM_RATE_32000;
-				if (pbuf[sum + 1] & 0x02)
+				if (pbuf[1] & 0x02)
 					rates |= SNDRV_PCM_RATE_44100;
-				if (pbuf[sum + 1] & 0x04)
+				if (pbuf[1] & 0x04)
 					rates |= SNDRV_PCM_RATE_48000;
-				if (pbuf[sum + 1] & 0x08)
+				if (pbuf[1] & 0x08)
 					rates |= SNDRV_PCM_RATE_88200;
-				if (pbuf[sum + 1] & 0x10)
+				if (pbuf[1] & 0x10)
 					rates |= SNDRV_PCM_RATE_96000;
-				if (pbuf[sum + 1] & 0x20)
+				if (pbuf[1] & 0x20)
 					rates |= SNDRV_PCM_RATE_176400;
-				if (pbuf[sum + 1] & 0x40)
+				if (pbuf[1] & 0x40)
 					rates |= SNDRV_PCM_RATE_192000;
 			}
 		}
-		sum += 3;
+		pbuf += 3;
+		size -= 3;
 	}
 	audio_info.supported_rates |= rates;
 	return 0;
@@ -126,7 +126,7 @@ Parse_HDMI_VSDB(__u8 *pbuf, __u8 size)
 
 	/* check if it's HDMI VSDB */
 	if ((pbuf[0] == 0x03) && (pbuf[1] == 0x0c) && (pbuf[2] == 0x00))
-		pr_info("Find HDMI Vendor Specific DataBlock\n");
+		pr_info("Found HDMI Vendor Specific DataBlock\n");
 	else
 		return 0;
 
@@ -147,49 +147,52 @@ Parse_HDMI_VSDB(__u8 *pbuf, __u8 size)
 		Device_Support_VIC[HDMI1080P_24_3D_FP] = 1;
 		Device_Support_VIC[HDMI720P_50_3D_FP] = 1;
 		Device_Support_VIC[HDMI720P_60_3D_FP] = 1;
-		pr_info("3D_present\n");
+		pr_info("  3D_present\n");
 	} else {
 		return 0;
 	}
 
 	if (((pbuf[index] & 0x60) == 1) || ((pbuf[index] & 0x60) == 2))
-		pr_info("3D_multi_present\n");
+		pr_info("  3D_multi_present\n");
 
 	index += (pbuf[index + 1] & 0xe0) + 2;
 	if (index > (size + 1))
 		return 0;
 
-	__inf("3D_multi_present byte(%2.2x,%2.2x)\n", pbuf[index],
+	pr_info("  3D_multi_present byte(%2.2x,%2.2x)\n", pbuf[index],
 	      pbuf[index + 1]);
 
 	return 0;
 }
 
-static __s32 ParseEDID_CEA861_extension_block(__u32 i, __u8 *EDID_Buf)
+static __s32 ParseEDID_CEA861_extension_block(__u8 *EDID_Block)
 {
 	__u32 offset;
-	if (EDID_Buf[0x80 * i + 3] & 0x40) {
+
+	if (EDID_Block[3] & 0x40) {
 		audio_info.supported_rates |=
 			SNDRV_PCM_RATE_32000 |
 			SNDRV_PCM_RATE_44100 |
 			SNDRV_PCM_RATE_48000;
 	}
-	offset = EDID_Buf[0x80 * i + 2];
+
+	offset = EDID_Block[2];
 	/* deal with reserved data block */
 	if (offset > 4)	{
 		__u8 bsum = 4;
 		while (bsum < offset) {
-			__u8 tag = EDID_Buf[0x80 * i + bsum] >> 5;
-			__u8 len = EDID_Buf[0x80 * i + bsum] & 0x1f;
+			__u8 tag = EDID_Block[bsum] >> 5;
+			__u8 len = EDID_Block[bsum] & 0x1f;
+
 			if ((len > 0) && ((bsum + len + 1) > offset)) {
-				pr_info("len or bsum size error\n");
+				pr_err("%s: len or bsum size error\n", __func__);
 				return 0;
-			} else {
-				if (tag == 1) { /* ADB */
-					Parse_AudioData_Block(EDID_Buf + 0x80 * i + bsum + 1, len);
-				} else if (tag == 3) { /* vendor specific */
-					Parse_HDMI_VSDB(EDID_Buf + 0x80 * i + bsum + 1, len);
-				}
+			} 
+
+			if (tag == 1) { /* ADB */
+				Parse_AudioData_Block(EDID_Block + bsum + 1, len);
+			} else if (tag == 3) { /* vendor specific */
+				Parse_HDMI_VSDB(EDID_Block + bsum + 1, len);
 			}
 
 			bsum += (len + 1);
@@ -302,7 +305,7 @@ __s32 ParseEDID(void)
 
 		for (i = 1; i < BlockCount; i++) {
 			if (EDID_Buf[EDID_BLOCK_LENGTH * i + 0] == 2)
-				ParseEDID_CEA861_extension_block(i, EDID_Buf);
+				ParseEDID_CEA861_extension_block(EDID_Buf + EDID_BLOCK_LENGTH * i);
 		}
 
 		dfltMode = hdmi_edid_received(EDID_Buf, BlockCount, Device_Support_VIC);
-- 
1.7.9.5

