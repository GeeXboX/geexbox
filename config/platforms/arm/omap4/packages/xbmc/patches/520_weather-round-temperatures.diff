diff -aur --unidirectional-new-file a/xbmc/utils/Weather.cpp b/xbmc/utils/Weather.cpp
--- a/xbmc/utils/Weather.cpp	2013-01-28 03:07:32.000000000 +0100
+++ b/xbmc/utils/Weather.cpp	2013-03-10 21:01:12.000000000 +0100
@@ -220,10 +220,10 @@
   return curSpeed;
 }
 
-void CWeatherJob::FormatTemperature(CStdString &text, int temp)
+void CWeatherJob::FormatTemperature(CStdString &text, const CStdString &temp, bool iscurr)
 {
-  CTemperature temperature = CTemperature::CreateFromCelsius(temp);
-  text.Format("%.0f", temperature.ToLocale());
+  double t = CTemperature::CreateFromCelsius(strtod(temp.c_str(), 0)).ToLocale();
+  text.Format("%.*f", (iscurr && fabs(t) < 9.5) ? 1 : 0, t);
 }
 
 void CWeatherJob::LoadLocalizedToken()
@@ -338,9 +338,9 @@
     m_info.currentIcon = ConstructPath(window->GetProperty("Current.OutlookIcon").asString());
     LocalizeOverview(m_info.currentConditions);
     FormatTemperature(m_info.currentTemperature,
-        strtol(window->GetProperty("Current.Temperature").asString().c_str(),0,10));
+        window->GetProperty("Current.Temperature").asString(), true);
     FormatTemperature(m_info.currentFeelsLike,
-        strtol(window->GetProperty("Current.FeelsLike").asString().c_str(),0,10));
+        window->GetProperty("Current.FeelsLike").asString());
     m_info.currentUVIndex = window->GetProperty("Current.UVIndex").asString();
     LocalizeOverview(m_info.currentUVIndex);
     int speed = ConvertSpeed(strtol(window->GetProperty("Current.Wind").asString().c_str(),0,10));
@@ -357,7 +357,7 @@
     windspeed.Format("%i %s",speed,g_langInfo.GetSpeedUnitString().c_str());
     window->SetProperty("Current.WindSpeed",windspeed);
     FormatTemperature(m_info.currentDewPoint,
-        strtol(window->GetProperty("Current.DewPoint").asString().c_str(),0,10));
+        window->GetProperty("Current.DewPoint").asString());
     if (window->GetProperty("Current.Humidity").asString().empty())
       m_info.currentHumidity.clear();
     else
@@ -371,10 +371,10 @@
       LocalizeOverviewToken(m_info.forecast[i].m_day);
       strDay.Format("Day%i.HighTemp",i);
       FormatTemperature(m_info.forecast[i].m_high,
-                    strtol(window->GetProperty(strDay).asString().c_str(),0,10));
+                    window->GetProperty(strDay).asString());
       strDay.Format("Day%i.LowTemp",i);
       FormatTemperature(m_info.forecast[i].m_low,
-                    strtol(window->GetProperty(strDay).asString().c_str(),0,10));
+                    window->GetProperty(strDay).asString());
       strDay.Format("Day%i.OutlookIcon",i);
       m_info.forecast[i].m_icon = ConstructPath(window->GetProperty(strDay).asString());
       strDay.Format("Day%i.Outlook",i);
diff -aur --unidirectional-new-file a/xbmc/utils/Weather.h b/xbmc/utils/Weather.h
--- a/xbmc/utils/Weather.h	2013-01-28 03:07:32.000000000 +0100
+++ b/xbmc/utils/Weather.h	2013-03-10 21:12:09.660763452 +0100
@@ -109,8 +109,9 @@
   /*! \brief Formats a celcius temperature into a string based on the users locale
    \param text the string to format
    \param temp the temperature (in degrees celcius).
+   \param iscurr indicates the current temperature
    */
-  void FormatTemperature(CStdString &text, int temp);
+  void FormatTemperature(CStdString &text, const CStdString &temp, bool iscurr = false);
 
   struct ci_less : std::binary_function<std::string, std::string, bool>
   {
