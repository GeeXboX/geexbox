diff --git a/drivers/video/dovefb/nxp_hdmi/tda998x.c b/drivers/video/dovefb/nxp_hdmi/tda998x.c
index c677c0f..3416c8e 100755
--- a/drivers/video/dovefb/nxp_hdmi/tda998x.c
+++ b/drivers/video/dovefb/nxp_hdmi/tda998x.c
@@ -704,6 +704,17 @@ static int tda_spy(int verbose)
  */
 
 /*
+ * Check, if video output can be activated
+ */
+static int is_ready_for_output(tda_instance *this)
+{
+   return (this->tda.rx_device_active) &&                               /* check RxSens */
+          (this->tda.power == tmPowerOn) &&                             /* check CEC didn't switch it off */
+          (this->tda.src_address != NO_PHY_ADDR) &&                     /* check EDID has been received */
+          (this->tda.hot_plug_detect == TMDL_HDMITX_HOTPLUG_ACTIVE);    /* should be useless, but legacy... */
+}
+
+/*
  * On HDCP
  */
 void hdcp_on(tda_instance *this)
@@ -750,24 +761,19 @@ void show_video(tda_instance *this)
 {
    int err = 0;
 
-   if (this->tda.rx_device_active) { /* check RxSens */
-      if (this->tda.hot_plug_detect == TMDL_HDMITX_HOTPLUG_ACTIVE) { /* should be useless, but legacy... */
-         if (this->tda.power == tmPowerOn) { /* check CEC or DSS didn't switch it off */
-            if (this->tda.src_address != NO_PHY_ADDR) { /* check EDID has been received */
-               hdcp_off(this);
-               TRY(tmdlHdmiTxSetInputOutput(this->tda.instance,         \
-                                            this->tda.setio.video_in,   \
-                                            this->tda.setio.video_out,  \
-                                            this->tda.setio.audio_in,   \
-                                            this->tda.setio.sink));
-               hdcp_on(this);
-               /*
-                 Mind that SetInputOutput disable the blue color matrix settings of tmdlHdmiTxSetBScreen ...
-                 so put tmdlHdmiTxSetBScreen (or hdcp_on) always after
-               */
-            }
-         }
-      }
+   if (is_ready_for_output(this)) {
+
+      hdcp_off(this);
+      TRY(tmdlHdmiTxSetInputOutput(this->tda.instance,         \
+                                   this->tda.setio.video_in,   \
+                                   this->tda.setio.video_out,  \
+                                   this->tda.setio.audio_in,   \
+                                   this->tda.setio.sink));
+      hdcp_on(this);
+      /*
+         Mind that SetInputOutput disable the blue color matrix settings of tmdlHdmiTxSetBScreen ...
+         so put tmdlHdmiTxSetBScreen (or hdcp_on) always after
+      */
    }
 
  TRY_DONE:
@@ -833,15 +839,9 @@ static void hdcp_check(struct work_struct *dummy)
       test=0;
       this->tda.hdcp_enable=1-this->tda.hdcp_enable;
       printk("TEST hdcp:%d\n",this->tda.hdcp_enable);
-      if (this->tda.rx_device_active) { /* check RxSens */
-         if (this->tda.hot_plug_detect == TMDL_HDMITX_HOTPLUG_ACTIVE) { /* should be useless, but legacy... */
-            if (this->tda.power == tmPowerOn) { /* check CEC didn't switch it off */
-               if (this->tda.src_address != NO_PHY_ADDR) { /* check EDID has been received */
-                  hdcp_off(this);
-                  hdcp_on(this);				  
-               }
-            }
-         }
+      if (is_ready_for_output(this)) {
+         hdcp_off(this);
+         hdcp_on(this);
       }
    }
 #endif
@@ -2092,12 +2092,14 @@ void tda19988_set_audio_rate(unsigned rate)
       }
    }
 
+#if 1
    printk(KERN_INFO "HDMI TX - setting audio rate to %d (%d -> %d)\n", 
           rate, this->tda.setio.audio_in.rate, rateCode);
+#endif
 
    down(&this->driver.sem);
 
-   if (this->tda.setio.audio_in.rate != rateCode) {
+   if (is_ready_for_output(this) && this->tda.setio.audio_in.rate != rateCode) {
 
       // Hack: temporary switch to I2S to avoid audio lockup
       TRY(tmdlHdmiTxSetAudioMute(this->tda.instance, true));
@@ -2116,11 +2118,13 @@ void tda19988_set_audio_rate(unsigned rate)
                                  this->tda.setio.audio_in, \
                                  this->tda.setio.sink));
       msleep(5);
+
+TRY_DONE:
+      tmdlHdmiTxSetAudioMute(this->tda.instance, this->tda.audio_mute);
+   } else {
+      this->tda.setio.audio_in.rate = rateCode;
    }
       
-TRY_DONE:
-   tmdlHdmiTxSetAudioMute(this->tda.instance, this->tda.audio_mute);
-
    up(&this->driver.sem);
 }
 
