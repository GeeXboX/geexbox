diff --git a/drivers/video/dovefb/nxp_hdmi/tda998x.c b/drivers/video/dovefb/nxp_hdmi/tda998x.c
index 56748e1..2e9fd06 100755
--- a/drivers/video/dovefb/nxp_hdmi/tda998x.c
+++ b/drivers/video/dovefb/nxp_hdmi/tda998x.c
@@ -71,6 +71,7 @@
 tda_instance our_instance;
 static struct cdev our_cdev, *this_cdev=&our_cdev;
 static int initialized = 0;
+static int saved_mode = -1;
 #ifdef ANDROID_DSS
 static struct omap_video_timings video_640x480at60Hz_panel_timings = {
    .x_res          = 640,
@@ -1995,41 +1996,48 @@ struct res_to_vmode resolution_to_video_format[] = {
 
 int configure_tx_inout(int x, int y, int interlaced, int hz)
 {
-	int i, ret = 0, refresh = 0;
+	int i, mode = -1, refresh = 0;
 	tda_instance* this = &our_instance;
+
 	for (i = 0 ; i < sizeof(resolution_to_video_format); i++) {
 		if (	(x == resolution_to_video_format[i].x) &&
 			(y == resolution_to_video_format[i].y) &&
 			(interlaced == resolution_to_video_format[i].interlaced) &&
 			(hz == resolution_to_video_format[i].hz)) {
-			ret = resolution_to_video_format[i].vmode;
-			printk (KERN_INFO "HDMI TX - FOUND exact resolution %d\n",ret);
-			this->tda.setio.video_in.format = ret;
-			this->tda.setio.video_out.format = ret;
-			show_video(this);
+			mode = resolution_to_video_format[i].vmode;
+			printk (KERN_INFO "HDMI TX - FOUND exact resolution %d\n",mode);
+			break;
 		}
 	}
-	/* Found exact resolution? */
-	if (ret) return ret;
-	/* Try finding resolution but with closest refresh rate */
-	for (i = 0 ; i < sizeof(resolution_to_video_format); i++) {
-		if (	(x == resolution_to_video_format[i].x) &&
-			(y == resolution_to_video_format[i].y) &&
-			(interlaced == resolution_to_video_format[i].interlaced)) {
-			if ((resolution_to_video_format[i].hz - refresh) > 
-			    (resolution_to_video_format[i].hz - hz)) {
-				ret = resolution_to_video_format[i].vmode;
-				printk (KERN_INFO "HDMI TX - Found good candidate %d (requested %dhz, found %dhz)\n",ret,hz,resolution_to_video_format[i].hz);
-				refresh = resolution_to_video_format[i].hz;
+
+	if (mode < 0) {
+		/* Try finding resolution but with closest refresh rate */
+		for (i = 0 ; i < sizeof(resolution_to_video_format); i++) {
+			if (	(x == resolution_to_video_format[i].x) &&
+				(y == resolution_to_video_format[i].y) &&
+				(interlaced == resolution_to_video_format[i].interlaced)) {
+				if ((resolution_to_video_format[i].hz - refresh) > 
+				    (resolution_to_video_format[i].hz - hz)) {
+					mode = resolution_to_video_format[i].vmode;
+					printk (KERN_INFO "HDMI TX - Found good candidate %d (requested %dhz, found %dhz)\n",mode,hz,resolution_to_video_format[i].hz);
+					refresh = resolution_to_video_format[i].hz;
+				}
 			}
 		}
 	}
-	if (ret) {
-		this->tda.setio.video_in.format = ret;
-		this->tda.setio.video_out.format = ret;
+
+	if (mode < 0)
+		return 0;
+
+	if (initialized) {
+		this->tda.setio.video_in.format = mode;
+		this->tda.setio.video_out.format = mode;
 		show_video(this);
+	} else {
+		saved_mode = mode;
 	}
-	return ret;
+
+	return 1;
 }
 
 
@@ -2403,6 +2411,14 @@ static int __init tx_init(void)
    /* sysfs_attrs */
    comm_init();
    hdmi_enable();
+
+   /* set video mode */
+   if (saved_mode >= 0) {
+	this->tda.setio.video_in.format = saved_mode;
+	this->tda.setio.video_out.format = saved_mode;
+	show_video(this);
+   }
+
    return 0;
 
  init_out:

