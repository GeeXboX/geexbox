diff --git a/sound/soc/kirkwood/kirkwood-i2s.c b/sound/soc/kirkwood/kirkwood-i2s.c
index 2125f8f..4aed9ad 100644
--- a/sound/soc/kirkwood/kirkwood-i2s.c
+++ b/sound/soc/kirkwood/kirkwood-i2s.c
@@ -72,9 +72,7 @@ static void kirkwood_i2s_dump_iec958(const char *function, struct snd_aes_iec958
 
 	printk(KERN_INFO "%s:\n", function);
 	printk("  >>> status   = ");
-	for(i=0; i < 4; i++)
-
-
+	for (i = 0; i < 6; i++)
 		printk("%02x ", iec->status[i]);
 	printk("\n");
 	printk("  >>> con/pro = %s, non-audio = %d\n",
@@ -84,6 +82,29 @@ static void kirkwood_i2s_dump_iec958(const char *function, struct snd_aes_iec958
 #endif
 
 
+static int kirkwood_i2s_iec958_put_channel_status(struct kirkwood_dma_data* priv, 
+						  struct snd_aes_iec958 *iec958)
+{
+	u32 value, old_val, change = 0;
+	int n;
+	
+	for (n = 0; n < 24; n += 4) {
+		old_val = readl(priv->io + KIRKWOOD_SPDIF_STATUS0_L + n);
+		value = *((u32 *)&iec958->status[n]);
+		writel(value, priv->io + KIRKWOOD_SPDIF_STATUS0_L + n);
+		writel(value, priv->io + KIRKWOOD_SPDIF_STATUS0_R + n);
+		change |= value ^ old_val;
+	}
+
+	value = readl(priv->io + KIRKWOOD_SPDIF_PLAYCTL) &
+			~(KIRKWOOD_SPDIF_NON_PCM | KIRKWOOD_SPDIF_REG_VALIDITY);
+	if (iec958->status[0] & IEC958_AES0_NONAUDIO)
+		value |= KIRKWOOD_SPDIF_NON_PCM | KIRKWOOD_SPDIF_REG_VALIDITY;
+	writel(value, priv->io + KIRKWOOD_SPDIF_PLAYCTL);
+	
+	return change != 0;
+}
+  
 int kirkwood_i2s_control_iec958_dflt_info(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_info *uinfo)
 {
 	DPRINTK("\n");
@@ -98,7 +119,6 @@ int kirkwood_i2s_control_iec958_dflt_get(struct snd_kcontrol *kcontrol,
 {
 	struct snd_soc_dai *cpu_dai = snd_kcontrol_chip(kcontrol);
 	struct kirkwood_dma_data *priv = snd_soc_dai_get_drvdata(cpu_dai);
-	u32 reg;
 	int n;
 
 #ifdef KWI2SDEBUG
@@ -106,20 +126,9 @@ int kirkwood_i2s_control_iec958_dflt_get(struct snd_kcontrol *kcontrol,
 	kirkwood_i2s_dump_iec958(__func__, &ucontrol->value.iec958);
 #endif
 
-#if 0
-	reg = readl(priv->io+KIRKWOOD_SPDIF_PLAYCTL);
-	ucontrol->value.iec958.status[0] &=
-		~(IEC958_AES0_PROFESSIONAL | IEC958_AES0_NONAUDIO);
-	if (reg & KIRKWOOD_SPDIF_NON_PCM)
-		ucontrol->value.iec958.status[0] |= IEC958_AES0_NONAUDIO;
-#endif
-
-	for(n=0; n<6; n++) {
-		reg = readl(priv->io + KIRKWOOD_SPDIF_STATUS0_L + (4*n));
-		ucontrol->value.iec958.status[4*n+3] = (uint8_t)(reg >> 24) & 0xff;
-		ucontrol->value.iec958.status[4*n+2] = (uint8_t)(reg >> 16) & 0xff;
-		ucontrol->value.iec958.status[4*n+1] = (uint8_t)(reg >>  8) & 0xff;
-		ucontrol->value.iec958.status[4*n+0] = (uint8_t)(reg >>  0) & 0xff;
+	for (n = 0; n < 24; n += 4) {
+		*((u32 *)&ucontrol->value.iec958.status[n]) =
+			readl(priv->io + KIRKWOOD_SPDIF_STATUS0_L + n);
 	}
 
 	return 0;
@@ -130,30 +139,13 @@ int kirkwood_i2s_control_iec958_dflt_put(struct snd_kcontrol *kcontrol,
 {
 	struct snd_soc_dai *cpu_dai = snd_kcontrol_chip(kcontrol);
 	struct kirkwood_dma_data *priv = snd_soc_dai_get_drvdata(cpu_dai);
-	u32 reg, nreg;
-	int n;
 
 #ifdef KWI2SDEBUG
 	DPRINTK("kcontrol = %p, ucontrol = %p\n", kcontrol, ucontrol);
 	kirkwood_i2s_dump_iec958(__func__, &ucontrol->value.iec958);
 #endif
 
-	for(n=0; n<6; n++) {
-		reg = (ucontrol->value.iec958.status[4*n+3] << 24) |
-		      (ucontrol->value.iec958.status[4*n+2] << 16) |
-		      (ucontrol->value.iec958.status[4*n+1] << 8) |
-		      (ucontrol->value.iec958.status[4*n+0]);
-		writel(reg, priv->io + KIRKWOOD_SPDIF_STATUS0_L + (4*n));
-		writel(reg, priv->io + KIRKWOOD_SPDIF_STATUS0_R + (4*n));
-	}
-
-	reg  = readl(priv->io+KIRKWOOD_SPDIF_PLAYCTL);
-	nreg = reg & ~(KIRKWOOD_SPDIF_NON_PCM | KIRKWOOD_SPDIF_REG_VALIDITY);
-	if (ucontrol->value.iec958.status[0] & IEC958_AES0_NONAUDIO)
-		nreg |= KIRKWOOD_SPDIF_NON_PCM | KIRKWOOD_SPDIF_REG_VALIDITY;
-	writel(nreg, priv->io+KIRKWOOD_SPDIF_PLAYCTL);
-	
-	return (nreg != reg);
+	return kirkwood_i2s_iec958_put_channel_status(priv, &ucontrol->value.iec958);
 }
 
 const struct snd_kcontrol_new kirkwood_i2s_iec958_controls[] = {
@@ -251,6 +243,58 @@ static inline void kirkwood_set_rate(struct kirkwood_dma_data* priv,
 	}
 }
 
+static void inline kirkwood_i2s_set_channel_status(
+  struct kirkwood_dma_data* priv, unsigned long rate, int non_audio, unsigned long i2s_control)
+{
+	int n;
+	struct snd_aes_iec958 iec958;
+
+	static struct { unsigned rate; unsigned char rate_codes[2]; } rate_table[] =
+	{
+		{  22050, { 0x04, 0xb0 } },
+		{  32000, { 0x03, 0xc0 } },
+		{  44100, { 0x00, 0xf0 } },
+		{  48000, { 0x02, 0xd0 } },
+		{  88200, { 0x08, 0x70 } },
+		{  96000, { 0x0a, 0x50 } },
+		{ 176400, { 0x0c, 0x30 } },
+		{ 192000, { 0x0e, 0x10 } },
+		{      0, { 0x01, 0x00 } }	/* not indicated */
+	};
+
+	for (n = 0; rate_table[n].rate && rate_table[n].rate != rate; n++)	;
+  
+	memset(&iec958, 0, sizeof(iec958));
+	iec958.status[0] = (non_audio) ? 0x06 : 0x04;		/* General control and mode information */
+	iec958.status[1] = 0x82;				/* Category code */
+	/*iec958.status[2] = 0x00;*/				/* Source and channel number */
+	iec958.status[3] = rate_table[n].rate_codes[0];	/* Sampling frequency and clock accuracy */
+	/*iec958.status[4] = 0x00;*/				/* Word length and original sampling frequency */
+	/*iec958.status[5] = 0x00;*/				/* CGMS-A */
+  
+	if (!non_audio) {
+		iec958.status[4] = rate_table[n].rate_codes[1];
+		
+		switch (i2s_control & KIRKWOOD_I2S_CTL_SIZE_MASK) {
+		case KIRKWOOD_I2S_CTL_SIZE_16:
+			iec958.status[4] |= 0x02;
+			break;
+		case KIRKWOOD_I2S_CTL_SIZE_20:
+			iec958.status[4] |= 0x0a;
+			break;
+		case KIRKWOOD_I2S_CTL_SIZE_24:
+			iec958.status[4] |= 0x0b;
+			break;
+		}
+	}
+  
+#ifdef KWI2SDEBUG
+	kirkwood_i2s_dump_iec958(__func__, &iec958);
+#endif
+
+	kirkwood_i2s_iec958_put_channel_status(priv, &iec958);
+}
+
 static int kirkwood_i2s_startup(struct snd_pcm_substream *substream,
 		struct snd_soc_dai *dai)
 {
@@ -265,8 +309,9 @@ static int kirkwood_i2s_hw_params(struct snd_pcm_substream *substream,
 				 struct snd_soc_dai *dai)
 {
 	struct kirkwood_dma_data *priv = snd_soc_dai_get_drvdata(dai);
-	unsigned int i2s_reg, reg, n;
+	unsigned int i2s_reg, reg;
 	unsigned long i2s_value, value;
+
 	priv->i2s = priv->use_i2s;
 	priv->spdif = priv->use_spdif;
 	priv->iec958 = 0;
@@ -317,7 +362,6 @@ static int kirkwood_i2s_hw_params(struct snd_pcm_substream *substream,
 		priv->spdif = 0;
 		break;
 	case SNDRV_PCM_FORMAT_IEC958_SUBFRAME_LE:
-	case SNDRV_PCM_FORMAT_IEC958_SUBFRAME_BE:
 		i2s_value |= KIRKWOOD_I2S_CTL_SIZE_16;
 		value |= KIRKWOOD_PLAYCTL_SIZE_16_C;
 		priv->i2s = 0;
@@ -338,16 +382,9 @@ static int kirkwood_i2s_hw_params(struct snd_pcm_substream *substream,
 		else
 			value |= KIRKWOOD_PLAYCTL_MONO_OFF;
 
-		// enforce PCM mode, when not sending non-linear bitstreams
-		if (priv->spdif && !priv->iec958) {
-			writel(readl(priv->io+KIRKWOOD_SPDIF_PLAYCTL) &
-				~(KIRKWOOD_SPDIF_NON_PCM | KIRKWOOD_SPDIF_REG_VALIDITY),
-			       priv->io+KIRKWOOD_SPDIF_PLAYCTL);
-
-			for (n=0; n<6; n++) {
-				writel(0, priv->io + KIRKWOOD_SPDIF_STATUS0_L + (4*n));
-				writel(0, priv->io + KIRKWOOD_SPDIF_STATUS0_R + (4*n));
-			}
+		if (priv->spdif) {
+			kirkwood_i2s_set_channel_status(
+			  priv, params_rate(params), priv->iec958, i2s_value);
 		}
 	}
 
