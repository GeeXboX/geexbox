diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecVMETA.cpp b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecVMETA.cpp
index ad9a46f..2cc703f 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecVMETA.cpp
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecVMETA.cpp
@@ -464,7 +464,7 @@ int CDVDVideoCodecVMETA::Decode(uint8_t *pData, int iSize, double dts, double pt
   int iSize2nd = 0;
   uint32_t bufOfs = 0;
   bool bInjectHdr = false;
-  static const uint8_t VC1FrameStartCode[4]  = { 0x00, 0x00, 0x01, 0x0d };
+  const uint32_t VC1FrameStartCode = htobe32(0x0000010d);
 #ifdef ENABLE_PTS
   int numStreamBufs = 0;
 #endif
@@ -558,7 +558,7 @@ int CDVDVideoCodecVMETA::Decode(uint8_t *pData, int iSize, double dts, double pt
       {
         if (bInjectHdr)
         {
-          *(uint32_t *)pStream->pBuf = *(uint32_t *)VC1FrameStartCode;
+          *(uint32_t *)pStream->pBuf = VC1FrameStartCode;
           pStream->nOffset = 0;
         }
         else
@@ -862,9 +862,6 @@ bool CDVDVideoCodecVMETA::ClearPicture(DVDVideoPicture *pDvdVideoPicture)
 
 void CDVDVideoCodecVMETA::Reset(void)
 {
-  IppVmetaPicture *pPicture;
-  IppVmetaBitstream *pStream;
-
   if (!m_is_open)
     return;
 
@@ -872,6 +869,7 @@ void CDVDVideoCodecVMETA::Reset(void)
   m_pts_queue.flushAll();
 #endif
 
+  IppVmetaBitstream *pStream = 0;
   while (m_input_ready.getHead(pStream))
   {
     CLEAR_STREAMBUF(pStream);
@@ -891,6 +889,7 @@ void CDVDVideoCodecVMETA::Reset(void)
 
   m_numBufSubmitted = 0;
   
+  IppVmetaPicture *pPicture = 0;
   while (m_output_ready.getHead(pPicture))
     m_output_available.putTail(pPicture);
 
