diff -Naur a/xbmc/Application.cpp b/xbmc/Application.cpp
--- a/xbmc/Application.cpp	2012-07-11 21:59:17.000000000 +0200
+++ b/xbmc/Application.cpp	2012-08-12 11:53:57.924949118 +0200
@@ -354,6 +354,10 @@
 
 #define MAX_FFWD_SPEED 5
 
+#if defined(TARGET_MARVELL_DOVE)
+#define GPU_BACKOFF_THRESHOLD 3 // Skip 2 out of 3 renders when playback
+#endif
+
 //extern IDirectSoundRenderer* m_pAudioDecoder;
 CApplication::CApplication(void)
   : m_pPlayer(NULL)
@@ -377,6 +381,10 @@
   m_nextPlaylistItem = -1;
   m_bPlaybackStarting = false;
   m_skinReloading = false;
+#if defined(TARGET_MARVELL_DOVE)
+  m_backoffGpu = false;
+  m_backoffCounter = 0;
+#endif
 
 #ifdef HAS_GLX
   XInitThreads();
@@ -1961,22 +1969,40 @@
 bool CApplication::RenderNoPresent()
 {
   MEASURE_FUNCTION;
+#if defined(TARGET_MARVELL_DOVE)
+  m_backoffGpu = false;
+#endif
 
 // DXMERGE: This may have been important?
 //  g_graphicsContext.AcquireCurrentContext();
 
   g_graphicsContext.Lock();
 
+#if defined(TARGET_MARVELL_DOVE)
+  if (((m_backoffCounter % GPU_BACKOFF_THRESHOLD)) && IsPlaying() && !IsPaused())
+    m_backoffGpu = true;
+
+  ++m_backoffCounter;
+#endif
+
   // dont show GUI when playing full screen video
   if (g_graphicsContext.IsFullScreenVideo())
   {
     if (m_bPresentFrame && IsPlaying() && !IsPaused())
     {
       ResetScreenSaver();
+#if defined(TARGET_MARVELL_DOVE)
+      g_renderManager.Present(m_backoffGpu);
+#else
       g_renderManager.Present();
+#endif
     }
     else
+#if defined(TARGET_MARVELL_DOVE)
+      g_renderManager.RenderUpdate(true, m_backoffGpu);
+#else
       g_renderManager.RenderUpdate(true);
+#endif
 
     // close window overlays
     CGUIDialog *overlay = (CGUIDialog *)g_windowManager.GetWindow(WINDOW_DIALOG_VIDEO_OVERLAY);
@@ -1986,7 +2012,12 @@
 
   }
 
-  bool hasRendered = g_windowManager.Render();
+  bool hasRendered;
+#if defined(TARGET_MARVELL_DOVE)
+  hasRendered = ( m_backoffGpu ) ? true : g_windowManager.Render();
+#else
+  hasRendered = g_windowManager.Render();
+#endif
 
   // if we're recording an audio stream then show blinking REC
   if (!g_graphicsContext.IsFullScreenVideo())
@@ -2168,8 +2199,13 @@
   }
   m_lastFrameTime = XbmcThreads::SystemClockMillis();
 
+#if defined(TARGET_MARVELL_DOVE)
+  if (flip && ! m_backoffGpu )
+#else
   if (flip)
+#endif
     g_graphicsContext.Flip(dirtyRegions);
+
   CTimeUtils::UpdateFrameTime(flip);
 
   g_renderManager.UpdateResolution();
diff -Naur a/xbmc/Application.h b/xbmc/Application.h
--- a/xbmc/Application.h	2012-07-11 21:58:21.000000000 +0200
+++ b/xbmc/Application.h	2012-08-12 11:55:29.455083366 +0200
@@ -295,6 +295,10 @@
   void LoadSkin(const boost::shared_ptr<ADDON::CSkinInfo>& skin);
 
   bool m_skinReloading; // if true we disallow LoadSkin until ReloadSkin is called
+#if defined(TARGET_MARVELL_DOVE)
+  bool m_backoffGpu;
+  int m_backoffCounter;
+#endif
 
   friend class CApplicationMessenger;
 #if defined(__APPLE__) && defined(__arm__)
diff -Naur a/xbmc/cores/VideoRenderers/RenderManager.cpp b/xbmc/cores/VideoRenderers/RenderManager.cpp
--- a/xbmc/cores/VideoRenderers/RenderManager.cpp	2012-08-12 11:37:40.000000000 +0200
+++ b/xbmc/cores/VideoRenderers/RenderManager.cpp	2012-08-12 12:22:45.627483126 +0200
@@ -273,7 +273,11 @@
   m_presentevent.Set();
 }
 
+#if defined(TARGET_MARVELL_DOVE)
+void CXBMCRenderManager::RenderUpdate(bool clear, bool backoffGpu, DWORD flags, DWORD alpha)
+#else
 void CXBMCRenderManager::RenderUpdate(bool clear, DWORD flags, DWORD alpha)
+#endif
 {
   { CRetakeLock<CExclusiveLock> lock(m_sharedSection);
     if (!m_pRenderer)
@@ -288,13 +292,22 @@
     }
   }
 
+#if defined(TARGET_MARVELL_DOVE)
+  if ( backoffGpu )
+    return;
+#endif
+
   if (g_advancedSettings.m_videoDisableBackgroundDeinterlace)
   {
     CSharedLock lock(m_sharedSection);
     PresentSingle(clear, flags, alpha);
   }
   else
+#if defined(TARGET_MARVELL_DOVE)
+    Render(clear, false, flags, alpha);
+#else
     Render(clear, flags, alpha);
+#endif
 
   m_presentevent.Set();
 }
@@ -613,10 +626,16 @@
   return fps;
 }
 
+#if defined(TARGET_MARVELL_DOVE)
+void CXBMCRenderManager::Render(bool clear, bool backoffGpu, DWORD flags, DWORD alpha)
+#else
 void CXBMCRenderManager::Render(bool clear, DWORD flags, DWORD alpha)
+#endif
 {
   CSharedLock lock(m_sharedSection);
-
+#if defined(TARGET_MARVELL_DOVE)
+  if ( ! backoffGpu ) {
+#endif
   if( m_presentmethod == PRESENT_METHOD_BOB )
     PresentBob(clear, flags, alpha);
   else if( m_presentmethod == PRESENT_METHOD_WEAVE )
@@ -627,9 +646,17 @@
     PresentSingle(clear, flags, alpha);
 
   m_overlays.Render();
+#if defined(TARGET_MARVELL_DOVE)
+  } else
+    m_presentstep = PRESENT_IDLE;
+#endif
 }
 
+#if defined(TARGET_MARVELL_DOVE)
+void CXBMCRenderManager::Present(bool backoffGpu)
+#else
 void CXBMCRenderManager::Present()
+#endif
 {
   { CRetakeLock<CExclusiveLock> lock(m_sharedSection);
     if (!m_pRenderer)
@@ -644,7 +671,11 @@
     }
   }
 
+#if defined(TARGET_MARVELL_DOVE)
+  Render(true, backoffGpu, 0, 255);
+#else
   Render(true, 0, 255);
+#endif
 
   /* wait for this present to be valid */
   if(g_graphicsContext.IsFullScreenVideo())
diff -Naur a/xbmc/cores/VideoRenderers/RenderManager.h b/xbmc/cores/VideoRenderers/RenderManager.h
--- a/xbmc/cores/VideoRenderers/RenderManager.h	2012-08-12 11:37:40.000000000 +0200
+++ b/xbmc/cores/VideoRenderers/RenderManager.h	2012-08-12 12:00:04.775487179 +0200
@@ -59,7 +59,11 @@
   void GetVideoRect(CRect &source, CRect &dest) { CSharedLock lock(m_sharedSection); if (m_pRenderer) m_pRenderer->GetVideoRect(source, dest); };
   float GetAspectRatio() { CSharedLock lock(m_sharedSection); if (m_pRenderer) return m_pRenderer->GetAspectRatio(); else return 1.0f; };
   void Update(bool bPauseDrawing);
+#if defined(TARGET_MARVELL_DOVE)
+  void RenderUpdate(bool clear, bool backoffGpu = false, DWORD flags = 0, DWORD alpha = 255);
+#else
   void RenderUpdate(bool clear, DWORD flags = 0, DWORD alpha = 255);
+#endif
   void SetupScreenshot();
 
   CRenderCapture* AllocRenderCapture();
@@ -181,15 +185,23 @@
   // Supported pixel formats, can be called before configure
   std::vector<ERenderFormat> SupportedFormats();
 
+#if defined(TARGET_MARVELL_DOVE)
+  void Present(bool backoffGpu=false);
+#else
   void Present();
+#endif
   void Recover(); // called after resolution switch if something special is needed
 
   CSharedSection& GetSection() { return m_sharedSection; };
 
   void RegisterRenderUpdateCallBack(const void *ctx, RenderUpdateCallBackFn fn);
 
 protected:
+#if defined(TARGET_MARVELL_DOVE)
+  void Render(bool clear, bool backoffGpu, DWORD flags, DWORD alpha);
+#else
   void Render(bool clear, DWORD flags, DWORD alpha);
+#endif
 
   void PresentSingle(bool clear, DWORD flags, DWORD alpha);
   void PresentWeave(bool clear, DWORD flags, DWORD alpha);
