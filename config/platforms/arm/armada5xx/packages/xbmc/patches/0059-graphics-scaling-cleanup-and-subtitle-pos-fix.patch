diff -aur --unidirectional-new-file a/xbmc/guilib/GraphicContext.cpp b/xbmc/guilib/GraphicContext.cpp
--- a/xbmc/guilib/GraphicContext.cpp	2013-02-17 08:57:29.140103297 +0100
+++ b/xbmc/guilib/GraphicContext.cpp	2013-02-16 16:24:05.000000000 +0100
@@ -612,6 +612,15 @@
   return g_settings.m_ResInfo[m_Resolution];
 }
 
+#ifdef HAS_MARVELL_DOVE
+GRAPHICS_SCALING CGraphicContext::getGraphicsScale()
+{
+  int value = g_guiSettings.GetInt("videoscreen.graphics_scaling");
+
+  return (value == -1) ? GR_SCALE_100 : (GRAPHICS_SCALING)value;
+}
+#endif
+
 void CGraphicContext::SetScalingResolution(const RESOLUTION_INFO &res, bool needsScaling)
 {
   Lock();
@@ -627,26 +636,21 @@
     float fToHeight;
 
 #ifdef HAS_MARVELL_DOVE
-    GRAPHICS_SCALING scale = (GRAPHICS_SCALING) g_guiSettings.GetInt("videoscreen.graphics_scaling");
-    if (scale == -1) /* not configured */
-      scale = GR_SCALE_100;
-    {
-      fFromWidth = (float)res.iWidth;
-      fFromHeight = (float)res.iHeight;
-      fToPosX = (float)g_settings.m_ResInfo[m_Resolution].Overscan.left*100/scale;
-      fToPosY = (float)g_settings.m_ResInfo[m_Resolution].Overscan.top*100/scale;
-      fToWidth = (float)g_settings.m_ResInfo[m_Resolution].Overscan.right*100/scale - fToPosX;
-      fToHeight = (float)g_settings.m_ResInfo[m_Resolution].Overscan.bottom*100/scale - fToPosY;
-    }
+    GRAPHICS_SCALING scale = getGraphicsScale();
+
+    fFromWidth = (float)res.iWidth;
+    fFromHeight = (float)res.iHeight;
+    fToPosX = (float)g_settings.m_ResInfo[m_Resolution].Overscan.left * 100 / scale;
+    fToPosY = (float)g_settings.m_ResInfo[m_Resolution].Overscan.top * 100 / scale;
+    fToWidth = (float)g_settings.m_ResInfo[m_Resolution].Overscan.right * 100 / scale - fToPosX;
+    fToHeight = (float)g_settings.m_ResInfo[m_Resolution].Overscan.bottom * 100 / scale - fToPosY;
 #else
-    {
-      fFromWidth = (float)res.iWidth;
-      fFromHeight = (float)res.iHeight;
-      fToPosX = (float)g_settings.m_ResInfo[m_Resolution].Overscan.left;
-      fToPosY = (float)g_settings.m_ResInfo[m_Resolution].Overscan.top;
-      fToWidth = (float)g_settings.m_ResInfo[m_Resolution].Overscan.right - fToPosX;
-      fToHeight = (float)g_settings.m_ResInfo[m_Resolution].Overscan.bottom - fToPosY;
-    }
+    fFromWidth = (float)res.iWidth;
+    fFromHeight = (float)res.iHeight;
+    fToPosX = (float)g_settings.m_ResInfo[m_Resolution].Overscan.left;
+    fToPosY = (float)g_settings.m_ResInfo[m_Resolution].Overscan.top;
+    fToWidth = (float)g_settings.m_ResInfo[m_Resolution].Overscan.right - fToPosX;
+    fToHeight = (float)g_settings.m_ResInfo[m_Resolution].Overscan.bottom - fToPosY;
 #endif
 
     if(!g_guiSkinzoom) // lookup gui setting if we didn't have it already
diff -aur --unidirectional-new-file a/xbmc/guilib/GraphicContext.h b/xbmc/guilib/GraphicContext.h
--- a/xbmc/guilib/GraphicContext.h	2013-01-28 03:07:32.000000000 +0100
+++ b/xbmc/guilib/GraphicContext.h	2013-02-16 16:24:02.000000000 +0100
@@ -110,6 +110,9 @@
 
   // output scaling
   const RESOLUTION_INFO &GetResInfo() const;
+#ifdef HAS_MARVELL_DOVE
+  static GRAPHICS_SCALING getGraphicsScale();
+#endif
   void SetRenderingResolution(const RESOLUTION_INFO &res, bool needsScaling);  ///< Sets scaling up for rendering
   void SetScalingResolution(const RESOLUTION_INFO &res, bool needsScaling);    ///< Sets scaling up for skin loading etc.
   float GetScalingPixelRatio() const;
diff -aur --unidirectional-new-file a/xbmc/video/windows/GUIWindowFullScreen.cpp b/xbmc/video/windows/GUIWindowFullScreen.cpp
--- a/xbmc/video/windows/GUIWindowFullScreen.cpp	2013-02-17 08:57:29.144103297 +0100
+++ b/xbmc/video/windows/GUIWindowFullScreen.cpp	2013-02-16 16:11:53.000000000 +0100
@@ -1082,11 +1082,6 @@
     CStdString subtitleText = "How now brown cow";
     if (g_application.m_pPlayer->GetCurrentSubtitle(subtitleText))
     {
-#ifdef HAS_MARVELL_DOVE
-      GRAPHICS_SCALING scale = (GRAPHICS_SCALING) g_guiSettings.GetInt("videoscreen.graphics_scaling");
-      if (scale == -1) /* not configured */
-        scale = GR_SCALE_100;
-#endif
       // Remove HTML-like tags from the subtitles until
       subtitleText.Replace("\\r", "");
       subtitleText.Replace("\r", "");
@@ -1111,6 +1106,7 @@
       g_graphicsContext.SetRenderingResolution(g_graphicsContext.GetResInfo(), false);
 
 #ifdef HAS_MARVELL_DOVE
+      GRAPHICS_SCALING scale = g_graphicsContext.getGraphicsScale();
       float maxWidth = (float) g_settings.m_ResInfo[res].Overscan.right*100/scale - g_settings.m_ResInfo[res].Overscan.left;
 #else
       float maxWidth = (float) g_settings.m_ResInfo[res].Overscan.right - g_settings.m_ResInfo[res].Overscan.left;
diff -aur --unidirectional-new-file a/xbmc/windowing/X11/XRandR.cpp b/xbmc/windowing/X11/XRandR.cpp
--- a/xbmc/windowing/X11/XRandR.cpp	2013-02-17 08:57:29.796103270 +0100
+++ b/xbmc/windowing/X11/XRandR.cpp	2013-02-17 09:04:42.768085162 +0100
@@ -28,8 +28,7 @@
 #include "PlatformInclude.h"
 #ifdef TARGET_MARVELL_DOVE
 #include <sys/mman.h>
-#include "guilib/Resolution.h"
-#include "settings/GUISettings.h"
+#include "guilib/GraphicContext.h"
 #endif
 #include "utils/XBMCTinyXML.h"
 #include "../xbmc/utils/log.h"
@@ -176,13 +175,13 @@
   unsigned int zoomed;
   unsigned int gr_size;
   int zx,zy;
-  GRAPHICS_SCALING scale = (GRAPHICS_SCALING) g_guiSettings.GetInt("videoscreen.graphics_scaling");
-  if (scale == -1) scale=GR_SCALE_100;
+  GRAPHICS_SCALING scale = g_graphicsContext.getGraphicsScale();
+  
   if((fd = open("/dev/mem", O_RDWR | O_SYNC)) == -1) {
         CLog::Log(LOGERROR, "XRANDR: Unable to open /dev/mem");
 	return;
   }
-  fflush(stdout);
+
   map_base = mmap(0, MAP_SIZE, PROT_READ | PROT_WRITE, MAP_SHARED, fd, target_page);
   zoomed = * (unsigned int *) (map_base + 0x108);
   zx = zoomed & 0xffff;
diff -aur --unidirectional-new-file a/xbmc/cores/VideoRenderers/DoveOverlayRenderer.cpp b/xbmc/cores/VideoRenderers/DoveOverlayRenderer.cpp
--- a/xbmc/cores/VideoRenderers/DoveOverlayRenderer.cpp	2013-02-17 13:18:19.783448743 +0100
+++ b/xbmc/cores/VideoRenderers/DoveOverlayRenderer.cpp	2013-02-17 14:02:31.499337841 +0100
@@ -166,8 +166,7 @@
     }
 
     /* Scaler is set differently when using graphics scaler */
-    GRAPHICS_SCALING scale = (GRAPHICS_SCALING) g_guiSettings.GetInt("videoscreen.graphics_scaling");
-    if (scale == GR_SCALE_100 || scale == -1)
+    if (g_graphicsContext.getGraphicsScale() == GR_SCALE_100)
     {
       interpolation = 3;  // bi-linear interpolation
       if (ioctl(m_overlayfd, DOVEFB_IOCTL_SET_INTERPOLATION_MODE, &interpolation) != 0)
diff -aur --unidirectional-new-file a/xbmc/cores/VideoRenderers/OverlayRenderer.cpp b/xbmc/cores/VideoRenderers/OverlayRenderer.cpp
--- a/xbmc/cores/VideoRenderers/OverlayRenderer.cpp	2013-01-28 03:07:32.000000000 +0100
+++ b/xbmc/cores/VideoRenderers/OverlayRenderer.cpp	2013-02-24 08:46:36.399445591 +0100
@@ -279,6 +279,15 @@
 
   }
 
+#ifdef HAS_MARVELL_DOVE
+  GRAPHICS_SCALING scale = g_graphicsContext.getGraphicsScale();
+  
+  state.x = (state.x * 100) / scale;
+  state.y = (state.y * 100) / scale;
+  state.width = (state.width * 100) /scale;
+  state.height = (state.height *100) /scale;
+#endif
+
   o->Render(state);
 }
 
