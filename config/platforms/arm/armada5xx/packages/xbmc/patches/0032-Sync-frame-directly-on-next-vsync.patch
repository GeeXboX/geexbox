From bf4e4a5c6f8c1d18e6107338f8fddc9dd3e034d5 Mon Sep 17 00:00:00 2001
From: Rabeeh Khoury <rabeeh@solid-run.com>
Date: Sat, 13 Oct 2012 15:09:09 +0200
Subject: [PATCH 1/4] Sync frame directly on next vsync

Typically the original Marvell code would queue frames and on each vsync it would.
In XBMC case, showing frame should be on the next vsync.

This patch doesn't use the original Marvell queue but bypasses it force fb driver to present the frame on next vsync
Signed-off-by: Rabeeh Khoury <rabeeh@solid-run.com>
---
 xbmc/cores/VideoRenderers/DoveOverlayRenderer.cpp |   25 +++++++++++++--------
 1 file changed, 16 insertions(+), 9 deletions(-)

diff --git a/xbmc/cores/VideoRenderers/DoveOverlayRenderer.cpp b/xbmc/cores/VideoRenderers/DoveOverlayRenderer.cpp
index bfadc31..9c5aaa6 100644
--- a/xbmc/cores/VideoRenderers/DoveOverlayRenderer.cpp
+++ b/xbmc/cores/VideoRenderers/DoveOverlayRenderer.cpp
@@ -298,6 +298,8 @@ void CDoveOverlayRenderer::ReleaseImage(int source, bool preserve)
 
 void CDoveOverlayRenderer::FlipPage(int source)
 {
+  unsigned phy_addr[3];
+  bool m_next_frame_present = false;
   if (!m_bConfigured)
     return;
 
@@ -323,10 +325,16 @@ void CDoveOverlayRenderer::FlipPage(int source)
   }
 
   //ioctl by Solid-Run not in marvel kernel
-  //if(ioctl(m_overlayfd, DOVEFB_IOCTL_NEXT_FRAME_PRESENT, &m_SoftPicture[m_currentBuffer].buf) != 0)
-
-  if(ioctl(m_overlayfd, DOVEFB_IOCTL_FLIP_VID_BUFFER, &m_overlaySurface) != 0) 
-    CLog::Log(LOGERROR, "%s::%s - Error flipping\n", CLASSNAME, __func__);
+  if (m_format == RENDER_FMT_UYVY422) /* Typically frames from vMeta */
+  {
+    phy_addr[0] = (unsigned int) pPicture->nPhyAddr;
+    phy_addr[1] = (unsigned int) pPicture->nPhyAddr + (unsigned int) pPicture->nBufSize/2;
+    phy_addr[2] = (unsigned int )pPicture->nPhyAddr + (unsigned int) pPicture->nBufSize/2 + (unsigned int) pPicture->nBufSize/4;
+    m_next_frame_present = true;
+    if(ioctl(m_overlayfd, DOVEFB_IOCTL_NEXT_FRAME_PRESENT, &phy_addr) != 0)
+      CLog::Log(LOGERROR, "%s::%s - Error flipping\n", CLASSNAME, __func__);
+  } else if(ioctl(m_overlayfd, DOVEFB_IOCTL_FLIP_VID_BUFFER, &m_overlaySurface) != 0)
+      CLog::Log(LOGERROR, "%s::%s - Error flipping\n", CLASSNAME, __func__);
 
   if (m_enabled == 0) 
   {
@@ -334,15 +342,14 @@ void CDoveOverlayRenderer::FlipPage(int source)
 
     if (ioctl(m_overlayfd, DOVEFB_IOCTL_SWITCH_VID_OVLY, &m_enabled) == -1)
       CLog::Log(LOGERROR, "%s::%s - Failed to enable video overlay\n", CLASSNAME, __func__);
-
   }
 
   /*
    * Is only needed for DOVEFB_IOCTL_NEXT_FRAME_PRESENT
-   *
-  if (ioctl(m_overlayfd, DOVEFB_IOCTL_WAIT_VSYNC, 0) != 0)
-    CLog::Log(LOGERROR, "%s::%s - Error waiting for vsync\n", CLASSNAME, __func__);
-  */
+   */
+  if (m_next_frame_present == true)
+    if (ioctl(m_overlayfd, DOVEFB_IOCTL_WAIT_VSYNC, 0) != 0)
+      CLog::Log(LOGERROR, "%s::%s - Error waiting for vsync\n", CLASSNAME, __func__);
 
   if( source >= 0 && source < NUM_BUFFERS )
     m_currentBuffer = source;
-- 
1.7.9.5

