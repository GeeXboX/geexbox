diff -aur --unidirectional-new-file a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecVMETA.cpp b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecVMETA.cpp
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecVMETA.cpp	2013-04-18 00:07:43.222629320 +0200
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecVMETA.cpp	2013-04-17 23:46:10.000000000 +0200
@@ -267,7 +267,7 @@
     IppVmetaBitstream *pStream = (IppVmetaBitstream *)malloc(sizeof(IppVmetaBitstream));
     memset(pStream, 0, sizeof(IppVmetaBitstream));
 
-    pStream->pBuf = (Ipp8u *)m_DllVMETA->vdec_os_api_dma_alloc_cached(
+    pStream->pBuf = (Ipp8u *)m_DllVMETA->vdec_os_api_dma_alloc_writecombine(
                                 STREAM_VDECBUF_SIZE, VMETA_STRM_BUF_ALIGN, &pStream->nPhyAddr);
     pStream->nBufSize = STREAM_VDECBUF_SIZE;
     CLEAR_STREAMBUF(pStream);
@@ -408,7 +408,6 @@
   paddingLen = PADDING_LEN(m_extrasize);
   if (paddingLen)
     memset(pStream->pBuf + m_extrasize, PADDING_BYTE, paddingLen);
-  m_DllVMETA->vdec_os_api_flush_cache (pStream->pBuf, m_extrasize + paddingLen, DMA_TO_DEVICE);
 
   retCodec = m_DllVMETA->DecoderPushBuffer_Vmeta(IPP_VMETA_BUF_TYPE_STRM, pStream, m_pDecState);
   if(retCodec != IPP_STATUS_NOERR)
@@ -476,7 +475,6 @@
         memcpy(pStream->pBuf, pData, std::min<uint32_t>(dataLen, iSize));
         dataLen = (uint32_t)iSize;
       }
-      m_DllVMETA->vdec_os_api_flush_cache (pStream->pBuf, std::min<uint32_t>(dataLen, iSize), DMA_TO_DEVICE);
 
       // did it fit in ?
       if (PADDED_SIZE(dataLen) > pStream->nBufSize)
@@ -484,7 +482,7 @@
         m_DllVMETA->vdec_os_api_dma_free(pStream->pBuf);
 
         dataLen = ALIGN_SIZE(dataLen, 65536) + 65536;
-        pStream->pBuf = (Ipp8u *)m_DllVMETA->vdec_os_api_dma_alloc_cached(
+        pStream->pBuf = (Ipp8u *)m_DllVMETA->vdec_os_api_dma_alloc_writecombine(
                               dataLen, VMETA_STRM_BUF_ALIGN, &pStream->nPhyAddr);
         pStream->nBufSize = dataLen;
         pStream->nDataLen = 0;
@@ -499,7 +497,6 @@
           memcpy(pStream->pBuf, pData, iSize);
           dataLen = (uint32_t)iSize;
         }
-        m_DllVMETA->vdec_os_api_flush_cache (pStream->pBuf, std::min<uint32_t>(dataLen, iSize), DMA_TO_DEVICE);
       }
       
       if (dataLen)
@@ -508,10 +505,8 @@
         pStream->nDataLen = dataLen;
 
         dataLen = PADDING_LEN(dataLen);
-        if (dataLen) {
+        if (dataLen)
           memset(pStream->pBuf + pStream->nDataLen, PADDING_BYTE, dataLen);
-          m_DllVMETA->vdec_os_api_flush_cache (pStream->pBuf + pStream->nDataLen, dataLen, DMA_TO_DEVICE);
-        }
         
         if( !m_input_ready.putTail(pStream) )
         {
@@ -686,7 +681,6 @@
         pPicture->pBuf = (Ipp8u *)m_DllVMETA->vdec_os_api_dma_alloc(
                             m_VDecInfo.seq_info.dis_buf_size, VMETA_DIS_BUF_ALIGN, &(pPicture->nPhyAddr));
         pPicture->nBufSize = m_VDecInfo.seq_info.dis_buf_size;
-        //printf("vdec_os_api_dma_alloc pPicture->pBuf 0x%08x nr %d\n", (unsigned int)pPicture->pBuf, (int)pPicture->pUsrData0);
       }
 
       if (!pPicture->pBuf)

